{"version":3,"sources":["C:/Users/uttam.bhagat/Desktop/alert-project/src/$_gendir lazy","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/main/services/alert-config-service.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/main/services/cav-config.service.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/main/services/cav-mail-sms-configuration-service.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/main/services/cav-top-panel-navigation.service.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/app.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/app.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/app.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/app.module.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/active-alert.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/history-data.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/history-filters.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/maintenance-data.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/rule-data.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/setting-data.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/timer.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/active-alert-main/active-alert-main.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/active-alert-main/active-alert-main.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/active-alert-main/active-alert-main.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/bottom-pane/bottom-pane.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/bottom-pane/bottom-pane.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/bottom-pane/bottom-pane.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/table-pane/table-pane.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/table-pane/table-pane.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/top-pane/top-pane.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/top-pane/top-pane.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/top-pane/top-pane.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/alert-history-main/alert-history-main.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/alert-history-main/alert-history-main.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/alert-history-main/alert-history-main.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-left-pane/history-left-pane.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-left-pane/history-left-pane.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-left-pane/history-left-pane.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-table-pane/history-table-pane.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-table-pane/history-table-pane.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-table-pane/history-table-pane.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-top-pane/history-top-pane.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-top-pane/history-top-pane.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-top-pane/history-top-pane.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-home/alert-home.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-home/alert-home.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-home/alert-home.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-maintenance/alert-maintenance.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-maintenance/alert-maintenance.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-maintenance/alert-maintenance.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/individual-major-directive.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/individual-minor-directive.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-condition-definition.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-condition-directives.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-condition-individual.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-definition.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-definition.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-definition.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-individual-directive.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-description/rule-description.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-description/rule-description.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-description/rule-description.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-setting/alert-setting.component.css","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-setting/alert-setting.component.html","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-setting/alert-setting.component.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/constants/alert-constant.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/constants/alert-nav-constant.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/constants/alert-rule-constant.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/directives/acl-permisson-provider.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/directives/disable-button.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/directives/input-field-integer.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/directives/input-field-limit.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/material.module.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/primeng.module.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/routes/routes.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/active-alert-services.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/alert-history-services.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/alert-maintenance-services.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/alert-rule-service.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/alert-setting-services.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/common-services.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/environments/environment.ts","C:/Users/uttam.bhagat/Desktop/alert-project/src/main.ts","C:/Users/uttam.bhagat/Desktop/alert-project/node_modules/moment/locale ^\\.\\/.*$"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;ACV2C;AACJ;AACqD;AACnD;AAGzC,IAAa,kBAAkB;IAe7B,4BAAoB,WAAyC,EAAU,OAAe;QAAlE,gBAAW,GAAX,WAAW,CAA8B;QAAU,YAAO,GAAP,OAAO,CAAQ;QAb9E,wBAAmB,GAAG,EAAE,CAAC;QACzB,mBAAc,GAAC,cAAc;QAC7B,oBAAe,GAAG,UAAU,CAAC;QAC7B,uBAAkB,GAAG,KAAK,CAAC;QAC3B,eAAU,GAAG,QAAQ,CAAC;QACtB,wBAAmB,GAAG,IAAI,qDAAO,EAAO,CAAC;QACjD,yBAAoB,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;QACvD,gBAAW,GAAG,IAAI,qDAAO,EAAO,CAAC;QACzC,iBAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QACvC,iBAAY,GAAG,CAAC,CAAC,CAAC;IAIgE,CAAC;IAE3F,gEAAgE;IAChE,+CAAkB,GAAlB,UAAmB,YAAiB;QAElC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,iDAAoB,GAApB,UAAqB,SAAiB,EAAE,YAAoB;QAE1D,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC;QACvC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,MAAM,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC;QAC3B,MAAM,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC;QAElC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,sBAAW,6CAAa;aAAxB;YAEE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aACD,UAAyB,OAAY;YAEnC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC9B,CAAC;;;OAJA;IAMD,wCAAW,GAAX,UAAY,GAAG;QAEb,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,sBAAW,oDAAoB;aAA/B;YAEE,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;QAClC,CAAC;aACD,UAAgC,KAAa;YAE3C,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACnC,CAAC;;;OAJA;IAMD,sBAAW,+CAAe;aAA1B;YAEE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;aACD,UAA2B,KAAa;YAEtC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAMD,sBAAW,gDAAgB;aAA3B;YAEE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;QAC9B,CAAC;aACD,UAA4B,KAAa;YAEvC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAMD,sBAAW,mDAAmB;aAA9B;YAEE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACjC,CAAC;aACD,UAA+B,KAAa;YAE1C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAJA;IAMD,sBAAW,2CAAW;aAAtB;YAEE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aACD,UAAuB,KAAa;YAElC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAW,kDAAkB;aAA7B;YAEE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aACD,UAA8B,KAAa;YAEzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAW,8CAAc;aAAzB;YAEE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aACD,UAA0B,KAAa;YAErC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAMH,yBAAC;AAAD,CAAC;AAlHY,kBAAkB;IAD9B,iEAAU,EAAE;yDAgBsB,gHAA4B,oBAA5B,gHAA4B,sDAAmB,uDAAM,oBAAN,uDAAM;GAf3E,kBAAkB,CAkH9B;AAlH8B;;;;;;;;;;;;;;;;;;;;;;ACNY;AACJ;AACvC,oDAAoD;AACpD,yEAAyE;AACzE,+EAA+E;AAG/E,IAAa,gBAAgB;IAiD5B;QA/CQ,aAAQ,GAAG,MAAM,CAAC;QAClB,SAAI,GAAG,YAAY,CAAC,4BAA2B;QAC/C,SAAI,GAAG,MAAM,CAAC,wBAAuB;QACrC,gBAAW,GAAG,UAAU,CAAC;QACzB,gBAAW,GAAG,EAAE,CAAC;QACjB,aAAQ,GAAW,UAAU,CAAC;QAC9B,aAAQ,GAAG,UAAU,CAAC;QACtB,aAAQ,GAAG,UAAU,CAAC;QACtB,cAAS,GAAG,UAAU,CAAC;QACvB,aAAQ,GAAW,IAAI,CAAC;QACxB,YAAO,GAAW,IAAI,CAAC;QACvB,eAAU,GAAG,EAAE,CAAC;QAChB,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAG,EAAE,CAAC;QACjB,aAAQ,GAAG,KAAK,CAAC;QACV,eAAU,GAAG,cAAc,CAAC;QACnC,aAAQ,GAAG,EAAE,CAAC;QACd,uBAAkB,GAAG,IAAI,CAAC;QAC1B,qBAAgB,GAAW,CAAC,CAAC,CAAC;QAC9B,2BAAsB,GAAW,CAAC,CAAC,CAAC;QAEpC,uBAAkB,GAAG,KAAK,CAAC;QAC3B,cAAS,GAAU,EAAE,CAAC;QACtB,sBAAiB,GAAG,EAAE,CAAC;QACvB,mBAAc,GAAG,EAAE,CAAC;QACpB,mBAAc,GAAG,EAAE,CAAC;QACpB,yBAAoB,GAAG,EAAE,CAAC;QAC3B,wBAAmB,GAAG,IAAI,CAAC;QACnC,qCAAqC;QACpC,kBAAa,GAAG,KAAK,CAAC;QAKd,yBAAoB,GAAG,IAAI,qDAAO,EAAO,CAAC;QAClD,0BAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;QAGjE,mDAAmD;QAC3C,mBAAc,GAAG,IAAI,CAAC;QAC9B,uCAAuC;QAC/B,gBAAW,GAAG,CAAC,CAAC;QAIvB,uGAAuG;QAC9F,yBAAoB,GAAG,KAAK,CAAC;QAEtC,kCAAkC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;IAC5C,CAAC;IAED,qEAAqE;IAC9D,+CAAoB,GAA3B;QACC,IAAI,CAAC;YACJ,OAAO,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;YAEtD,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,0CAAyC;YACpE,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACzD,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAClD,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YAC3D,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;YAC7D,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACzD,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACnD,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;YAC7D,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YAClC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;YACpF,IAAI,CAAC,oBAAoB,GAAG,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAEnE,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,IAAI,IAAI,cAAc,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;gBACrH,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,CAAC,CAAC;gBACjF,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,qBAAqB,CAAC,KAAK,IAAI,IAAI,cAAc,CAAC,OAAO,CAAC,qBAAqB,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;oBAC3H,IAAI,CAAC,mBAAmB,GAAG,cAAc,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;gBAC1E,CAAC;YACF,CAAC;QAEF,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACZ,OAAO,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;YAC7C,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;IACF,CAAC;IAEM,sBAAW,mDAAqB;aAAhC;YACN,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC;QAClC,CAAC;aAED,UAAiC,KAAc;YAC9C,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QACnC,CAAC;;;OAJA;IAMD,sBAAW,uCAAS;aAApB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;aAED,UAAqB,KAAa;YACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAW,mCAAK;aAAhB;YACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAClB,CAAC;aAED,UAAiB,KAAa;YAC7B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACnB,CAAC;;;OAJA;IAMD,sBAAW,mCAAK;aAAhB;YACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAClB,CAAC;aAED,UAAiB,KAAa;YAC7B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACnB,CAAC;;;OAJA;IAMD,sBAAW,0CAAY;aAAvB;YACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QACzB,CAAC;aAED,UAAwB,KAAa;YACpC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAW,uCAAS;aAApB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;aAED,UAAqB,KAAa;YACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAW,uCAAS;aAApB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;aAED,UAAqB,KAAa;YACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAW,uCAAS;aAApB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;aAED,UAAqB,KAAa;YACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAcD,sBAAW,sCAAQ;QARnB;;;;;;WAMG;aAEH;YACC,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;gBAC7C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAC/C,CAAC;YACD,IAAI,CAAC,CAAC;gBACL,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YACrB,CAAC;QACF,CAAC;aAED,UAAoB,KAAa;YAChC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACtB,CAAC;;;OAJA;IAMD,sBAAW,iDAAmB;aAA9B;YACC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;QAChC,CAAC;aAED,UAA+B,KAAc;YAC5C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QACjC,CAAC;;;OAJA;IAMD,sBAAW,+CAAiB;aAA5B;YACC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAC9B,CAAC;aAED,UAA6B,KAAa;YACzC,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,oDAAoD;YACpD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,6CAA6C;YAC9C,kCAAkC;QAClC,CAAC;;;OAVA;IAYD,sBAAW,qDAAuB;aAAlC;YACC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC;QACpC,CAAC;aAED,UAAmC,KAAa;YAC5C,cAAc,CAAC,OAAO,CAAC,wBAAwB,EAAE,KAAK,GAAC,EAAE,CAAC,CAAC;YAC9D,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACrC,CAAC;;;OALA;IAgBD,sBAAW,wCAAU;QATrB,wDAAwD;QACxD;;;;;;WAMG;aAEH;YACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;aAED,UAAsB,KAAa;YAClC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAW,uCAAS;aAApB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;aAED,UAAqB,KAAa;YACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAW,0CAAY;aAAvB;YACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QACzB,CAAC;aAED,UAAwB,KAAa;YACpC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAW,yCAAW;aAAtB;YACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxB,CAAC;aAED,UAAuB,KAAa;YACnC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAMD,sBAAW,0CAAY;aAAvB;YACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QACzB,CAAC;aAED,UAAwB,KAAa;YACpC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAW,0CAAY;aAAvB;YACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QACzB,CAAC;aAED,UAAwB,KAAa;YACpC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAW,uCAAS;aAApB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;aAED,UAAqB,KAAa;YACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAKM,sBAAW,yCAAW;aAAtB;YACN,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxB,CAAC;aAED,UAAuB,KAAa;YACnC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAMD,sBAAW,uCAAS;aAApB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;aAED,UAAqB,KAAa;YACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAW,6CAAe;aAA1B;YACC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC5B,CAAC;aAED,UAA2B,KAAa;YACvC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAOD,sBAAW,kDAAoB;QAD/B,8CAA8C;aAC9C;YACC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACjC,CAAC;aAED,UAAgC,KAAa;YAC5C,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAJA;IAMD,sBAAW,mDAAqB;aAAhC;YACC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC;QAClC,CAAC;aAED,UAAiC,KAAa;YAC7C,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QACnC,CAAC;;;OAJA;IAMD,qCAAqC;IAErC,sCAAsC;IAC/B,2CAAgB,GAAvB,UAAwB,GAAG;QAC1B,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;IAC9B,CAAC;IAEM,2CAAgB,GAAvB;QACC,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,SAAS,IAAI,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAC/G,MAAM,CAAC,OAAK,IAAI,CAAC,IAAI,SAAI,IAAI,CAAC,IAAM,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;gBAClC,MAAM,CAAC,OAAK,IAAI,CAAC,IAAI,SAAI,IAAI,CAAC,IAAI,aAAU,CAAC;YAC9C,CAAC;YACD,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAChD,CAAC;IACF,CAAC;IAED,mCAAmC;IAC5B,uCAAY,GAAnB,UAAoB,GAAG;QACtB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;IAC3B,CAAC;IAEM,uCAAY,GAAnB;QACC,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,SAAS,IAAI,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,IAAI,CAAC;YAC7G,MAAM,CAAC,OAAK,IAAI,CAAC,IAAI,SAAI,IAAI,CAAC,IAAM,CAAC;QACtC,IAAI;YACH,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IAED,qBAAqB;IACd,sCAAW,GAAlB,UAAmB,MAAM;QACxB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;IAClC,CAAC;IAEM,sCAAW,GAAlB;QACC,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YAC3C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC3C,IAAI;YACH,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED,kBAAkB;IACX,uCAAY,GAAnB,UAAoB,QAAQ;QAC3B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC3B,CAAC;IACM,uCAAY,GAAnB;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAED,4EAA4E;IACrE,2CAAgB,GAAvB,UAAwB,EAAG;QAC1B,IAAI,CAAC;YACJ,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,SAAS,CAAC;gBACzD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACtB,IAAI,CAAC,CAAC;gBACL,IAAI,QAAM,GAAG,CAAC,EAAE,KAAK,SAAS,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;gBAE1D,sDAAsD;gBACtD,EAAE,CAAC,CAAC,QAAM,KAAK,KAAK,CAAC,CAAC,CAAC;oBACtB,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACrC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;4BAChD,QAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;4BACrC,KAAK,CAAC;wBACP,CAAC;wBACD,IAAI;4BACH,QAAQ,CAAC;oBACX,CAAC;gBACF,CAAC;gBAED,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAC,IAAI;oBACnC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,QAAM,CAAC;gBAC3B,CAAC,CAAC,CAAC;gBACH,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;oBACxC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,MAAM,CAAI,IAAI,CAAC,QAAQ,WAAM,IAAI,CAAC,EAAE,SAAI,IAAI,CAAC,IAAI,MAAG,CAAC;gBACvD,CAAC;YACF,CAAC;QACF,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACZ,OAAO,CAAC,GAAG,CAAC,gDAAgD,EAAE,CAAC,CAAC,CAAC;YACjE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;IACF,CAAC;IACD,sBAAW,6CAAe;aAA1B;YACC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC5B,CAAC;aAED,UAA2B,KAAa;YACvC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAMD,sBAAW,sDAAwB;aAAnC;YACC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC;QACrC,CAAC;aAED,UAAoC,KAAU;YAC7C,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACtC,CAAC;;;OAJA;IAMD,sBAAW,6CAAe;aAA1B;YACC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC5B,CAAC;aAED,UAA2B,KAAU;YACpC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAMD,sBAAW,6CAAe;aAA1B;YACC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC5B,CAAC;aAED,UAA2B,KAAU;YACpC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAMD,sBAAW,0CAAY;aAAvB;YACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QACzB,CAAC;aAED,UAAwB,KAAa;YACpC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAcM,sBAAW,oDAAsB;aAIjC;YACQ,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC;QAC1C,CAAC;QAdT;;;;;;gBAMK;aAEG,UAAkC,IAAS;YACnC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAC1C,CAAC;;;OAAA;IAKT,uBAAC;AAAD,CAAC;AA/bY,gBAAgB;IAD5B,iEAAU,EAAE;;GACA,gBAAgB,CA+b5B;AA/b4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPY;AACJ;AACA;AACS;AAC9C,4EAA4E;AAC5E,6DAA6D;AACL;AACjB;AAGvC,IAAa,kBAAkB;IAuC7B,qGAAqG;IACtG,mEAAmE;IACnE,kEAAkE;IAEjE,4BAAoB,KAAW,EAAU,MAAc,EACnC,OAAyB;QADzB,UAAK,GAAL,KAAK,CAAM;QAAU,WAAM,GAAN,MAAM,CAAQ;QACnC,YAAO,GAAP,OAAO,CAAkB;QA1C7C,cAAS,GAAW,0BAA0B,CAAC;QAO/C,8CAA8C;QACtC,6BAAwB,GAAG,IAAI,qDAAO,EAAW,CAAC;QAC1D,8BAAyB,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;QAQzE,mCAAmC;QACnC,WAAM,GAAW,EAAE,CAAC;QACpB,QAAG,GAAW,EAAE,CAAC;QAKjB,uDAAuD;QACvD,mBAAc,GAAY,KAAK,CAAC;QAEhC,oCAAoC;QACpC,kBAAa,GAAW,CAAC,CAAC;QAE1B,yDAAyD;QACzD,sBAAiB,GAAY,KAAK,CAAC;QAEnC,yDAAyD;QACzD,kBAAa,GAAW,EAAE,CAAC;QAUzB,sDAAsD;IACxD,CAAC;IAlCD,+CAA+C;IAC/C,yDAA4B,GAA5B,UAA6B,aAAsB;QAEjD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACpD,CAAC;IAiCD,iDAAiD;IAClD;;;;;;;;;;;;;;;;;;;;;;;;QAwBI;IAGH,4DAA4D;IAC5D,gDAAmB,GAAnB,UAAoB,KAAa,EAAE,IAAY;QAE7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,qBAAqB,EAAE,oCAAoC,CAAC,CAAC;QAC9F,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;QAElD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,qBAAqB,EAAE,yBAAyB,EAAE,GAAG,CAAC,CAAC;QAExF,IACA,CAAC;YACD,kDAAkD;YAClD;;;;;;;;;;;;;kBAaM;QACN,CAAC;QACD,KAAK,EAAC,CAAC,CAAC,CACR,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,qBAAqB,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QACzE,CAAC;IACH,CAAC;IAGD,qDAAqD;IACrD,iDAAoB,GAApB,UAAqB,UAAkB,EAAE,WAAmB,EAAE,SAAiB;QAE7E,IACA,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,sBAAsB,EAAE,yCAAyC,CAAC,CAAC;YACpG,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,GAAG,SAAS,GAAG,UAAU,GAAG,UAAU,GAAG,WAAW,GAAG,WAAW,CAAE;YAC1H,wDAAwD;QAC1D,CAAC;QACD,KAAK,EAAC,CAAC,CAAC,CACR,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,sBAAsB,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAC1E,CAAC;IACH,CAAC;IAGD,yEAAyE;IACzE,4CAAe,GAAf,UAAgB,KAAa,EAAC,IAAY;QAExC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAC,iBAAiB,EAAC,0CAA0C,CAAC,CAAC;QAC9F,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAEzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAG,yBAAyB,EAAE,GAAG,CAAC,CAAC;QAErF,kDAAkD;QACnD;;;;;;;;;;;;;eAaO;IACR,CAAC;IAED,uDAA0B,GAA1B,UAA2B,SAAiB;QAC1C,IACA,CAAC;YACC,IAAI,WAAW,GAAG,WAAW,CAAC;YAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,sBAAsB,EAAE,mDAAmD,EAAC,kBAAkB,GAAC,SAAS,EAAC,gBAAgB,GAAC,WAAW,CAAC,CAAC;YACxK,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,GAAG,SAAS,GAAG,aAAa,GAAG,WAAW,CAAE;YACvG,yDAAyD;QAC1D,CAAC;QACD,KAAK,EAAC,CAAC,CAAC,CACR,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,sBAAsB,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAC1E,CAAC;IACH,CAAC;IAGD,wEAAwE;IACxE;;;;;;;;;;;;;;;;;OAiBG;IAGH,2GAA2G;IAC3G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA2CG;IAGH,mCAAmC;IACnC,0CAAa,GAAb,UAAc,KAAa;QAEzB,IAAI,QAAQ,GAAG,EAAE,CAAC;QAElB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YAClH,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAExC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,GAAG,QAAQ,GAAG,wCAAwC,GAAG,KAAK,CAAC;QAExG,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAEA,4DAA4D;IAC5D,8CAAiB,GAAjB,UAAkB,MAAc,EAAE,OAAe;QAEhD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;QACnB,MAAM,CAAC;IACR,CAAC;IAED,0EAA0E;IAC1E,4CAAe,GAAf,UAAgB,eAAuB;QAAvC,iBAwBC;QAtBC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,wCAAwC;QACxC,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC;QACrC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,QAAQ,GAAG,WAAW,CAAC;YAEzB,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC,CAC5B,CAAC;gBACC,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;gBAC7E,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,IAAI,GAAG,CAAC;oBAC5B,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YAC5B,CAAC;YAED,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,IAAI,IAAI,CAAC,CAChC,CAAC;gBACC,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;gBACzB,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAE/B,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,qBAAqB;YAChD,CAAC;QACH,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IACJ,yBAAC;AAAD,CAAC;AA3RY,kBAAkB;IAD9B,iEAAU,EAAE;yDA4CgB,2DAAI,oBAAJ,2DAAI,sDAAkB,4DAAM,oBAAN,4DAAM,sDAC1B,6EAAgB,oBAAhB,6EAAgB;GA5ClC,kBAAkB,CA2R9B;AA3R8B;;;;;;;;;;;;;;;;;;;;;;;;ACVY;AAC3C,gEAAgE;AACzB;AACE;AAEa;AAEtD,IAAa,4BAA4B;IASvC,sCAAoB,MAAc,EAAU,OAAyB;QAAjD,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAkB;QAPrE,8BAA8B;QACtB,eAAU,GAAe,EAAE,CAAC;QAEnC,mBAAc,GAAI,IAAI,qDAAO,EAAU,CAAC;QACzC,wBAAmB,GAAK,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAIzD,gCAAgC;QAChC,sDAAsD;IACxD,CAAC;IAED,+BAA+B;IAC/B,yDAAkB,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IACH,qCAAqC;IACnC,iEAA0B,GAA1B,UAA2B,UAAU;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,sDAAsD;IACxD,CAAC;IAED;;OAEG;IACJ;;;;;;;;;;;QAWI;IAEH,mDAAmD;IACpD;;;;;;;;;;;;QAYI;IAEH;;OAEG;IACH,0DAAmB,GAAnB,UAAqB,IAAI;QACvB,IAAI,CAAC;YACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEjC,yCAAyC;YACzC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9B,OAAO,CAAC,IAAI,CAAC,sEAAsE,GAAG,IAAI,CAAC,CAAC;gBAE5F,+BAA+B;gBAC/B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;gBAElC,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAEF,6CAA6C;YAE5C;;;eAGG;YAEH,8BAA8B;YAC9B,gCAAgC;YAEhC,+BAA+B;YAC/B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YAElC,MAAM,CAAC,IAAI,CAAC;QAEd,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,uDAAuD,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;YACjF,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED,sCAAsC;IACtC,qDAAc,GAAd,UAAgB,IAAI;QAClB,IAAI,CAAC;YACH,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;oBACzE,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;YACH,CAAC;QACH,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,sEAAsE,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;QAClG,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,mCAAmC;IACnC,6DAAsB,GAAtB,UAAwB,IAAI;QAC1B,IAAI,CAAC;YACH,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;oBACzE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtC,CAAC;YACH,CAAC;QACH,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,+CAA+C,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;QAC3E,CAAC;IACH,CAAC;IAED,iCAAiC;IACjC,2DAAoB,GAApB,UAAsB,IAAI;QACxB,IAAI,CAAC;YAEF,qDAAqD;YACrD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChC,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;gBAC1D,MAAM,CAAC;YACT,CAAC;YAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;oBACzE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAChC,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;wBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAChC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC7B,KAAK,CAAC;oBACR,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,kDAAkD;wBACjD,+BAA+B;wBAC/B,4CAA4C;wBAC5C,KAAK,CAAC;oBACR,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,6CAA6C,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;QACzE,CAAC;IACH,CAAC;IAED,0CAA0C;IAC1C,yDAAkB,GAAlB,UAAoB,IAAI,EAAE,MAAM;QAC9B,IAAI,CAAC;YAEF,EAAE,EAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,SAAS,CAAC;gBAC5D,MAAM,CAAC;YAEH,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;oBAC7E,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;gBACpC,CAAC;YACH,CAAC;YACD,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QACrE,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,mCAAmC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;QAC/D,CAAC;IACH,CAAC;IAED,oCAAoC;IACpC,yDAAkB,GAAlB,UAAmB,IAAI;QACrB,IAAI,CAAC;YAEF,IAAI,MAAM,GAAG,EAAE,CAAC;YAEhB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;oBACvE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;wBAC/C,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBAC7C,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;wBACjC,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;wBACpC,KAAK,CAAC;oBACR,CAAC;gBACL,CAAC;YACH,CAAC;YACD,EAAE,EAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,EAAC;gBACjD,EAAE,EAAC,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC;oBACvC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC3D,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,MAAM,CAAC,MAAM,EAAG,CAAC,EAAE,EAAE,CAAC;wBACxC,EAAE,EAAC,MAAM,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,EAAC;4BACxD,EAAE,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC;gCACxC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBACzB,CAAC;wBACF,IAAI;4BACP,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;oBACzC,CAAC;gBACH,CAAC;gBACD,IAAI;oBACD,MAAM,CAAC,MAAM,CAAC;YACZ,CAAC;YACD,IAAI;gBACF,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,oCAAoC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;YAC9D,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED,0BAA0B;IAC1B,iEAA0B,GAA1B,UAA2B,IAAI;QAC7B,IAAI,CAAC;YACF,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;oBAC1F,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;wBACxC,sCAAsC;wBACtC,IAAI,CAAC,oBAAoB,CAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;wBACpD,KAAK,EAAE,CAAC;oBACV,CAAC;gBACI,CAAC;YACH,CAAC;YACD,EAAE,EAAC,KAAK,GAAG,CAAC,CAAC;gBACX,MAAM,CAAC,KAAK,CAAC;YACf,IAAI;gBACF,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,0CAA0C,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;QACtE,CAAC;IACH,CAAC;IACH,mCAAC;AAAD,CAAC;AAtOY,4BAA4B;IADxC,iEAAU,EAAE;yDAUiB,uDAAM,oBAAN,uDAAM,sDAAmB,6EAAgB,oBAAhB,6EAAgB;GAT1D,4BAA4B,CAsOxC;AAtOwC;;;;;;;;;ACPzC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,yH;;;;;;;;;;;;;;;;ACA0C;AAO1C,IAAa,YAAY;IALzB;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAAD,mBAAC;AAAD,CAAC;AAFY,YAAY;IALxB,gEAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,wFAAmC;QACnC,uFAAkC;KACnC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACd;AACH;AACM;AAE8C;AAClD;AACM;AACjD,oDAAoD;AACiD;AAIlD;AACF;AAEF;AACmC;AACiC;AACjB;AACH;AACN;AAEzF,kCAAkC;AACqF;AACN;AACG;AACG;AAEvH,kCAAkC;AACyD;AAE3F,sCAAsC;AACiE;AAEvG,+BAA+B;AAC6E;AACG;AAC/G,qBAAqB;AACuC;AACU;AACF;AACI;AACQ;AACf;AACjE,mGAAmG;AACS;AACD;AACA;AACM;AACH;AACA;AAE9B;AACJ;AACkB;AACQ;AAEtG,uBAAuB;AACmD;AACT;AACjE,uBAAuB;AAC6C;AACM;AAwD1E,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAvDrB,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,iGAAuB;YACvB,wFAAgB;YAChB,2FAAsB;YACtB,iGAAoB;YACpB,qEAAY;YACZ,wGAAkB;YAClB,yIAAwB;YACxB,wHAAmB;YACnB,qHAAkB;YAClB,+GAAgB;YAChB,6IAAyB;YACzB,uIAAuB;YACvB,0IAAwB;YACxB,6IAAyB;YACzB,iHAAqB;YACrB,6HAAyB;YACzB,kIAAuB;YACvB,qIAAwB;YACxB,kIAAuB;YACvB,kIAAuB;YACvB,iIAAsB;YACtB,uIAA4B;YAC5B,oIAAwB;YACxB,oIAAwB;SACzB;QACD,OAAO,EAAE;YACP,wEAAa;YACb,2DAAW;YACX,6DAAY;YACZ,iEAAU;YACV,qGAAuB;YACvB,kGAAoB;YACpB,wEAAc;YACd,sEAAa;YACb,wEAAgB;SACjB;QACD,SAAS,EAAE;YACT,EAAE,OAAO,EAAE,6DAAa,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,2DAAW,CAAC,KAAK,EAAE,EAAE;YAClE,4DAAM;YACN,kFAAc;YACd,4FAAkB;YAClB,0FAAe;YACf,8FAAmB;YACnB,sGAAuB;YACvB,uFAAgB;YAChB,gGAAkB;YAClB,4FAAgB;YAChB,8GAAkB;YAClB,sHAA4B;SAC7B;QACD,eAAe,EAAE,CAAC,kIAAuB,EAAE,kIAAuB,CAAC;QACnE,SAAS,EAAE,CAAC,qEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;ACvHtB;AAAA,mDAAmD;AACnD;IAmJE;QAjJA,2DAA2D;QAC3D,cAAS,GAAW,CAAC,CAAC;QAErB,gDAAgD;QACjD,YAAO,GAAW,CAAC,CAAC,CAAC;QAErB,6BAA6B;QAC7B,eAAU,GAAW,IAAI,CAAC;QAE1B,4CAA4C;QAC5C,WAAM,GAAW,IAAI,CAAC;QAEtB,iBAAiB;QACjB,aAAQ,GAAW,GAAG,CAAC;QAEvB,kCAAkC;QAClC,mBAAc,GAAW,GAAG,CAAC;QAE7B,wBAAwB;QACxB,aAAQ,GAAW,GAAG,CAAC;QAEvB,iBAAiB;QACjB,cAAS,GAAW,GAAG,CAAC;QAExB,+CAA+C;QAC/C,aAAQ,GAAW,QAAQ,CAAC;QAE5B,6BAA6B;QAC7B,cAAS,GAAW,GAAG,CAAC;QAExB,sBAAsB;QACtB,YAAO,GAAW,GAAG,CAAC;QAEtB,qBAAqB;QACrB,aAAQ,GAAW,GAAG,CAAC;QAEvB,2BAA2B;QAC3B,cAAS,GAAW,GAAG,CAAC;QAExB,yBAAyB;QACzB,YAAO,GAAW,GAAG,CAAC;QAEtB,8CAA8C;QAC9C,cAAS,GAAW,GAAG,CAAC;QAExB,4CAA4C;QAC5C,YAAO,GAAW,CAAC,CAAC,CAAC;QAErB,8CAA8C;QAC9C,eAAU,GAAW,GAAG,CAAC;QAEzB,4CAA4C;QAC5C,YAAO,GAAW,CAAC,CAAC,CAAC;QAErB,yBAAyB;QACzB,aAAQ,GAAW,GAAG,CAAC;QAEvB,gDAAgD;QAChD,eAAU,GAAW,GAAG,CAAC;QAEzB,kBAAkB;QAClB,SAAI,GAAW,GAAG,CAAC;QAEnB,oBAAoB;QACpB,WAAM,GAAW,GAAG,CAAC;QAErB,qBAAqB;QACrB,aAAQ,GAAW,GAAG,CAAC;QAEvB,kEAAkE;QAClE,gBAAW,GAAW,CAAC,CAAC,CAAC;QAEzB,qBAAqB;QACrB,iBAAY,GAAW,kBAAkB,CAAC;QAE1C,0BAA0B;QAC1B,iBAAY,GAAW,IAAI,CAAC;QAE5B,mDAAmD;QACnD,iBAAY,GAAW,GAAG,CAAC;QAE3B,kDAAkD;QAClD,gBAAW,GAAW,CAAC,CAAC,CAAC;QAEzB,kDAAkD;QAClD,gBAAW,GAAW,CAAC,CAAC,CAAC;QAEzB,iFAAiF;QACjF,sBAAiB,GAAW,IAAI,CAAC;QAEjC,8EAA8E;QAC9E,mBAAc,GAAW,IAAI,CAAC;QAE9B,8EAA8E;QAC9E,mBAAc,GAAW,IAAI,CAAC;QAE9B,oDAAoD;QACpD,mBAAc,GAAW,IAAI,CAAC;QAE9B,oCAAoC;QACpC,eAAU,GAAW,GAAG,CAAC;QAEzB,qFAAqF;QACrF,eAAU,GAAW,CAAC,CAAC;QAEvB,mHAAmH;QACnH,WAAM,GAAW,GAAG,CAAC;QAErB,qDAAqD;QACrD,UAAK,GAAW,GAAG,CAAC;QAEpB,0CAA0C;QAC1C,eAAU,GAAW,CAAC,CAAC,CAAC;QAExB,4CAA4C;QAC5C,+CAA+C;QAC/C,qBAAgB,GAAW,QAAQ,CAAC;QAEpC,mBAAmB;QACnB,eAAU,GAAW,UAAU,CAAC;QAEhC,iHAAiH;QACjH,cAAS,GAAW,EAAE,CAAC;QAEvB,kBAAa,GAAG,KAAK,CAAC;QAEtB,gCAAgC;QAChC,OAAE,GAAW,EAAE,CAAC;QAEhB,uDAAuD;QACvD,cAAS,GAAW,CAAC,CAAC;QAEtB,qCAAqC;QACrC,mBAAc,GAAW,GAAG,CAAC;QAE7B,qCAAqC;QACrC,eAAU,GAAW,GAAG,CAAC;QAEzB,qCAAqC;QACrC,aAAQ,GAAW,GAAG,CAAC;QAEvB,qCAAqC;QACrC,eAAU,GAAW,GAAG;QAKtB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;IAC3B,CAAC;IACH,gBAAC;AAAD,CAAC;;AAED,0DAA0D;AAC1D;IAoBE;QAlBA,4DAA4D;QAC5D,cAAS,GAAW,GAAG,CAAC;QAExB,oDAAoD;QACpD,aAAQ,GAAW,CAAC,CAAC;QAErB,iDAAiD;QACjD,UAAK,GAAW,CAAC,CAAC;QAElB,iDAAiD;QACjD,UAAK,GAAW,CAAC,CAAC;QAElB,uBAAuB;QACvB,YAAO,GAAW,CAAC,CAAC,CAAC;QAOlB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC;IAC9B,CAAC;IACH,sBAAC;AAAD,CAAC;;;;;;;;;;ACjLD;AAAA,sDAAsD;AACtD;IAmGE;QAjGA,2BAA2B;QAC3B,mCAAmC;QACnC,cAAS,GAAW,CAAC,CAAC;QAEtB,+BAA+B;QAC/B,cAAS,GAAW,CAAC,CAAC;QAEtB,+BAA+B;QAC/B,cAAS,GAAW,CAAC,CAAC;QAEtB,gCAAgC;QAChC,cAAS,GAAW,CAAC,CAAC;QAEtB,kCAAkC;QAClC,yCAAyC;QACzC,gBAAW,GAAW,CAAC,CAAC;QAExB,gCAAgC;QAChC,kBAAa,GAAW,CAAC,CAAC;QAE1B,gCAAgC;QAChC,kBAAa,GAAW,CAAC,CAAC;QAG1B,6BAA6B;QAC7B,oCAAoC;QACpC,cAAS,GAAW,CAAC,CAAC;QAEtB,iCAAiC;QACjC,cAAS,GAAW,CAAC,CAAC;QAEtB,iCAAiC;QACjC,cAAS,GAAW,CAAC,CAAC;QAEtB,gCAAgC;QAChC,4CAA4C;QAC5C,gBAAW,GAAW,CAAC,CAAC;QAExB,+CAA+C;QAC/C,gBAAW,GAAW,CAAC,CAAC;QAExB,+CAA+C;QAC/C,gBAAW,GAAW,CAAC,CAAC;QAExB,kCAAkC;QAClC,iDAAiD;QACjD,kBAAa,GAAW,CAAC,CAAC;QAE1B,iDAAiD;QACjD,kBAAa,GAAW,CAAC,CAAC;QAE1B,8CAA8C;QAC9C,kBAAa,GAAW,CAAC,CAAC;QAE1B,mCAAmC;QACnC,kBAAa,GAAW,CAAC,CAAC;QAE1B,0CAA0C;QAC1C,mBAAc,GAAW,CAAC,CAAC;QAE3B,4BAA4B;QAC5B,0BAA0B;QAC1B,gBAAW,GAAW,CAAC,CAAC;QAExB,0BAA0B;QAC1B,gBAAW,GAAW,CAAC,CAAC;QAExB,0BAA0B;QAC1B,gBAAW,GAAW,CAAC,CAAC;QAExB,wBAAwB;QAExB,0BAA0B;QAC1B,aAAQ,GAAW,CAAC,CAAC;QAErB,2BAA2B;QAC3B,cAAS,GAAW,CAAC,CAAC;QAEtB,+BAA+B;QAC/B,kBAAa,GAAW,CAAC,CAAC;QAE1B,qCAAqC;QACrC,iBAAY,GAAW,CAAC,CAAC;QAEzB,gDAAgD;QAChD,qBAAgB,GAAW,CAAC,CAAC;QAE7B,qCAAqC;QACrC,gBAAW,GAAW,CAAC,CAAC;QAExB,iCAAiC;QACjC,WAAM,GAAW,EAAE,CAAC;QAKpB,OAAE,GAAW,EAAE,CAAC;QAGd,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC;IAC/B,CAAC;IACH,uBAAC;AAAD,CAAC;;;;;;;;;;;AC1GD;AAAA,6DAA6D;AAC7D;IAAA;QAiBE,mDAAmD;QACnD,SAAI,GAAW,GAAG,CAAC;QAEnB,qDAAqD;QACrD,WAAM,GAAW,GAAG,CAAC;QAErB,uDAAuD;QACvD,aAAQ,GAAW,GAAG,CAAC;QAEvB,mEAAmE;QACnE,sBAAiB,GAAW,CAAC,CAAC,CAAC;QAE/B,8BAA8B;QAC9B,qBAAgB,GAAW,GAAG,CAAC;QA2B/B,aAAa;QACb,cAAS,GAAW,CAAC,CAAC,CAAC;IAOzB,CAAC;IAAD,qBAAC;AAAD,CAAC;;AAED,6HAA6H;AAC7H;IAAA;QAEE,aAAQ,GAAW,CAAC,CAAC,CAAC;QACtB,iBAAY,GAAW,CAAC,CAAC,CAAC;IAC5B,CAAC;IAAD,0BAAC;AAAD,CAAC;;;;;;;;;;;ACvED;AAAA,oEAAoE;AACpE;IAAA;QAEE,aAAQ,GAAW,CAAC,CAAC;QACrB,aAAQ,GAAW,EAAE,CAAC;QACtB,iBAAY,GAAW,CAAC,CAAC,CAAC;QAC1B,gBAAW,GAAW,CAAC,CAAC,CAAC;QACzB,iBAAY,GAAW,CAAC,CAAC,CAAC;QAC1B,eAAU,GAAW,EAAE,CAAC;QACxB,UAAK,GAAW,CAAC,CAAC,CAAC;QACnB,SAAI,GAAW,CAAC,CAAC,CAAC;QAClB,QAAG,GAAW,CAAC,CAAC,CAAC;QACjB,aAAQ,GAAW,CAAC,CAAC,CAAC;QACtB,WAAM,GAAW,CAAC,CAAC,CAAC;QACpB,cAAS,GAAW,EAAE,CAAC;QACvB,YAAO,GAAW,EAAE,CAAC;QACrB,gBAAW,GAAW,EAAE,CAAC;QACzB,aAAQ,GAAW,CAAC,CAAC;QACrB,WAAM,GAAW,CAAC,CAAC;QACnB,WAAM,GAAW,EAAE,CAAC;QACpB,eAAU,GAAW,EAAE,CAAC;QACxB,OAAE,GAAY,CAAC,CAAC,CAAC;IACnB,CAAC;IAAD,8BAAC;AAAD,CAAC;;AAED,qEAAqE;AACrE;IAYI;QATF,SAAI,GAAW,EAAE,CAAC;QAGlB,WAAM,GAAW,CAAC,CAAC,CAAC;QACpB,QAAG,GAAW,EAAE,CAAC;QACjB,YAAO,GAAW,EAAE,CAAC;QACrB,WAAM,GAAW,GAAG,CAAC;QAKf,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;IAC9B,CAAC;IAEL,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;AC5CwD;AACzD;IAIE;QAFA,aAAQ,GAAW,wFAAqB,CAAC,sBAAsB,CAAC;QAI9D,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC;IAC9B,CAAC;IACH,2BAAC;AAAD,CAAC;;AAED,oEAAoE;AACpE;IAAA;QAEE,OAAE,GAAW,CAAC,CAAC;QACf,iBAAY,GAAW,wFAAqB,CAAC,YAAY,CAAC;QAC1D,SAAI,GAAW,EAAE,CAAC;QAClB,cAAS,GAAW,EAAE,CAAC;QACvB,cAAS,GAAW,EAAE,CAAC;QACvB,aAAQ,GAAW,wFAAqB,CAAC,iBAAiB,CAAC;QAC3D,aAAQ,GAAW,wFAAqB,CAAC,0BAA0B,CAAC;QACpE,iBAAY,GAAW,EAAE,CAAC;QAC1B,cAAS,GAAW,wFAAqB,CAAC,eAAe,CAAC;QAC1D,kBAAa,GAAW,wFAAqB,CAAC,mCAAmC,CAAC;QAClF,YAAO,GAAY,KAAK,CAAC;QACzB,iBAAY,GAAW,wFAAqB,CAAC,eAAe,CAAC;QAC7D,eAAU,GAAW,CAAC,CAAC;QACvB,eAAU,GAAW,EAAE,CAAC;IAC1B,CAAC;IAAD,wBAAC;AAAD,CAAC;;AAED,qEAAqE;AACrE;IAwBE;QAtBA,WAAM,GAAY,IAAI,CAAC;QACvB,SAAI,GAAW,EAAE,CAAC;QAClB,eAAU,GAAW,wFAAqB,CAAC,0BAA0B,CAAC;QACtE,eAAU,GAAW,CAAC,CAAC,CAAC,4CAA4C;QACpE,gBAAW,GAAY,IAAI,CAAC,CAAC,2DAA2D;QACxF,oBAAe,GAAW,EAAE,CAAC,CAAC,gDAAgD;QAC9E,eAAU,GAAY,IAAI,CAAC,CAAC,sDAAsD;QAClF,aAAQ,GAAY,CAAC,CAAC,CAAC,CAAC,gEAAgE;QACxF,oBAAe,GAAW,wFAAqB,CAAC,0BAA0B,CAAC,CAAC,uEAAuE;QACnJ,sBAAiB,GAAW,GAAG,CAAC,CAAC,mCAAmC;QACpE,UAAK,GAAW,wFAAqB,CAAC,kBAAkB,CAAC,CAAC,4DAA4D;QACtH,UAAK,GAAQ,EAAE,CAAC,CAAC,uDAAuD;QACxE,iBAAY,GAAW,wFAAqB,CAAC,sBAAsB,CAAC,CAAC,uCAAuC;QAK5G,kBAAa,GAAW,wFAAqB,CAAC,0CAA0C,CAAC,0CAAyC;QAClI,aAAQ,GAAW,CAAC,CAAC,2DAA0D;QAC/E,sBAAiB,GAAW,CAAC,CAAC,CAAC,CAAC,wCAAwC;QACxE,mBAAc,GAAW,CAAC,CAAC,CAAC,CAAC,qCAAqC;QAClE,mBAAc,GAAW,CAAC,CAAC,CAAC,CAAC,qCAAqC;QAGhE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC;IAC9B,CAAC;IACH,kBAAC;AAAD,CAAC;;AAED;IAGE;QAEI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;IACvB,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;ACpED;AAAA,iDAAiD;AACjD;IAWI;QANA,8CAA8C;QAC9C,aAAQ,GAAa,EAAE,CAAC;QAExB,mDAAmD;QACnD,cAAS,GAAa,EAAE,CAAC;IAKzB,CAAC;IAEL,wBAAC;AAAD,CAAC;;AAED,8CAA8C;AAC9C;IAgCI;QAEI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAAA,CAAC;IAC7B,CAAC;IACL,qBAAC;AAAD,CAAC;;AAED,qDAAqD;AACrD;IA4DI;QArCA,mBAAc,GAAW,EAAE,CAAC;QAE5B,oCAAoC;QACpC,eAAU,GAAW,CAAC,CAAC;QAEvB,mBAAc,GAAW,CAAC,CAAC;QAE3B,uCAAuC;QACvC,qBAAgB,GAAW,CAAC,CAAC;QAE7B,wCAAwC;QACxC,wBAAmB,GAAW,GAAG,CAAC;QAElC,gDAAgD;QAChD,WAAM,GAAY,OAAO,CAAC;QAE1B,iDAAiD;QACjD,QAAG,GAAY,EAAE,CAAC;QAElB,wCAAwC;QACxC,aAAQ,GAAY,UAAU,CAAC;QAmB3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;IACzB,CAAC;IAEL,oBAAC;AAAD,CAAC;;;;;;;;;;;;AC5HoC;AAErC,4EAA4E;AAC5E;IAOE,6BAA6B;IAC7B;QAAA,iBAWC;QATC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QAEvB,kDAAkD;QAClD,2DAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CACjC,WAAC,IAAI,YAAI,CAAC,UAAU,EAAE,EAAjB,CAAiB,CACvB,CAAC;IACJ,CAAC;IAED,gDAAgD;IAChD,0BAAU,GAAV;QAEE,IAAI,EAAE,GAAW,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAC9B,IAAI,EAAE,GAAW,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAC9B,IAAI,EAAE,GAAW,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAE9B,wCAAwC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACf,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;QAEhB,sCAAsC;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACf,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;QAEhB,qCAAqC;QACrC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACf,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;QAEhB,8DAA8D;QAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CACjB,CAAC;YACC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,EAAE,GAAG,IAAI,CAAC;YACV,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QACf,CAAC;QAED,2DAA2D;QAC3D,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CACjB,CAAC;YACC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,EAAE,GAAG,IAAI,CAAC;YACV,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QACf,CAAC;QAED,4DAA4D;QAC5D,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QAEb,qCAAqC;QACrC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;IACvC,CAAC;IAED,gCAAgC;IAChC,yBAAS,GAAT;QAEE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACd,CAAC;IAED,yCAAyC;IACzC,uBAAO,GAAP;QAEE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACH,YAAC;AAAD,CAAC;;;;;;;;;AC/ED;AACA;;;AAGA;AACA,2CAA4C,kBAAkB,sBAAsB,KAAK,sBAAsB,4BAA4B,wBAAwB,qBAAqB,KAAK,sBAAsB,wBAAwB,qBAAqB,KAAK,qBAAqB,iDAAiD,sBAAsB,uBAAuB,uBAAuB,sCAAsC,yBAAyB,KAAK,sBAAsB,0BAA0B,KAAK,kBAAkB,mBAAmB,4CAA4C,kBAAkB,KAAK;;AAEhnB;;;AAGA;AACA,2C;;;;;;;ACXA,6jC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAEZ;AACsC;AACS;AACrB;AACC;AAEnB;AACY;AAG1D,yGAAyG;AASzG,IAAa,wBAAwB;IAwBnC,kCAAoB,kBAAsC,EAAS,eAA8B,EAAU,mBAAsC,EAAU,MAAc;QAArJ,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAS,oBAAe,GAAf,eAAe,CAAe;QAAU,wBAAmB,GAAnB,mBAAmB,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;QARhK,yBAAoB,GAAG,IAAI,qDAAO,EAAO,CAAC;QAEnD,oDAAoD;QACpD,0BAAqB,GAAsB,IAAI,8EAAe,EAAE,CAAC;QAO/D,IAAI,CAAC,SAAS,GAAG,0BAA0B,CAAC;QAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,8EAAe,EAAE,CAAC;QAEvC,+BAA+B;QAC/B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;IAC9C,CAAC;IAED,mEAAmE;IACnE,2CAAQ,GAAR;QAAA,iBA2EC;QAzEC,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,SAAS,CACnD,kBAAQ;YAEN,KAAI,CAAC,kBAAkB,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;YACnD,KAAI,CAAC,kBAAkB,CAAC,mBAAmB,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAChE,IAAI,QAAQ,GAAG,qFAAuB,CAAC,YAAY,CAAC;YACpD,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,IAAI,wFAA0B,CAAC,QAAQ,CAAC;gBAC3D,QAAQ,GAAG,qFAAuB,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,IAAI,wFAA0B,CAAC,KAAK,CAAC;gBAC7D,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;YAC3C,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,IAAI,wFAA0B,CAAC,KAAK,CAAC;gBAC7D,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;YAE3C,KAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,SAAS,CACrE,aAAG;gBAED,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACvB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC/B,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;gBAC9B,KAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,QAAQ,CAAC,CAAC;YAC9D,CAAC,EACD,eAAK,IAAI,YAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,UAAU,EAAE,oCAAoC,CAAC,EAAnF,CAAmF,EAC5F,cAAM,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,UAAU,EAAE,oBAAoB,CAAC,EAAlE,CAAkE,CACzE,CAAC;QACJ,CAAC,CACF,CAAC;QAEJ,IACA,CAAC;YACC,IAAI,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YAC9C,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,EAAE,CAAC;gBAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxB,IAAI;gBACF,IAAI,CAAC,SAAS,GAAG,oFAAsB,CAAC,GAAG,CAAC;YAE9C,IAAI,CAAC,aAAa,GAAG,qFAAuB,CAAC,YAAY,CAAC;YAE1D,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;YAC3D,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CACrB,CAAC;gBACC,EAAE,CAAC,CAAC,QAAQ,KAAK,wFAA0B,CAAC,QAAQ,CAAC;oBACnD,IAAI,CAAC,aAAa,GAAG,qFAAuB,CAAC,QAAQ,CAAC;gBACxD,EAAE,CAAC,CAAC,QAAQ,KAAK,wFAA0B,CAAC,KAAK,CAAC;oBAChD,IAAI,CAAC,aAAa,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBACrD,EAAE,CAAC,CAAC,QAAQ,KAAK,wFAA0B,CAAC,KAAK,CAAC;oBAChD,IAAI,CAAC,aAAa,GAAG,qFAAuB,CAAC,KAAK,CAAC;YACvD,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;YAErG,mDAAmD;YACnD,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAChF,aAAG,IAAI,YAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAtB,CAAsB,EAC7B,eAAK,IAAI,YAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,UAAU,EAAE,oCAAoC,CAAC,EAAnF,CAAmF,EAC5F,cAAM,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,UAAU,EAAE,oBAAoB,CAAC,EAAlE,CAAkE,CACzE,CAAC;QACJ,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;QACnD,CAAC;QAED,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,uFAAyB,CAAC,MAAM,EAAE,uFAAyB,CAAC,YAAY,CAAC,CAAC,SAAS,CAC/I,aAAG;YAED,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,EACD;YAEE,aAAa,CAAC,WAAW,EAAE,CAAC;QAC9B,CAAC,CACF,CAAC;IAEJ,CAAC;IAED,iFAAiF;IACjF,kDAAe,GAAf,UAAgB,SAAiB;QAAjC,iBAYC;QAVC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,eAAe,GAAG,SAAS,GAAG,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QAE7H,wBAAwB;QACxB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,6EAA6E;QAC7E,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAC3E,aAAG,IAAI,YAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAtB,CAAsB,EAC7B,eAAK,IAAI,YAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,mCAAmC,CAAC,EAAzF,CAAyF,CACnG,CAAC;IACJ,CAAC;IAED,mDAAmD;IACnD,kDAAe,GAAf,UAAgB,cAA8B;QAA9C,iBAqBC;QAnBC,IACA,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,cAAc,GAAG,cAAc,CAAC,SAAS,GAAG,cAAc,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;YAE1I,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,QAAQ,CAAC;YAE7C,oBAAoB;YACpB,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC;YAE1C,6EAA6E;YAC7E,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC/F,aAAG,IAAI,YAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAtB,CAAsB,EAC7B,eAAK,IAAI,YAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,mCAAmC,CAAC,EAAzF,CAAyF,CACnG,CAAC;QACJ,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,CAAC,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC;IAED,iDAAc,GAAd,UAAe,YAAY;QAEzB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,sIAAsI;IACtI,+CAAY,GAAZ,UAAa,GAAG;QAEd,IACA,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,cAAc,GAAG,GAAG,CAAC,CAAC;YAExE,uDAAuD;YACvD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC;YAEtF,IAAI,CAAC,qBAAqB,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;YACtE,oBAAoB;YACpB,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,sCAAsC,CAAC,CAAC;YAElG,0DAA0D;YAC1D,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;QACjD,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;QACvD,CAAC;IACH,CAAC;IACD,uDAAoB,GAApB,UAAqB,qBAAsC;QAEzD,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;IACrD,CAAC;IAED,6KAA6K;IAC7K,gDAAa,GAAb,UAAc,GAAG;QAEf,IACA,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACxF,EAAE,EAAC,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,KAAK,SAAS,IAAG,GAAG,CAAC,GAAG,KAAK,sFAAwB,CAAC,aAAa,IAAI,GAAG,CAAC,GAAG,KAAK,sFAAwB,CAAC,SAAS,CAAC;gBAC9I,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YACjC,IAAI;gBACF,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QACpC,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;QACxD,CAAC;IACH,CAAC;IACH,+BAAC;AAAD,CAAC;AAtMY,wBAAwB;IARpC,gEAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,gJAAiD;QACjD,+IAAgD;KAEjD,CAAC;IAEF,0CAA0C;;yDAyBA,2FAAkB,oBAAlB,2FAAkB,sDAAyB,iFAAc,oBAAd,iFAAc,sDAA8B,+FAAkB,oBAAlB,+FAAkB,sDAAkB,4DAAM,oBAAN,4DAAM;GAxB9J,wBAAwB,CAsMpC;AAtMoC;;;;;;;;;ACrBrC;AACA;;;AAGA;AACA,yCAA0C,qBAAqB,KAAK,iBAAiB,kBAAkB,KAAK,gBAAgB,iBAAiB,KAAK,uBAAuB,mBAAmB,KAAK,kBAAkB,uBAAuB,KAAK,wBAAwB,gCAAgC,KAAK,yBAAyB,gCAAgC,KAAK,uBAAuB,gCAAgC,KAAK,wBAAwB,gCAAgC,KAAK;;AAEne;;;AAGA;AACA,2C;;;;;;;ACXA,6dAA6d,uJAAuJ,oJAAoJ,oxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzrB;AACJ;AAC7B;AAC8B;AAClB;AACzB;AAC4C;AACd;AACtB;AAEzC,sEAAsE;AAQtE,IAAa,mBAAmB;IAwC9B,6BAAoB,MAAc,EAAU,kBAAsC,EAAU,MAAc;QAAtF,WAAM,GAAN,MAAM,CAAQ;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAQ;QArB1G,4DAA4D;QAE5D,oBAAe,GAAG,IAAI,2DAAY,EAAmB,CAAC;QAqBpD,IAAI,CAAC,EAAE,GAAG,kBAAkB,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;QACxD,IAAI,CAAC,gBAAgB,GAAG,0FAAmB,CAAC;IAC7C,CAAC;IAEF,sCAAQ,GAAR;QAEE,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,6EAAU,CAAC;IAC9B,CAAC;IAED,qDAAqD;IACrD,uCAAS,GAAT;QAEE,IACA,CAAC;YACC,IAAI,UAAU,SAAQ,CAAC;YACvB,IAAI,QAAQ,SAAQ,CAAC;YACrB,IAAI,QAAQ,SAAQ,CAAC;YACrB,IAAI,WAAW,GAAG,GAAG,CAAC;YACtB,IAAI,YAAY,GAAG,GAAG,CAAC;YACvB,IAAI,cAAc,GAAG,GAAG,CAAC;YAEzB,IAAI,SAAS,GAAW,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YAC7C,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,IAAI,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;YAE9D,gCAAgC;YAChC,EAAE,CAAC,CAAC,eAAe,KAAK,SAAS,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,CAAC,CAClE,CAAC;gBACC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,qDAAqD,CAAC,CAAC;gBAC7G,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,qDAAqD,CAAC,CAAC;gBACtG,MAAM,CAAC;YACT,CAAC;YAED,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,EACrD,CAAC;gBACC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC;gBACpD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC;oBAC7B,SAAS,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAE7B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC;oBAC3B,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAC3B,EAAE,EAAC,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC;oBACpJ,QAAQ,CAAC;gBACX,EAAE,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK,wFAA0B,CAAC,QAAQ,CAAC;oBACxE,QAAQ,GAAG,qFAAuB,CAAC,QAAQ,CAAC;gBAC9C,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK,wFAA0B,CAAC,KAAK,CAAC;oBAC1E,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBAC3C,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK,wFAA0B,CAAC,KAAK,CAAC;oBAC1E,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBAC3C,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK,wFAA0B,CAAC,MAAM,CAAC;oBAC3E,QAAQ,GAAG,qFAAuB,CAAC,MAAM,CAAC;gBAE5C,EAAE,EAAC,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,CACpB,CAAC;oBACC,EAAE,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC;wBACzB,QAAQ,GAAG,WAAW,GAAG,QAAQ,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;oBAC1S,IAAI;wBACF,QAAQ,GAAG,QAAQ,GAAG,YAAY,GAAG,QAAQ,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACxT,CAAC;gBACD,IAAI,CACJ,CAAC;oBACC,EAAE,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC;wBACzB,QAAQ,GAAG,WAAW,GAAG,QAAQ,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;oBAClQ,IAAI;wBACF,QAAQ,GAAG,QAAQ,GAAG,YAAY,GAAG,QAAQ,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;gBAChR,CAAC;YACH,CAAC;YACD,EAAE,EAAC,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,CAAC,CAC7C,CAAC;gBACC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,0DAA0D,CAAC,CAAC;gBAClH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,0DAA0D,CAAC,CAAC;gBAC3G,MAAM,CAAC;YACT,CAAC;YACD,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,SAAS,GAAG,gFAAkB,CAAC,SAAS,CAAC,CAAC;YAClE,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,GAAG,gFAAkB,CAAC,SAAS,CAAC,CAAC;YAE9D,UAAU,GAAG,cAAc,GAAG,WAAW,GAAG,oCAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,cAAc,GAAG,SAAS,GAAG,oCAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,cAAc,GAAG,QAAQ,CAAC;YACnM,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACxD,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;IAED,6DAA6D;IAC7D,wCAAU,GAAV,UAAW,kBAA2B;QAAtC,iBA6CC;QA3CC,EAAE,EAAC,kBAAkB,CAAC;YACpB,MAAM,CAAC;QACT,IACA,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;YAEhE,IAAI,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;YAE9D,gCAAgC;YAChC,EAAE,CAAC,CAAC,eAAe,KAAK,SAAS,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,CAAC,CAClE,CAAC;gBACC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,6DAA6D,CAAC,CAAC;gBACrH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,6DAA6D,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;gBAChJ,MAAM,CAAC;YACT,CAAC;YAED,IAAK,UAAU,GAAG,EAAE,CAAC;YACrB,EAAE,EAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,SAAS,EAAE,KAAK,KAAK,CAAC,CAChE,CAAC;gBACC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,EACrD,CAAC;oBACC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,GAAG,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;gBAChF,CAAC;YACH,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,EACrD,CAAC;oBACC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;YAExC,mCAAmC;YACnC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAC1F,aAAG,IAAK,YAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAtB,CAAsB,EAC9B,eAAK,IAAI,YAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,YAAY,EAAE,uBAAuB,CAAC,EAAxE,CAAwE,CAAC,CAAC;QACvF,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAED,0CAA0C;IAC1C,0CAAY,GAAZ,UAAa,SAA0B;QAErC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,8BAA8B,CAAC,CAAC;IAC5F,CAAC;IAED,iFAAiF;IACjF,+CAAiB,GAAjB,UAAkB,UAAkB;QAElC,IAAI,gBAAgB,GAAG,EAAE,CAAC;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,qFAAuB,CAAC,KAAK,CAAC;YACvD,gBAAgB,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,qFAAuB,CAAC,KAAK,CAAC;YAC5D,gBAAgB,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,qFAAuB,CAAC,QAAQ,CAAC;YAC/D,gBAAgB,GAAG,UAAU,CAAC;QAChC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,qFAAuB,CAAC,YAAY,CAAC;YACnE,gBAAgB,GAAG,KAAK,CAAC;QAC3B,EAAE,EAAC,IAAI,CAAC,qBAAqB,IAAI,SAAS,CAAC,CAC3C,CAAC;YACC,IAAI,iBAAe,GAAU,CAAC,CAAC;YAC/B,IAAI,cAAY,GAAU,CAAC,CAAC;YAC5B,IAAI,cAAY,GAAU,CAAC,CAAC;YAC5B,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;gBAErD,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,wFAA0B,CAAC,QAAQ,CAAC;oBAC3D,iBAAe,EAAE,CAAC;gBACpB,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,wFAA0B,CAAC,KAAK,CAAC;oBAC7D,cAAY,EAAE,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,wFAA0B,CAAC,KAAK,CAAC;oBAC7D,cAAY,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,qBAAqB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;YAChE,IAAI,CAAC,qBAAqB,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YAC5D,IAAI,CAAC,qBAAqB,CAAC,QAAQ,GAAG,iBAAe,CAAC;YACtD,IAAI,CAAC,qBAAqB,CAAC,KAAK,GAAG,cAAY,CAAC;YAChD,IAAI,CAAC,qBAAqB,CAAC,KAAK,GAAG,cAAY,CAAC;YAChD,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,qBAAqB,EAAE,gBAAgB,CAAC,CAAC;QACjG,CAAC;QACD,IAAI;YACF,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;IACvF,CAAC;IAED,sFAAsF;IACtF,0CAAY,GAAZ;QAEE,IAAI,QAAgB,CAAC;QACrB,IAAI,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;QAC9D,EAAE,CAAC,CAAC,eAAe,KAAK,SAAS,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,CAAC,CAClE,CAAC;YACC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,6DAA6D,CAAC,CAAC;YACrH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,6DAA6D,CAAC,CAAC;YAC9G,MAAM,CAAC;QACT,CAAC;QACD,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,EACrD,CAAC;YACC,IAAI,OAAO,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;YACzC,EAAE,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC;gBACzB,QAAQ,GAAG,OAAO,GAAG,EAAE,CAAC;YAC1B,IAAI;gBACF,QAAQ,GAAG,QAAQ,GAAG,GAAG,GAAG,OAAO,CAAC;QAC1C,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,aAAa,GAAG,QAAQ,CAAC,CAAC;QAChG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;QAC/E,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAClD,CAAC;IAEH,0BAAC;AAAD,CAAC;AA/OC;IADC,4DAAK,EAAE;kDACG,8EAAe,oBAAf,8EAAe;sDAAC;AAO3B;IADC,4DAAK,EAAE;;sDACU;AAGlB;IADC,4DAAK,EAAE;;0DACc;AAItB;IADC,6DAAM,EAAE;;4DAC6C;AAOtD;IADC,4DAAK,EAAE;kDACe,8EAAe,oBAAf,8EAAe;kEAAC;AAUvC;IADC,4DAAK,EAAE;;+DACoB;AAtCjB,mBAAmB;IAP/B,gEAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,oIAA2C;QAC3C,mIAA0C;KAC3C,CAAC;IAEF,qHAAqH;;yDAyCvF,4DAAM,oBAAN,4DAAM,sDAA8B,2FAAkB,oBAAlB,2FAAkB,sDAAkB,uDAAM,oBAAN,uDAAM;GAxC/F,mBAAmB,CAsP/B;AAtP+B;;;;;;;;;AClBhC,sEAAsE,sBAAsB,aAAa,+BAA+B,2MAA2M,kBAAkB,mCAAmC,0BAA0B,iKAAiK,gBAAgB,mdAAmd,kBAAkB,0BAA0B,qCAAqC,yNAAyN,eAAe,wHAAwH,gBAAgB,+UAA+U,eAAe,GAAG,iBAAiB,KAAK,eAAe,GAAG,iBAAiB,6DAA6D,oCAAoC,iTAAiT,SAAS,KAAK,SAAS,8IAA8I,eAAe,+IAA+I,WAAW,oXAAoX,eAAe,8MAA8M,WAAW,wlBAAwlB,gBAAgB,yVAAyV,eAAe,sBAAsB,eAAe,8DAA8D,gBAAgB,0XAA0X,qBAAqB,KAAK,iBAAiB,4DAA4D,iBAAiB,KAAK,iBAAiB,8DAA8D,gBAAgB,gWAAgW,eAAe,KAAK,eAAe,8DAA8D,sCAAsC,obAAob,gBAAgB,KAAK,gBAAgB,6DAA6D,qCAAqC,4aAA4a,cAAc,KAAK,cAAc,6DAA6D,eAAe,yNAAyN,MAAM,KAAK,MAAM,0GAA0G,WAAW,KAAK,WAAW,8DAA8D,eAAe,2NAA2N,QAAQ,KAAK,QAAQ,yGAAyG,aAAa,KAAK,aAAa,6DAA6D,eAAe,6NAA6N,UAAU,KAAK,UAAU,yGAAyG,eAAe,KAAK,eAAe,6DAA6D,qCAAqC,2ZAA2Z,iBAAiB,KAAK,iBAAiB,8DAA8D,qCAAqC,yZAAyZ,qBAAqB,KAAK,qBAAqB,6DAA6D,gBAAgB,sXAAsX,mBAAmB,KAAK,mBAAmB,6DAA6D,eAAe,6Y;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5sS;AACjB;AACW;AAC5B;AAC+B;AAEV;AACT;AACzB;AAEjC,sGAAsG;AAUtG,IAAa,kBAAkB;IA+C7B,aAAa;IACb,4BAAoB,MAAc,EAAS,kBAAsC,EAAS,aAA6B;QAAnG,WAAM,GAAN,MAAM,CAAQ;QAAS,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAS,kBAAa,GAAb,aAAa,CAAgB;QA9BvH,WAAM,GAAG,CAAC,CAAC;QAqBX,uBAAkB,GAAyB,EAAE,CAAC;QAM9C,wBAAmB,GAAG,IAAI,2DAAY,EAAmB,CAAC;QAKxD,IAAI,CAAC,EAAE,GAAG,kBAAkB,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;QACxD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,gBAAgB,GAAG,CAAC,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;IAC5D,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAwBC;QAtBC,kCAAkC;QAClC,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC;QAEtC,0BAA0B;QAC1B,IAAI,CAAC,SAAS,GAAG,6EAAU,CAAC;QAE5B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,YAAY,KAAK,WAAW,CAAC,CACxE,CAAC;YACC,IAAI,CAAC,IAAI,GAAG,8EAAgB,GAAG,GAAG,CAAC;YACnC,IAAI,CAAC,MAAM,GAAG,8EAAgB,GAAG,GAAG,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,8EAAgB,GAAG,GAAG,CAAC;QACzC,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CACrC,aAAG;YACD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM;gBACxB,KAAI,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM;gBACzB,KAAI,CAAC,mBAAmB,EAAE;QAAA,CAAC,CAC5B,CAAC;QACF,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,gDAAmB,GAAnB;QAEE,IAAI,CAAC,WAAW,GAAE,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,sFAAwB,CAAC;QAC5C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,EAAE,EAAC,IAAI,CAAC,SAAS,IAAI,UAAU,CAAC;YAC9B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;QAC/C,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,SAAS,IAAI,UAAU,CAAC,CACrC,CAAC;YACC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;QAChD,CAAC;QACD,EAAE,EAAC,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACvC,IAAI;YACF,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1C,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,sFAAwB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxD,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE,CAAC;gBAC5I,QAAQ,CAAC;YACX,IAAI,CACJ,CAAC;gBACC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBACxD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,sFAAwB,CAAC,CAAC,CAAC,CAAC,CAAC;YACpD,CAAC;QACH,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACpC,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE;YAC7C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;IACzC,CAAC;IAGD,qDAAqD;IACrD,sCAAS,GAAT,UAAU,SAAoB;QAE5B,IACA,CAAC;YACC,IAAI,UAAU,SAAQ,CAAC;YACvB,IAAI,QAAQ,SAAQ,CAAC;YACrB,IAAI,QAAQ,SAAQ,CAAC;YACrB,IAAI,WAAW,GAAG,GAAG,CAAC;YACtB,IAAI,YAAY,GAAG,GAAG,CAAC;YACvB,IAAI,cAAc,GAAG,GAAG,CAAC;YAEzB,IAAI,SAAS,GAAW,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YAC7C,IAAI,OAAO,GAAG,CAAC,CAAC;YAEhB,gCAAgC;YAChC,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAC5B,CAAC;gBACC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,qDAAqD,CAAC,CAAC;gBAC7G,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,qDAAqD,CAAC,CAAC;gBACtG,MAAM,CAAC;YACT,CAAC;YACD,EAAE,EAAC,SAAS,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,OAAO,IAAI,CAAC,IAAI,SAAS,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,OAAO,IAAI,CAAC,CAAC,CAC1G,CAAC;gBACC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,0DAA0D,CAAC,CAAC;gBAClH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,0DAA0D,CAAC,CAAC;gBAC3G,MAAM,CAAC;YACT,CAAC;YAED,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YACzC,SAAS,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC3B,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAEzB,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,KAAK,wFAA0B,CAAC,QAAQ,CAAC;gBAC7D,QAAQ,GAAG,qFAAuB,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,KAAK,wFAA0B,CAAC,KAAK,CAAC;gBAC/D,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;YAC3C,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,KAAK,wFAA0B,CAAC,KAAK,CAAC;gBAC/D,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;YAC3C,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,KAAK,wFAA0B,CAAC,MAAM,CAAC;gBAChE,QAAQ,GAAG,qFAAuB,CAAC,MAAM,CAAC;YAC5C,EAAE,EAAC,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC;gBAClB,QAAQ,GAAG,WAAW,GAAG,QAAQ,GAAG,WAAW,GAAG,SAAS,CAAC,OAAO,GAAG,WAAW,GAAG,SAAS,CAAC,OAAO,GAAG,WAAW,GAAG,SAAS,CAAC,IAAI,GAAG,WAAW,GAAG,SAAS,CAAC,MAAM,GAAG,WAAW,GAAG,SAAS,CAAC,QAAQ,GAAC,WAAW,GAAC,SAAS,CAAC,EAAE,CAAC;YACpO,IAAI;gBACF,QAAQ,GAAG,WAAW,GAAG,QAAQ,GAAG,WAAW,GAAG,SAAS,CAAC,OAAO,GAAG,WAAW,GAAG,SAAS,CAAC,OAAO,GAAG,WAAW,GAAG,SAAS,CAAC,IAAI,GAAG,WAAW,GAAG,SAAS,CAAC,MAAM,GAAG,WAAW,GAAG,SAAS,CAAC,QAAQ;YAE1M,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,SAAS,GAAG,gFAAkB,CAAC,SAAS,CAAC,CAAC;YAClE,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,GAAG,gFAAkB,CAAC,SAAS,CAAC,CAAC;YAE9D,UAAU,GAAG,cAAc,GAAG,WAAW,GAAG,oCAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,cAAc,GAAG,SAAS,GAAG,oCAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,cAAc,GAAG,QAAQ,CAAC;YAEnM,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACxD,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;IAED,uCAAuC;IACvC,mCAAM,GAAN,UAAO,KAAK,EAAE,eAAe;QAA7B,iBA2DC;QAzDC,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;QACvB,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CACvB,CAAC;YACC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;QAClB,CAAC;QACD,IAAI,CACJ,CAAC;YACC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACnB,CAAC;QAED,IAAI,MAAM,CAAC;QACX,IAAI,MAAM,CAAC;QACX,eAAe,GAAG,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YAEnD,EAAE,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC,CACtB,CAAC;gBACC,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC/B,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC/B,MAAM,GAAG,CAAC,CAAC;gBACX,MAAM,GAAG,CAAC,CAAC;gBACX,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EACrC,CAAC;oBACC,MAAM,GAAG,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrC,MAAM,GAAG,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrC,EAAE,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC;wBACpB,KAAK,CAAC;gBACV,CAAC;YACH,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAC9B,CAAC;gBACC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC7B,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/B,CAAC;YACD,IAAI,CAAC,EAAE,EAAC,IAAI,KAAK,YAAY,IAAI,IAAI,KAAK,gBAAgB,CAAC,CAC3D,CAAC;gBACC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAC,MAAM,CAAC,CAAC;gBACzE,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAC,MAAM,CAAC,CAAC;gBACzE,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3B,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CACvB,CAAC;gBACC,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9D,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,EAAE,CAAE;QAClC,eAAe,CAAC,OAAO,CAAC,iBAAO;YAE7B,KAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6DAA6D;IAC7D,yCAAY,GAAZ,UAAa,KAAK;QAEhB,IAAI,qBAAqB,GAAqB,IAAI,8EAAe,EAAE,CAAC;QACpE,qBAAqB,CAAC,YAAY,GAAG,KAAK,CAAC,aAAa,CAAC;QACzD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACvD,CAAC;IAED,yDAA4B,GAA5B,UAA6B,KAAK;QAEhC,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE;YAC7C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;QACzC,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAC1C,CAAC;YACC,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAC/C,CAAC;gBACC,EAAE,EAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;oBAC1D,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;YAC5C,CAAC;QACH,CAAC;IACH,CAAC;IACH,yBAAC;AAAD,CAAC;AAxPC;IADC,4DAAK,EAAE;kDACG,8EAAe,oBAAf,8EAAe;qDAAC;AAI3B;IADC,4DAAK,EAAE;;qDACU;AAGT;IAAR,4DAAK,EAAE;;wDAAuB;AAK/B;IADC,4DAAK,EAAE;;8DACoB;AAuB5B;IADC,6DAAM,EAAE;;+DACiD;AA7C/C,kBAAkB;IAT9B,gEAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,kIAA0C;QAC1C,4CAA4C;QAC5C,wBAAwB;QACxB,SAAS,EAAE,CAAC,8EAAe,CAAC;KAC7B,CAAC;IAEF,qEAAqE;;yDAiDvC,4DAAM,oBAAN,4DAAM,sDAA6B,2FAAkB,oBAAlB,2FAAkB,sDAAwB,iFAAc,oBAAd,iFAAc;GAhD5G,kBAAkB,CAkQ9B;AAlQ8B;;;;;;;;;ACpB/B;AACA;;;AAGA;AACA,yCAA0C,6BAA6B,OAAO,mBAAmB,oBAAoB,OAAO,qBAAqB,kCAAkC,OAAO,gCAAgC,kCAAkC,OAAO,mBAAmB,iCAAiC,0BAA0B,0BAA0B,OAAO,uBAAuB,kCAAkC,kBAAkB,uBAAuB,OAAO,qBAAqB,oCAAoC,qBAAqB,4BAA4B,oBAAoB,4BAA4B,OAAO,kFAAkF,sBAAsB,oBAAoB,wBAAwB,OAAO,oBAAoB,2BAA2B,qBAAqB,OAAO,sBAAsB,wBAAwB,oBAAoB,0BAA0B,OAAO,qBAAqB,mBAAmB,0BAA0B,gBAAgB,2BAA2B,gBAAgB,4BAA4B,OAAO,aAAa,4BAA4B,OAAO,aAAa,4BAA4B,OAAO,WAAW,4BAA4B,oBAAoB,OAAO,qBAAqB,wBAAwB,OAAO,2BAA2B,6BAA6B,uBAAuB,0BAA0B,8BAA8B,qBAAqB,OAAO,iCAAiC,2BAA2B,qBAAqB,wBAAwB,4BAA4B,uBAAuB,mBAAmB,KAAK;;AAElpD;;;AAGA;AACA,2C;;;;;;;ACXA,uSAAuS,gBAAgB,2KAA2K,WAAW,sDAAsD,YAAY,gRAAgR,oBAAoB,2CAA2C,oBAAoB,kMAAkM,oBAAoB,2CAA2C,oBAAoB,+NAA+N,iBAAiB,wCAAwC,iBAAiB,+LAA+L,iBAAiB,wCAAwC,iBAAiB,+NAA+N,iBAAiB,yCAAyC,iBAAiB,+LAA+L,iBAAiB,wCAAwC,iBAAiB,6NAA6N,uDAAuD,sCAAsC,uDAAuD,6LAA6L,wDAAwD,sCAAsC,wDAAwD,iQAAiQ,gCAAgC,uSAAuS,MAAM,mE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh9G;AACf;AACA;AAChB;AACV;AACS;AAEkB;AACG;AACU;AAG7E,oDAAoD;AASpD,IAAa,gBAAgB;IAiD3B,6CAA6C;IAC7C,0BAAoB,MAAc,EAAS,eAA+B,EAAS,mBAAuC;QAAtG,WAAM,GAAN,MAAM,CAAQ;QAAS,oBAAe,GAAf,eAAe,CAAgB;QAAS,wBAAmB,GAAnB,mBAAmB,CAAoB;QAhD1H,yBAAyB;QACzB,cAAS,GAAG,kBAAkB,CAAC;QAG/B,2BAA2B;QAC3B,gBAAW,GAAG,UAAU,CAAC;QA+BzB,uFAAuF;QAEvF,oBAAe,GAAG,IAAI,2DAAY,EAAU,CAAC;QAE7C,uDAAuD;QAEvD,oBAAe,GAAG,IAAI,2DAAY,EAAW,CAAC;QAG9C,0BAAqB,GAAG,IAAI,2DAAY,EAAkB,CAAC;IAIzD,CAAC;IAEH,mCAAQ,GAAR;QAAA,iBA0CC;QAxCC,IACA,CAAC;YAEC,sBAAsB;YACtB,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;YAC9C,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC;gBAChC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAE3B,yBAAyB;YACzB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,UAAU,IAAI,IAAI,CAAC,WAAW,IAAI,UAAU,CAAC;gBACnE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,IAAI;gBACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAE7B,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;gBACtB,IAAI,CAAC,UAAU,GAAG,6EAAU,CAAC;YAC/B,IAAI;gBACF,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;YAE5G,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,EAAE,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;YAE/J,qBAAqB;YACrB,IAAI,CAAC,QAAQ,GAAG,6EAAU,CAAC;YAE3B,wCAAwC;YACxC,IAAI,CAAC,KAAK,GAAG,IAAI,6DAAK,EAAE,CAAC;YAEzB,+CAA+C;YAC/C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAE1B,qCAAqC;YACrC,2DAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CACjC,WAAC,IAAI,YAAI,CAAC,OAAO,EAAE,EAAd,CAAc,CACpB,CAAC;QACJ,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;QACnD,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC;IACpH,CAAC;IACD,uEAAuE;IACvE,kCAAO,GAAP;QAEG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC;IAED,oEAAoE;IACpE,oCAAS,GAAT,UAAU,SAAS;QAEjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,qCAAqC,EAAE,SAAS,CAAC,CAAC;QAEpG,iDAAiD;QACjD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC;QAGxF,8CAA8C;QAC9C,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAED,8DAA8D;IAC9D,uCAAY,GAAZ,UAAa,SAAiB;QAE5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,qCAAqC,EAAE,SAAS,CAAC,CAAC;QAEpG,iDAAiD;QACjD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC;QAExF,8CAA8C;QAC9C,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAED,mFAAmF;IACnF,qCAAU,GAAV;QAEE,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,EAAE,iBAAiB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACvF,CAAC;IAED,4CAAiB,GAAjB,UAAkB,SAAiB,EAAE,QAAgB;QAEnD,IAAI,QAAQ,GAAmB;YAC7B,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;SACnB,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,mBAAmB,EAAE,YAAY,GAAG,SAAS,GAAG,YAAY,GAAG,QAAQ,CAAC,CAAC;QAC1G,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE1C,8CAA8C;QAC9C,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IACH,uBAAC;AAAD,CAAC;AA3HC;IADC,4DAAK,EAAE;;uDACc;AAGtB;IADC,4DAAK,EAAE;kDACG,8EAAe,oBAAf,8EAAe;mDAAC;AAI3B;IADC,4DAAK,EAAE;;4DACoB;AAK5B;IADC,6DAAM,EAAE;;yDACoC;AAI7C;IADC,6DAAM,EAAE;;yDACqC;AAG9C;IADC,6DAAM,EAAE;;+DACkD;AA/ChD,gBAAgB;IAR5B,gEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,8HAAwC;QACxC,6HAAuC;KAExC,CAAC;IAEF,gGAAgG;;yDAmDlE,4DAAM,oBAAN,4DAAM,sDAA0B,iFAAc,oBAAd,iFAAc,sDAA8B,2FAAkB,oBAAlB,2FAAkB;GAlD/G,gBAAgB,CAuJ5B;AAvJ4B;;;;;;;;;ACrB7B;AACA;;;AAGA;AACA,oCAAqC,iCAAiC,KAAK,gBAAgB,kCAAkC,OAAO,uBAAuB,wBAAwB,KAAK,gBAAgB,wBAAwB,uBAAuB,qBAAqB,KAAK,+BAA+B,iBAAiB,mBAAmB,KAAK,sBAAsB,gBAAgB,KAAK,oBAAoB,wCAAwC,KAAK;;AAErc;;;AAGA;AACA,2C;;;;;;;ACXA,+UAA+U,8CAA8C,wkBAAwkB,yNAAyN,w1B;;;;;;;;;;;;;;;;;;;;;ACAjmC;AACc;AAC9B;AAM7C,IAAa,yBAAyB;IAMpC,mCAAmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAEjD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC;QAChD,eAAe,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC;IACjE,CAAC;IAED,4CAAQ,GAAR;QAAA,iBAcC;QAZC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACtD,uEAAuE;QACvE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,CAC7C,aAAG;YAED,EAAE,EAAC,GAAG,CAAC;gBACL,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC1B,IAAI;gBACF,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAC7B,CAAC,CACF,CAAC;IAEJ,CAAC;IAED,uDAAmB,GAAnB;QAEI,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3C,CAAC;IACH,gCAAC;AAAD,CAAC;AA7BiC;IAA/B,gEAAS,CAAC,mBAAmB,CAAC;kDAAc,qEAAU,oBAAV,qEAAU;8DAAC;AAJ7C,yBAAyB;IALrC,gEAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,mJAAkD;QAClD,kJAAiD;KAClD,CAAC;yDAOoC,yFAAe,oBAAf,yFAAe;GANxC,yBAAyB,CAiCrC;AAjCqC;;;;;;;;;ACRtC;AACA;;;AAGA;AACA,wCAAyC,kBAAkB,wBAAwB,iBAAiB,gBAAgB,KAAK,8BAA8B,sBAAsB,+BAA+B,qBAAqB,KAAK,2BAA2B,kDAAkD,MAAM,wBAAwB,0BAA0B,KAAK;;AAEhX;;;AAGA;AACA,2C;;;;;;;ACXA,irBAAirB,gBAAgB,KAAK,cAAc,4CAA4C,cAAc,KAAK,cAAc,48CAA48C,iBAAiB,gBAAgB,iBAAiB,uZAAuZ,aAAa,YAAY,aAAa,0HAA0H,gBAAgB,WAAW,gBAAgB,YAAY,gBAAgB,sIAAsI,aAAa,WAAW,aAAa,YAAY,aAAa,sIAAsI,aAAa,WAAW,aAAa,YAAY,aAAa,4MAA4M,cAAc,WAAW,cAAc,YAAY,cAAc,uRAAuR,mBAAmB,UAAU,mBAAmB,6EAA6E,sBAAsB,WAAW,sBAAsB,YAAY,sBAAsB,4IAA4I,mBAAmB,WAAW,mBAAmB,YAAY,mBAAmB,4IAA4I,mBAAmB,WAAW,mBAAmB,YAAY,mBAAmB,mQAAmQ,eAAe,UAAU,eAAe,yEAAyE,kBAAkB,WAAW,kBAAkB,YAAY,kBAAkB,wIAAwI,eAAe,WAAW,eAAe,YAAY,eAAe,wIAAwI,eAAe,WAAW,eAAe,YAAY,eAAe,mQAAmQ,kBAAkB,UAAU,kBAAkB,sIAAsI,mBAAmB,WAAW,mBAAmB,YAAY,mBAAmB,oKAAoK,sBAAsB,WAAW,sBAAsB,YAAY,sBAAsB,oPAAoP,sBAAsB,WAAW,sBAAsB,YAAY,sBAAsB,4SAA4S,oBAAoB,UAAU,oBAAoB,2IAA2I,wBAAwB,WAAW,wBAAwB,YAAY,wBAAwB,sKAAsK,wBAAwB,WAAW,wBAAwB,YAAY,wBAAwB,oOAAoO,qBAAqB,WAAW,qBAAqB,YAAY,qBAAqB,4SAA4S,iBAAiB,UAAU,iBAAiB,kIAAkI,eAAe,WAAW,eAAe,YAAY,eAAe,qNAAqN,yBAAyB,WAAW,yBAAyB,YAAY,yBAAyB,ufAAuf,iBAAiB,WAAW,iBAAiB,YAAY,iBAAiB,8KAA8K,sBAAsB,WAAW,sBAAsB,YAAY,sBAAsB,mNAAmN,sBAAsB,WAAW,sBAAsB,YAAY,sBAAsB,uLAAuL,mBAAmB,WAAW,mBAAmB,YAAY,mBAAmB,+sBAA+sB,gBAAgB,KAAK,cAAc,0CAA0C,MAAM,KAAK,MAAM,6mBAA6mB,gBAAgB,KAAK,cAAc,0CAA0C,aAAa,KAAK,aAAa,yqBAAyqB,eAAe,sGAAsG,eAAe,+KAA+K,iBAAiB,sGAAsG,iBAAiB,iLAAiL,mBAAmB,sGAAsG,mBAAmB,oYAAoY,gBAAgB,WAAW,gBAAgB,YAAY,gBAAgB,uSAAuS,oBAAoB,WAAW,oBAAoB,YAAY,oBAAoB,iSAAiS,wBAAwB,WAAW,wBAAwB,YAAY,wBAAwB,oUAAoU,kCAAkC,WAAW,kCAAkC,YAAY,kCAAkC,2RAA2R,kBAAkB,WAAW,kBAAkB,YAAY,kBAAkB,swB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3jd;AAEQ;AAEiB;AACR;AACD;AACK;AACN;AACnB;AACd;AAMhC,IAAa,wBAAwB;IA8InC,kCAAoB,MAAc,EAAU,eAAgC,EAAU,eAA+B;QAAjG,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAgB;QA5IrH,cAAS,GAAG,0BAA0B,CAAC;QA8BvC,yDAAyD;QACzD,aAAQ,GAAS,IAAI,CAAC;QACtB,gBAAW,GAAO,IAAI,IAAI,EAAE,CAAC;QAC7B,uDAAuD;QACvD,WAAM,GAAS,IAAI,CAAC;QAoEpB,mBAAc,GAAG,KAAK,CAAC;QAkCvB,oBAAe,GAAG,sBAAsB,CAAC;QAE1C,gDAAgD;QAC/C,qBAAgB,GAAG,CAAC,CAAC;QAGnB,IACA,CAAC;YACC,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;YAC/C,0BAA0B;YAC1B,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC,eAAe,CAAC,YAAY,CAAC;YAGhE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,UAAU,IAAI,IAAI,CAAC,WAAW,IAAI,UAAU,CAAC;gBACnE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,IAAI;gBACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAE7B,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CACxB,CAAC;gBACC,IAAI,CAAC,OAAO,GAAG,gFAAkB,CAAC;gBAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAChD,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,IAAI,CAAC,OAAO,GAAG,mFAAqB,CAAC;gBACrC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAChD,CAAC;YAED,oCAAoC;YACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;YAChE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,oBAAoB,GAAG,IAAI,CAAC,cAAc,EAAE,YAAY,EAAE,IAAI,CAAC,MAAM,EAAE,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzJ,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAE3B,0BAA0B;YAC1B,IAAI,CAAC,SAAS,GAAG,6EAAe,CAAC;YACjC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YAExB,2DAA2D;YAC3D,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACjC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAE/D,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC,uBAAuB,GAAG,EAAE,CAAC;YAEhE,qDAAqD;YACrD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;YAC5B,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;YAChC,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;YAEpC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC,CACrC,CAAC;gBACC,IAAI,CAAC,aAAa,GAAG,8EAAgB,GAAG,IAAI,CAAC;gBAC7C,IAAI,CAAC,eAAe,GAAG,8EAAgB,GAAG,IAAI,CAAC;gBAC/C,IAAI,CAAC,iBAAiB,GAAG,8EAAgB,GAAG,IAAI,CAAC;YACnD,CAAC;QACH,CAAC;QACD,KAAK,EAAC,CAAC,CAAC,CACR,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,EAAE,cAAc,EAAE,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAED,oDAAoD;IACpD,iDAAc,GAAd;QAAA,iBAcC;QAZC,IAAI,GAAG,CAAC;QACR,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK;YAElC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,KAAK,KAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAC3D,CAAC;gBACC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,IAAK,yEAAW,CAAC,YAAY,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,UAAU,IAAI,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,UAAU,CAAC,CAAC;oBACnL,GAAG,GAAG,CAAC,CAAC;gBACV,IAAI;oBACF,GAAG,GAAG,KAAK,CAAC;YAChB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAuDC;QArDC,IACA,CAAC;YAEC,IAAI,aAAW,GAAqB,IAAI,+EAAgB,EAAE,CAAC;YAE3D,oFAAoF;YACpF,IAAI,CAAC,gBAAgB,CAAC,aAAW,CAAC,CAAC;YAEnC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CACzC,aAAG;gBAED,aAAW,GAAG,GAAG,CAAC;gBAClB,KAAI,CAAC,gBAAgB,CAAC,aAAW,CAAC,CAAC;YACrC,CAAC,CACF,CAAC;YAEF,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,kCAAkC;YAClC,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,SAAS,CAC9C,aAAG;gBAED,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC,CACF,CAAC;YAEF,sBAAsB;YACtB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,SAAS,CAC5C,kBAAQ;gBAEN,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;YAEL,4BAA4B;YAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,EAAE,EAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,IAAI,SAAS,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,IAAI,EAAE,CAAC,CACrG,CAAC;gBACC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;gBACjE,IAAI,CAAC,eAAe,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC7C,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,wDAAwD;gBACxD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC;QAEH,CAAC;QACD,KAAK,EAAC,CAAC,CAAC,CACR,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;QACnE,CAAC;IACH,CAAC;IAED,mGAAmG;IACnG,wDAAqB,GAArB,UAAsB,gBAAwB;QAE5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,yBAAyB,EAAE,sBAAsB,EAAE,gBAAgB,EAAE,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;QAClJ,sBAAsB;QACtB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,mBAAmB;QACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAEhC,sBAAsB;QACtB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,UAAU,GAAmB,IAAI,gFAAc,EAAE,CAAC;QACtD,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,WAAW,GAAC,EAAE,CAAC;QACzE,UAAU,CAAC,eAAe,GAAG,gBAAgB,CAAC;QAC9C,EAAE,EAAC,IAAI,CAAC,cAAc,IAAI,yEAAW,CAAC,MAAM,CAAC,CAC7C,CAAC;YACC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;YACxC,UAAU,CAAC,aAAa,GAAG,CAAC,CAAC;YAC7B,UAAU,CAAC,aAAa,GAAG,oCAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;YAC/E,UAAU,CAAC,WAAW,GAAG,oCAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;QAC7E,CAAC;QACD,IAAI,CACJ,CAAC;YACC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;YACxC,UAAU,CAAC,aAAa,GAAG,CAAC,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,eAAe,CAAC,0CAA0C,CAAC,CAAC;QACjG,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;IACxD,CAAC;IAED,sEAAsE;IACtE,4DAAyB,GAAzB;QAEE,IACA,CAAC;YACC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC7B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;YAC/E,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yFAA2B,CAAC,SAAS,EAAE,KAAK,EAAE,yFAA2B,CAAC,SAAS,EAAE,CAAC,CAAC;YAC7H,EAAE,EAAC,IAAI,CAAC,cAAc,CAAC;gBACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yFAA2B,CAAC,aAAa,EAAE,KAAK,EAAE,yFAA2B,CAAC,aAAa,EAAE,CAAC,CAAC;YACvI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yFAA2B,CAAC,OAAO,EAAE,KAAK,EAAE,yFAA2B,CAAC,OAAO,EAAE,CAAC,CAAC;QAC3H,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,2BAA2B,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;QACpF,CAAC;IACH,CAAC;IAED,mDAAgB,GAAhB,UAAiB,WAA6B;QAE5C,IACA,CAAC;YACC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC;gBAC3D,IAAI,CAAC,WAAW,GAAG,cAAc,GAAG,CAAC,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;YAC5I,IAAI;gBACF,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;YAElC,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC;gBAC7E,IAAI,CAAC,iBAAiB,GAAG,oBAAoB,GAAG,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC,GAAG,GAAG,CAAC;YAC1I,IAAI;gBACF,IAAI,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;YAE9C,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC;gBACjE,IAAI,CAAC,aAAa,GAAG,gBAAgB,GAAG,CAAC,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;YACxH,IAAI;gBACF,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC;YAEtC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC;gBAChF,IAAI,CAAC,gBAAgB,GAAG,mBAAmB,GAAG,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;YACpI,IAAI;gBACF,IAAI,CAAC,gBAAgB,GAAG,iBAAiB,CAAC;YAE5C,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,kBAAkB,CAAC;gBACtF,IAAI,CAAC,kBAAkB,GAAG,qBAAqB,GAAG,CAAC,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC,GAAG,GAAG,CAAC;YAC9I,IAAI;gBACF,IAAI,CAAC,kBAAkB,GAAG,mBAAmB,CAAC;YAEhD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,sBAAsB,CAAC;gBACnD,IAAI,CAAC,eAAe,GAAG,kBAAkB,GAAG,CAAC,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC;YAC7G,IAAI;gBACF,IAAI,CAAC,eAAe,GAAG,gBAAgB,CAAC;YAE1C,EAAE,EAAC,IAAI,CAAC,aAAa,CAAC;gBACpB,IAAI,CAAC,cAAc,GAAG,YAAY,GAAG,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;YACnE,IAAI;gBACF,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;YAEnC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClB,IAAI,CAAC,WAAW,GAAG,SAAS,GAAG,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;YAC7D,IAAI;gBACF,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;YAE7B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClB,IAAI,CAAC,WAAW,GAAG,SAAS,GAAG,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;YAC7D,IAAI;gBACF,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;YAEhC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;gBAChB,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;YAC/D,IAAI;gBACF,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC;gBAC3B,IAAI,CAAC,oBAAoB,GAAG,YAAY,GAAG,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;YAC3E,IAAI;gBACF,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC;YAEzC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBACxB,IAAI,CAAC,iBAAiB,GAAG,SAAS,GAAG,WAAW,CAAC,aAAa,GAAG,GAAG,CAAC;YACvE,IAAI;gBACF,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;YAEnC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBACxB,IAAI,CAAC,iBAAiB,GAAG,SAAS,GAAG,WAAW,CAAC,aAAa,GAAG,GAAG,CAAC;YACvE,IAAI;gBACF,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;YAEnC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC;gBACvB,IAAI,CAAC,gBAAgB,GAAG,YAAY,GAAG,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;YACrE,IAAI;gBACF,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC;YAErC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;gBACpB,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;YAC/D,IAAI;gBACF,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;YAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;gBACpB,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;YAC/D,IAAI;gBACF,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;YAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBACxB,IAAI,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;YAC9E,IAAI;gBACF,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;YAE5C,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC;gBAC3B,IAAI,CAAC,oBAAoB,GAAG,qBAAqB,GAAG,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;YACpF,IAAI;gBACF,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;YAElD,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC;gBAC3B,IAAI,CAAC,oBAAoB,GAAG,qBAAqB,GAAG,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;YACpF,IAAI;gBACF,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;YAElD,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC;gBAC7B,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,GAAG,WAAW,CAAC,aAAa,GAAG,GAAG,CAAC;YACxF,IAAI;gBACF,IAAI,CAAC,sBAAsB,GAAG,mBAAmB,CAAC;YAEpD,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC;gBAC7B,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,GAAG,WAAW,CAAC,aAAa,GAAG,GAAG,CAAC;YACxF,IAAI;gBACF,IAAI,CAAC,sBAAsB,GAAG,mBAAmB,CAAC;YAEpD,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;gBAC1B,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,GAAG,WAAW,CAAC,aAAa,GAAG,GAAG,CAAC;YAClF,IAAI;gBACF,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC;YAE9C,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;gBACpB,IAAI,CAAC,aAAa,GAAG,eAAe,GAAG,WAAW,CAAC,aAAa,GAAG,GAAG,CAAC;YACzE,IAAI;gBACF,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YAErC,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC;gBAC9B,IAAI,CAAC,uBAAuB,GAAG,sCAAsC,GAAG,WAAW,CAAC,cAAc,GAAG,GAAG,CAAC;YAC3G,IAAI;gBACF,IAAI,CAAC,uBAAuB,GAAG,oCAAoC,CAAC;YAEtE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;gBACtB,IAAI,CAAC,eAAe,GAAG,OAAO,GAAG,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;YACjE,IAAI;gBACF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC;gBAC3B,IAAI,CAAC,oBAAoB,GAAG,YAAY,GAAG,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;YAC3E,IAAI;gBACF,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC;YAEzC,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC;gBAC3B,IAAI,CAAC,oBAAoB,GAAG,YAAY,GAAG,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;YAC3E,IAAI;gBACF,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC;YAEzC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBACxB,IAAI,CAAC,iBAAiB,GAAG,SAAS,GAAG,WAAW,CAAC,QAAQ,GAAG,GAAG,CAAC;YAClE,IAAI;gBACF,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;YAEnC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;gBACrB,IAAI,CAAC,cAAc,GAAG,gBAAgB,GAAG,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;YACvE,IAAI;gBACF,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YAEvC,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBACzB,IAAI,CAAC,kBAAkB,GAAG,oBAAoB,GAAG,WAAW,CAAC,aAAa,GAAG,GAAG,CAAC;YACnF,IAAI;gBACF,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YAE/C,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC;gBAC7B,IAAI,CAAC,sBAAsB,GAAG,yBAAyB,GAAG,WAAW,CAAC,YAAY,GAAG,GAAG,CAAC;YAC3F,IAAI;gBACF,IAAI,CAAC,sBAAsB,GAAG,uBAAuB,CAAC;YAExD,EAAE,CAAC,CAAC,IAAI,CAAC,+BAA+B,CAAC;gBACvC,IAAI,CAAC,gCAAgC,GAAG,8BAA8B,GAAG,WAAW,CAAC,gBAAgB,GAAG,GAAG,CAAC;YAC9G,IAAI;gBACF,IAAI,CAAC,gCAAgC,GAAG,4BAA4B,CAAC;YAEvE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC;gBACvB,IAAI,CAAC,gBAAgB,GAAG,kBAAkB,GAAG,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;YAC7E,IAAI;gBACF,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QAC7C,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,kBAAkB,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;QAC3E,CAAC;IACH,CAAC;IAED,+CAAY,GAAZ;QAAA,iBAkBC;QAhBC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CACvC,kBAAQ;YAEN,IAAI,QAAQ,GAAG,QAAQ,CAAC;YAExB,QAAQ,CAAC,OAAO,CAAC,kBAAQ;gBAEvB,IAAI,QAAQ,GAAG;oBACb,KAAK,EAAE,QAAQ;oBACf,KAAK,EAAE,QAAQ;iBAChB;gBACD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC,CACF,CAAC;IAEJ,CAAC;IACD,oDAAiB,GAAjB,UAAkB,EAAE;QAElB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;IAC7C,CAAC;IAED,mDAAgB,GAAhB;QAEE,4BAA4B;QAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QAEnC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,qCAAqC;IACrC,8CAAW,GAAX;QAEE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,UAAU,IAAI,IAAI,CAAC,WAAW,IAAI,UAAU,CAAC;YACnE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9C,IAAI;YACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAE9C,kCAAkC;QAClC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAEzB,oCAAoC;QACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,uDAAuD;IACvD,+CAAY,GAAZ,UAAa,QAAiB;QAE5B,IACA,CAAC;YACC,kEAAkE;YAClE,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YACtB,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,gFAAkB,CAAC,IAAI,CAAC;YAClE,yDAAyD;YACzD,mEAAmE;YAEnE,uDAAuD;YAC7D,mFAAmF;YAE7E,gBAAgB;YAChB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAEzB,sBAAsB;YACtB,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;YACpC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YACjC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YAEjC,iBAAiB;YACjB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;YAChC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAC7B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAE7B,mBAAmB;YACnB,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YACjC,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;YACpC,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;YAEpC,sBAAsB;YACtB,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC;YACtC,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC;YACtC,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;YAEnC,sBAAsB;YACtB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAE7B,qCAAqC;YACrC,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC;YAEvC,gBAAgB;YAChB,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;YAC/B,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;YACpC,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;YACpC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YAEjC,oBAAoB;YACpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YAExB,oBAAoB;YACpB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;YAC9B,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;YAClC,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC;YACtC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;YAChC,IAAI,CAAC,+BAA+B,GAAG,QAAQ,CAAC;YAEhD,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,sBAAsB;YACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAE3B,mBAAmB;YACnB,8CAA8C;YAC9C,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;YACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;QACvE,CAAC;IACH,CAAC;IAED,sFAAsF;IACtF,qDAAkB,GAAlB;QAEE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CACxB,CAAC;YACC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC;QACD,IAAI,CACJ,CAAC;YACC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC;QACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,mDAAmD;IACnD,kDAAe,GAAf;QAEE,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,gBAAgB,CAAC;YAChF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,IAAI;YACF,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,yEAAyE;IACzE,uDAAoB,GAApB;QAEE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CACzB,CAAC;YACC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC;IACH,CAAC;IAED,gEAAgE;IAChE,+CAAY,GAAZ,UAAa,cAAuB;QAElC,IACA,CAAC;YACC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAC/B,CAAC;gBACC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,kDAAkD,CAAC,CAAC;gBACvG,MAAM,CAAC;YACT,CAAC;YACD,EAAE,EAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,+BAA+B,CAAC,CAC9I,CAAC;gBACC,EAAE,EAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAC1B,CAAC;oBACC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,+CAA+C,CAAC,CAAC;oBACpG,MAAM,CAAC;gBACT,CAAC;YACH,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,EAAE,EAAC,IAAI,CAAC,gBAAgB,CAAC,CACzB,CAAC;oBACC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,wDAAwD,CAAC,CAAC;oBAC7G,MAAM,CAAC;gBACT,CAAC;YACH,CAAC;YACD,EAAE,EAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,sBAAsB,CAAC,CAC5b,CAAC;gBACC,EAAE,EAAC,CAAC,IAAI,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAC1D,CAAC;oBACC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,8DAA8D,CAAC,CAAC;oBACnH,MAAM,CAAC;gBACT,CAAC;YACH,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,EAAE,EAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,CACxD,CAAC;oBACC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,iEAAiE,CAAC,CAAC;oBACtH,MAAM,CAAC;gBACT,CAAC;YACH,CAAC;YACD,IAAI,UAAU,GAAmB,IAAI,gFAAc,EAAE,CAAC;YAEtD,qCAAqC;YACrC,UAAU,CAAC,SAAS,GAAG,iFAAmB,CAAC;YAE3C,iCAAiC;YACjC,UAAU,CAAC,KAAK,GAAG,yEAAW,CAAC;YAE/B,yEAAyE;YACzE,IAAI,YAAY,GAAG,EAAE,CAAC;YACtB,qDAAqD;YACrD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CACxB,CAAC;gBACC,UAAU,CAAC,SAAS,GAAG,4EAAc,CAAC;gBACtC,YAAY,GAAG,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;YACvD,CAAC;YACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAC7D,CAAC;gBACC,UAAU,CAAC,SAAS,GAAG,4EAAc,CAAC;gBACvC,YAAY,GAAG,cAAc,GAAG,IAAI,CAAC,oBAAoB,GAAG,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC;YAC9F,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAC7B,CAAC;oBACC,UAAU,CAAC,SAAS,GAAG,iFAAmB,CAAC;oBAC3C,EAAE,CAAC,CAAC,YAAY,IAAI,EAAE,CAAC;wBACrB,YAAY,GAAG,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC;oBAC5D,IAAI;wBACF,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBACrD,CAAC;gBACD,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAC7B,CAAC;oBACC,UAAU,CAAC,SAAS,GAAG,mFAAqB,CAAC;oBAC7C,EAAE,CAAC,CAAC,YAAY,IAAI,EAAE,CAAC;wBACrB,YAAY,GAAG,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC;oBAC5D,IAAI;wBACF,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBACrD,CAAC;gBACD,EAAE,EAAC,IAAI,CAAC,gBAAgB,CAAC,CACzB,CAAC;oBACC,EAAE,CAAC,CAAC,YAAY,IAAI,EAAE,CAAC;wBACrB,YAAY,GAAG,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC;oBACzD,IAAI;wBACF,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBAClD,CAAC;YACH,CAAC;YAED,2EAA2E;YAC3E,IAAI,aAAa,GAAG,EAAE,CAAC;YACvB,qDAAqD;YACrD,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,CACxF,CAAC;gBACC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAC5B,aAAa,GAAG,iBAAiB;YACnC,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBACrD,aAAa,GAAG,cAAc,GAAG,UAAU,CAAC,QAAQ,CAAC;YACvD,CAAC;YAED,sEAAsE;YACtE,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,8EAA8E;YAC9E,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,SAAS,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC,CAC1D,CAAC;gBACC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;gBAElC,EAAE,CAAC,CAAC,WAAW,IAAI,EAAE,CAAC;oBACpB,WAAW,GAAG,YAAY,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;gBAC3E,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;YACtE,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAC9D,CAAC;gBACC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;gBAEtC,EAAE,CAAC,CAAC,WAAW,IAAI,EAAE,CAAC;oBACpB,WAAW,GAAG,YAAY,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,GAAI,UAAU,CAAC,MAAM,CAAC;gBAChF,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC;YAC1E,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,SAAS,IAAI,IAAI,CAAC,cAAc,IAAI,EAAE,CAAC,CAClE,CAAC;gBACC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;gBAE1C,EAAE,CAAC,CAAC,WAAW,IAAI,EAAE,CAAC;oBACpB,WAAW,GAAG,YAAY,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC;gBACnF,IAAI;oBACF,WAAW,IAAI,IAAI,GAAE,IAAI,CAAC,iBAAiB,GAAG,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC;YAC7E,CAAC;YAED,+CAA+C;YAC/C,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,WAAW,GAAC,EAAE,CAAC;YAEzE,iCAAiC;YACjC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAEtB,kCAAkC;YAClC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;YAEtB,iDAAiD;YACjD,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;YAExC,uCAAuC;YACvC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC;gBACxD,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC;YAC5B,IAAI;gBACF,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC;YAE5B,4FAA4F;YAC5F,IAAI,iBAAiB,GAAa,IAAI,KAAK,EAAU,CAAC;YACtD,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE1C,yCAAyC;YACzC,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,yEAAW,CAAC,MAAM,CAAC,CAC5C,CAAC;gBACC,UAAU,CAAC,aAAa,GAAG,CAAC,CAAC;gBAE7B,2FAA2F;gBAC3F,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAC1D,CAAC;oBACC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,wEAAwE,CAAC,CAAC;oBAC7H,MAAM,CAAC;gBACT,CAAC;gBAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,CACtD,CAAC;oBACC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,oEAAoE,CAAC,CAAC;oBACzH,MAAM,CAAC;gBACT,CAAC;gBAED,IAAI,WAAW,GAAS,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChD,IAAI,SAAS,GAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC5C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;gBACxD,EAAE,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,CACjD,CAAC;oBACC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,6DAA6D,CAAC,CAAC;oBAClH,MAAM,CAAC;gBACT,CAAC;gBAED,UAAU,CAAC,aAAa,GAAG,oCAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;gBAE/E,UAAU,CAAC,WAAW,GAAG,oCAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;gBAE3E,sDAAsD;gBACtD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;gBAEhI,wFAAwF;gBACxF,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,aAAa,GAAG,MAAM,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;YACxG,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,UAAU,CAAC,aAAa,GAAG,CAAC,CAAC;gBAE7B,gDAAgD;gBAChD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;gBAEhI,kGAAkG;gBAClG,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;YAC/D,CAAC;YAGD,wIAAwI;YACxI,IAAI,qBAAqB,GAAQ,EAAE,CAAC;YAEpC,oGAAoG;YACpG,IAAI,iBAAiB,GAA0B,IAAI,KAAK,EAAuB,CAAC;YAEhF,0DAA0D;YAC1D,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,2CAA2C;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CACvB,CAAC;gBACC,kFAAkF;gBAClF,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,QAAQ,CAAC;gBAC3D,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;oBACrB,WAAW,GAAG,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;gBACtD,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC;YAC9C,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CACpB,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBACxD,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;oBACrB,WAAW,GAAG,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC;gBACnD,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YAC3C,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CACpB,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBACxD,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;oBACrB,WAAW,GAAG,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC;gBACnD,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YAC3C,CAAC;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAClB,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,MAAM,CAAC;gBACzD,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;oBACrB,WAAW,GAAG,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC;gBACpD,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;YAC5C,CAAC;YACD,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,CAAC;gBAChC,qBAAqB,CAAC,yEAAW,CAAC,OAAO,CAAC,GAAG,iBAAiB,CAAC;YAEjE,uEAAuE;YACvE,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,sCAAsC;YACtC,iBAAiB,GAAG,IAAI,KAAK,EAAuB,CAAC;YACrD,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAC7B,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,QAAQ,CAAC;gBAC3D,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;oBACrB,WAAW,GAAG,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBACjE,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC;YACpD,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAC1B,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBACxD,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;oBACrB,WAAW,GAAG,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBAC9D,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACjD,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAC1B,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBACxD,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;oBACrB,WAAW,GAAG,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBAC9D,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACjD,CAAC;YACD,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,CAAC;gBAChC,qBAAqB,CAAC,yEAAW,CAAC,SAAS,CAAC,GAAG,iBAAiB,CAAC;YAEnE,mEAAmE;YACnE,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,kCAAkC;YAClC,iBAAiB,GAAG,IAAI,KAAK,EAAuB,CAAC;YACrD,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CACzB,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,MAAM,CAAC;gBACzD,cAAc,CAAC,YAAY,GAAG,qFAAuB,CAAC,QAAQ,CAAC;gBAC/D,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;oBACrB,WAAW,GAAG,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAC1D,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAChD,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CACtB,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,MAAM,CAAC;gBACzD,cAAc,CAAC,YAAY,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBAC5D,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;oBACrB,WAAW,GAAG,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC;gBACvD,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;YAC7C,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CACtB,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,MAAM,CAAC;gBACzD,cAAc,CAAC,YAAY,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBAC5D,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;oBACrB,WAAW,GAAG,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC;gBACvD,IAAI;oBACF,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;YAC7C,CAAC;YACD,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,CAAC;gBAChC,qBAAqB,CAAC,yEAAW,CAAC,KAAK,CAAC,GAAG,iBAAiB,CAAC;YAC/D,wEAAwE;YAExE,qEAAqE;YACrE,IAAI,UAAU,GAAG,EAAE,CAAC;YACpB,6BAA6B;YAC7B,iBAAiB,GAAG,IAAI,KAAK,EAAuB,CAAC;YACrD,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAC1B,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,YAAY,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBAC5D,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBACxD,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,UAAU,KAAK,EAAE,CAAC;oBACpB,UAAU,GAAG,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBAC7D,IAAI;oBACF,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAChD,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAC7B,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,YAAY,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBAC5D,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,QAAQ,CAAC;gBAC3D,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,UAAU,KAAK,EAAE,CAAC;oBACpB,UAAU,GAAG,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBAChE,IAAI;oBACF,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC;YACnD,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAC7B,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,YAAY,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBAC5D,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,QAAQ,CAAC;gBAC3D,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,UAAU,KAAK,EAAE,CAAC;oBACpB,UAAU,GAAG,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBAChE,IAAI;oBACF,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC;YACnD,CAAC;YACD,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,CAAC;gBAChC,qBAAqB,CAAC,yEAAW,CAAC,QAAQ,CAAC,GAAG,iBAAiB,CAAC;YAClE,4EAA4E;YAE5E,uEAAuE;YACvE,IAAI,UAAU,GAAG,EAAE,CAAC;YACpB,+BAA+B;YAC/B,iBAAiB,GAAG,IAAI,KAAK,EAAuB,CAAC;YACrD,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAC/B,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,YAAY,GAAG,qFAAuB,CAAC,QAAQ,CAAC;gBAC/D,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBACxD,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,UAAU,KAAK,EAAE,CAAC;oBACpB,UAAU,GAAG,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;gBACpE,IAAI;oBACF,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC;YACrD,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAC/B,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,YAAY,GAAG,qFAAuB,CAAC,QAAQ,CAAC;gBAC/D,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBACxD,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,UAAU,KAAK,EAAE,CAAC;oBACpB,UAAU,GAAG,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;gBACpE,IAAI;oBACF,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC;YACrD,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAC5B,CAAC;gBACC,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,cAAc,CAAC,YAAY,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBAC5D,cAAc,CAAC,QAAQ,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBACxD,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvC,EAAE,CAAC,CAAC,UAAU,KAAK,EAAE,CAAC;oBACpB,UAAU,GAAG,sBAAsB,GAAG,IAAI,CAAC,mBAAmB,CAAC;gBACjE,IAAI;oBACF,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAClD,CAAC;YACD,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,CAAC;gBAChC,qBAAqB,CAAC,yEAAW,CAAC,UAAU,CAAC,GAAG,iBAAiB,CAAC;YAEpE,gFAAgF;YAChF,IAAI,gBAAgB,GAAG,EAAE,CAAC;YAC1B,iCAAiC;YACjC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CACtB,CAAC;gBACC,iBAAiB,GAAG,IAAI,KAAK,EAAuB,CAAC;gBACrD,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACvC,qBAAqB,CAAC,yEAAW,CAAC,UAAU,CAAC,GAAG,iBAAiB,CAAC;gBAElE,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC;YACxC,CAAC;YAED,kGAAkG;YAClG,IAAI,oBAAoB,GAAG,EAAE,CAAC;YAC9B,8CAA8C;YAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAChC,CAAC;gBACC,iBAAiB,GAAG,IAAI,KAAK,EAAuB,CAAC;gBACrD,IAAI,cAAc,GAAwB,IAAI,qFAAmB,EAAE,CAAC;gBACpE,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACvC,qBAAqB,CAAC,yEAAW,CAAC,qBAAqB,CAAC,GAAG,iBAAiB,CAAC;gBAE7E,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACtD,CAAC;YAED,gEAAgE;YAChE,IAAI,iBAAiB,GAAG,EAAE,CAAC;YAC3B,EAAE,CAAC,CAAC,WAAW,IAAI,EAAE,CAAC;gBACpB,iBAAiB,GAAG,WAAW,GAAG,GAAG,CAAC;YACxC,EAAE,CAAC,CAAC,WAAW,IAAI,EAAE,CAAC;gBACpB,iBAAiB,IAAI,WAAW,GAAG,GAAG,CAAC;YACzC,EAAE,CAAC,CAAC,WAAW,IAAI,EAAE,CAAC;gBACpB,iBAAiB,IAAI,WAAW,GAAG,GAAG,CAAC;YACzC,EAAE,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC;gBACnB,iBAAiB,IAAI,UAAU,GAAG,GAAG,CAAC;YACxC,EAAE,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC;gBACnB,iBAAiB,IAAI,UAAU,GAAG,GAAG,CAAC;YACxC,EAAE,CAAC,CAAC,gBAAgB,IAAI,EAAE,CAAC;gBACzB,iBAAiB,IAAI,gBAAgB,GAAG,GAAG,CAAC;YAC9C,EAAE,CAAC,CAAC,oBAAoB,IAAI,EAAE,CAAC;gBAC7B,iBAAiB,IAAI,oBAAoB,GAAG,GAAG,CAAC;YAElD,4EAA4E;YAC5E,8BAA8B;YAC5B,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC,CAAC;YAEjE,uEAAuE;YAEvE,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAErC,yEAAyE;YACzE,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAEtC,8EAA8E;YAC9E,IAAI,uBAAuB,GAAQ,EAAE,CAAC;YAEtC,6DAA6D;YAC7D,IAAI,UAAU,GAAG,EAAE,CAAC;YACpB,oBAAoB;YACpB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CACvB,CAAC;gBACC,uBAAuB,CAAC,uEAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAC7C,EAAE,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC;oBACnB,UAAU,GAAG,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC;gBACxD,IAAI;oBACF,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC;YAC7C,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAC3B,CAAC;gBACC,uBAAuB,CAAC,uEAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;gBACjD,EAAE,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC;oBACnB,UAAU,GAAG,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBAC5D,IAAI;oBACF,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACjD,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAC/B,CAAC;gBACC,uBAAuB,CAAC,uEAAS,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC;oBACnB,UAAU,GAAG,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC;gBAChE,IAAI;oBACF,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC;YACrD,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,+BAA+B,CAAC,CACzC,CAAC;gBACC,uBAAuB,CAAC,uEAAS,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;gBACpD,EAAE,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC;oBACnB,UAAU,GAAG,kBAAkB,GAAG,IAAI,CAAC,gCAAgC,CAAC;gBAC1E,IAAI;oBACF,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,gCAAgC,CAAC;YAC/D,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CACzB,CAAC;gBACC,uBAAuB,CAAC,uEAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAC/C,EAAE,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC;oBACnB,UAAU,GAAG,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAC1D,IAAI;oBACF,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,CAAC;YACD,qEAAqE;YACrE,uBAAuB;YACrB,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,CAAC;YAEzD,uBAAuB,CAAC,uEAAS,CAAC,KAAK,CAAC,GAAG,qBAAqB,CAAC;YAEjE,qDAAqD;YACrD,UAAU,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;YAC7D,qEAAqE;YACrE,EAAE,CAAC,CAAC,WAAW,IAAI,EAAE,CAAC;gBACpB,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEtC,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,IAAI,SAAS,IAAI,IAAI,CAAC,sBAAsB,IAAI,EAAE,IAAI,IAAI,CAAC,sBAAsB,IAAI,cAAc,CAAC,CACnI,CAAC;gBACC,UAAU,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,sBAAsB,EAAE,iBAAiB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC5F,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,KAAK,yFAA2B,CAAC,SAAS,CAAC;oBACxE,UAAU,CAAC,iBAAiB,GAAG,6FAA+B,CAAC,SAAS,CAAC;gBAC3E,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,KAAK,yFAA2B,CAAC,aAAa,CAAC;oBACjF,UAAU,CAAC,iBAAiB,GAAG,6FAA+B,CAAC,aAAa,CAAC;gBAC/E,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,KAAK,yFAA2B,CAAC,OAAO,CAAC;oBAC3E,UAAU,CAAC,iBAAiB,GAAG,6FAA+B,CAAC,OAAO,CAAC;gBAEzE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,CAAC,CAC9F,CAAC;oBACC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,mDAAmD,CAAC,CAAC;oBACxG,MAAM,CAAC;gBACT,CAAC;gBAED,UAAU,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC;gBAEhD,2EAA2E;gBAC3E,IAAI,eAAe,GAAG,EAAE,CAAC;gBAEzB,oEAAoE;gBACpE,EAAE,CAAC,CAAC,eAAe,IAAI,EAAE,CAAC;oBACxB,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAC5C,CAAC;YACD,0FAA0F;YAC1F,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAE3B,iGAAiG;YACjG,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;YAE7D,iDAAiD;YACjD,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CACpB,CAAC;gBACC,qBAAqB;gBACrB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,eAAe,CAAC,0CAA0C,CAAC,CAAC;gBACjG,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;YACxD,CAAC;QACH,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,gEAAgE;YAChE,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,aAAa,GAAG,GAAG,CAAC;YACzD,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,cAAc,IAAI,IAAI,CAAC;YAE5D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC,CAAC;QACtE,CAAC;IACH,CAAC;IAED,mDAAmD;IACnD,0DAAuB,GAAvB;QAAA,iBAeC;QAbC,IAAI,QAAQ,GAAG,KAAK,CAAC;QAErB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,IAAI,SAAS,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YACjH,MAAM,CAAC,QAAQ,CAAC;QAElB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,cAAI;YAC7B,EAAE,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC;gBACpB,QAAQ,GAAG,GAAG,GAAG,KAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;YAC5D,IAAI;gBACF,QAAQ,GAAG,QAAQ,GAAG,IAAI,GAAG,KAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAED,0EAA0E;IAC1E,0DAAuB,GAAvB,UAAwB,IAAY;QAElC,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAC1B,CAAC;YACC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;QACnD,CAAC;QACD,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAC3B,CAAC;YACC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC;QACD,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAC3B,CAAC;YACC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,4DAA4D;IAC5D,qDAAkB,GAAlB;QAEE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,+BAA+B,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,sBAAsB,IAAI,EAAE,IAAI,IAAI,CAAC,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,IAAI,SAAS,IAAI,IAAI,CAAC,cAAc,IAAI,IAAK,CAAC;YACh+B,MAAM,CAAC,IAAI,CAAC;QAEd,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,6CAA6C;IAC7C,+CAAY,GAAZ,UAAa,KAAK;QAEhB,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,QAAQ,CAAC,CAC5B,CAAC;YACC,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;YAEtB,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;YAC1B,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,gFAAkB,CAAC,GAAG,CAAC,CAAC;YAC9D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,aAAa,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7G,CAAC;IACH,CAAC;IACH,+BAAC;AAAD,CAAC;AA/zCY,wBAAwB;IALpC,gEAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,iJAAiD;QACjD,gJAAgD;KACjD,CAAC;yDA+I4B,4DAAM,oBAAN,4DAAM,sDAA2B,yFAAe,oBAAf,yFAAe,sDAA2B,iFAAc,oBAAd,iFAAc;GA9I1G,wBAAwB,CA+zCpC;AA/zCoC;;;;;;;;;AChBrC;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,gBAAgB,cAAc,mBAAmB,iBAAiB,sBAAsB,2CAA2C,GAAG,iBAAiB,wBAAwB,mBAAmB,qBAAqB,GAAG,sBAAsB,gBAAgB,GAAG,cAAc,gBAAgB,GAAG,eAAe,oBAAoB,GAAG,8BAA8B,eAAe,aAAa,gBAAgB,iBAAiB,8CAA8C,GAAG,qBAAqB,qBAAqB,4BAA4B,kBAAkB,uBAAuB,GAAG,oBAAoB,iBAAiB,qBAAqB,GAAG,mBAAmB,iBAAiB,gBAAgB,qBAAqB,GAAG,mBAAmB,+CAA+C,oBAAoB,qBAAqB,qBAAqB,oCAAoC,uBAAuB,GAAG,oBAAoB,8BAA8B,GAAG,qBAAqB,8BAA8B,GAAG,mBAAmB,8BAA8B,GAAG;;AAEnnC;;;AAGA;AACA,2C;;;;;;;ACXA,gnBAAgnB,aAAa,gBAAgB,4EAA4E,qGAAqG,aAAa,gBAAgB,yMAAyM,oBAAoB,8nBAA8nB,iBAAiB,KAAK,iBAAiB,yEAAyE,gBAAgB,KAAK,gBAAgB,2EAA2E,kBAAkB,KAAK,kBAAkB,yEAAyE,gBAAgB,KAAK,gBAAgB,uEAAuE,cAAc,KAAK,cAAc,yEAAyE,gBAAgB,KAAK,gBAAgB,2EAA2E,kBAAkB,KAAK,kBAAkB,wIAAwI,gBAAgB,uHAAuH,kBAAkB,kDAAkD,aAAa,0MAA0M,KAAK,kFAAkF,aAAa,0FAA0F,kCAAkC,4UAA4U,eAAe,GAAG,iBAAiB,KAAK,eAAe,GAAG,iBAAiB,sFAAsF,kCAAkC,oUAAoU,SAAS,KAAK,SAAS,mGAAmG,aAAa,2JAA2J,WAAW,kZAAkZ,aAAa,iHAAiH,aAAa,kLAAkL,WAAW,iqBAAiqB,aAAa,qUAAqU,aAAa,KAAK,aAAa,+EAA+E,cAAc,4LAA4L,SAAS,KAAK,SAAS,0HAA0H,WAAW,KAAK,WAAW,+EAA+E,cAAc,8LAA8L,WAAW,KAAK,WAAW,0HAA0H,aAAa,KAAK,aAAa,+EAA+E,cAAc,gMAAgM,aAAa,KAAK,aAAa,0HAA0H,eAAe,KAAK,eAAe,+EAA+E,mCAAmC,maAAma,iBAAiB,KAAK,iBAAiB,+EAA+E,mCAAmC,uYAAuY,qBAAqB,KAAK,qBAAqB,+EAA+E,oCAAoC,kWAAkW,gBAAgB,KAAK,gBAAgB,0YAA0Y,eAAe,KAAK,eAAe,+EAA+E,aAAa,kiBAAkiB,aAAa,0bAA0b,oBAAoB,uBAAuB,oBAAoB,iSAAiS,kBAAkB,iDAAiD,aAAa,kQAAkQ,KAAK,wFAAwF,aAAa,4FAA4F,kCAAkC,4UAA4U,eAAe,GAAG,iBAAiB,KAAK,eAAe,GAAG,iBAAiB,wFAAwF,kCAAkC,8UAA8U,SAAS,KAAK,SAAS,yGAAyG,aAAa,+JAA+J,WAAW,4ZAA4Z,aAAa,uHAAuH,aAAa,sLAAsL,WAAW,mrBAAmrB,aAAa,+UAA+U,aAAa,KAAK,aAAa,qFAAqF,cAAc,gMAAgM,SAAS,KAAK,SAAS,gIAAgI,WAAW,KAAK,WAAW,qFAAqF,cAAc,kMAAkM,WAAW,KAAK,WAAW,gIAAgI,aAAa,KAAK,aAAa,qFAAqF,cAAc,oMAAoM,aAAa,KAAK,aAAa,gIAAgI,eAAe,KAAK,eAAe,qFAAqF,mCAAmC,+aAA+a,iBAAiB,KAAK,iBAAiB,qFAAqF,mCAAmC,+aAA+a,qBAAqB,KAAK,qBAAqB,qFAAqF,oCAAoC,4WAA4W,gBAAgB,KAAK,gBAAgB,0ZAA0Z,eAAe,KAAK,eAAe,qFAAqF,aAAa,smBAAsmB,6IAA6I,cAAc,yMAAyM,oBAAoB,mFAAmF,2BAA2B,KAAK,2BAA2B,2FAA2F,cAAc,oRAAoR,iCAAiC,KAAK,iCAAiC,2FAA2F,cAAc,yQAAyQ,4BAA4B,KAAK,4BAA4B,6XAA6X,2BAA2B,KAAK,2BAA2B,2FAA2F,aAAa,gRAAgR,6BAA6B,KAAK,6BAA6B,iWAAiW,iCAAiC,KAAK,iCAAiC,+XAA+X,4BAA4B,KAAK,4BAA4B,2FAA2F,aAAa,yMAAyM,oBAAoB,mFAAmF,+BAA+B,KAAK,+BAA+B,4VAA4V,+BAA+B,KAAK,+BAA+B,k2BAAk2B,oBAAoB,mFAAmF,iCAAiC,KAAK,iCAAiC,mVAAmV,oBAAoB,mFAAmF,2BAA2B,KAAK,2BAA2B,yrBAAyrB,2CAA2C,kD;;;;;;;;;;;;;;;;;;;;;;;ACAnkxB;AACa;AAE/D,sEAAsE;AACK;AAG7B;AACY;AAQ1D,IAAa,yBAAyB;IA6CpC,mCAAoB,MAAc,EAAS,mBAAoC;QAA3D,WAAM,GAAN,MAAM,CAAQ;QAAS,wBAAmB,GAAnB,mBAAmB,CAAiB;QA1C/E,cAAS,GAAG,2BAA2B,CAAC;QA6BxC,kBAAa,GAAG,KAAK,CAAC;QAMtB,oBAAe,GAAG,EAAE,CAAC;QASnB,IAAI,CAAC,EAAE,GAAG,mBAAmB,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,6EAAU,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,oBAAoB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,oBAAoB,GAAG,IAAI,KAAK,EAAa,CAAC;QAEnD,uCAAuC;QACvC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;QACnE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;QACjE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC;QACrE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;QACtE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC;QAEpE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,EAAE,CAAC,CAAC,mBAAmB,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,WAAW,CAAC,CACnF,CAAC;YACC,IAAI,CAAC,OAAO,GAAG,8EAAgB,GAAG,GAAG,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,8EAAgB,GAAG,GAAG,CAAC;YACxC,IAAI,CAAC,WAAW,GAAG,8EAAgB,GAAG,GAAG,CAAC;QAC5C,CAAC;QAED,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,oCAAoC;IACpC,4CAAQ,GAAR;QAAA,iBAmDC;QAjDC,8EAA8E;QAC9E,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,SAAS,CACjD,aAAG;YACD,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC1B,CAAC,CACF,CAAC;QAEF,uEAAuE;QACvE,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,SAAS,CAClD,aAAG;YAED,wDAAwD;YACxD,KAAI,CAAC,wBAAwB,EAAE,CAAC;YAEhC,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YAEzB,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC;gBACrB,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;YAExD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;QAClC,CAAC,CACF,CAAC;QAEF;2DACmD;QACnD,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,CAC7C,aAAG;YAED,wCAAwC;YACxC,KAAI,CAAC,wBAAwB,EAAE,CAAC;YAEhC,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,cAAc,CAAC;YAC3C,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,cAAc,CAAC;YAC3C,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,IAAI,SAAS,CAAC;gBACrC,KAAI,CAAC,mBAAmB,CAAC,qBAAqB,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;YAEjF;;;2FAG+E;QAChF,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,SAAS,CACjD,aAAG;YAED,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,CACF,CAAC;IACN,CAAC;IAED,iDAAiD;IACjD,4DAAwB,GAAxB;QAEE,IACA,CAAC;YACC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,GAAG,EAAE,CAAC;YAC7E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC;YAC7C,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC;YAE9D,yCAAyC;YACzC,IAAI,CAAC,mBAAmB,CAAC,eAAe,GAAG,EAAE,CAAC;YAC9C,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,SAAS,CAAC,CACvC,CAAC;gBACC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EACrD,CAAC;oBACC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAK,CAAC;gBACjD,CAAC;YACH,CAAC;QACH,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,0BAA0B,EAAE,aAAa,GAAG,CAAC,CAAC,CAAC;QACnF,CAAC;IACH,CAAC;IAED,4DAA4D;IAC5D,kDAAc,GAAd,UAAe,KAAK,EAAE,EAAa;QAEjC,IACA,CAAC;YACC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YAExB,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;YAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,SAAS,CAAC;gBAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAChC,IAAI,CACJ,CAAC;gBACC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACnD,CAAC;YACD,qDAAqD;YACrD,IAAI,CAAC,mBAAmB,CAAC,eAAe,GAAG,EAAE,CAAC;YAC9C,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EACrD,CAAC;gBACC,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAC1C,CAAC;oBACC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACnD,CAAC;gBACD,IAAI;oBACF,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAK,CAAC;YACnD,CAAC;YACD,EAAE,EAAC,SAAS,CAAC,SAAS,IAAI,CAAC,CAAC;gBAC1B,IAAI,CAAC,cAAc,GAAI,IAAI,CAAC;YAE9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC;;;0CAG8B;YAE9B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAE1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAErD,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC;QAChE,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;QACzE,CAAC;IACH,CAAC;IAED,uIAAuI;IACvI,mDAAe,GAAf,UAAgB,YAAyB;QAEvC,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,CAAC,MAAM,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CACvF,CAAC;YACC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAC5C,CAAC;gBACC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC;gBACrC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,CAAC;QACH,CAAC;QACD,IAAI,CACJ,CAAC;YACC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,EAAE,EACzD,CAAC;gBACC,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAC5B,CAAC;oBACC,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAC7D,CAAC;wBACC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAK,CAAC;wBACnD,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACvC,MAAM,CAAC;oBACT,CAAC;gBACH,CAAC;gBACD,IAAI;oBACF,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAK,CAAC;YACvD,CAAC;YACD,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QACjC,CAAC;IACH,CAAC;IAED,kGAAkG;IAClG,oEAAgC,GAAhC,UAAiC,OAAO,EAAE,QAAQ;QAEhD,IACA,CAAC;YACC,IAAI,gBAAgB,GAAG,uBAAuB,CAAC;YAE/C,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC;gBACpB,gBAAgB,GAAG,wBAAwB,CAAC;YAE9C,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,mCAAmC,GAAG,gBAAgB,CAAC;QACxF,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,CAAC,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAED,oFAAoF;IACpF,uDAAmB,GAAnB,UAAoB,UAAkB;QAEpC,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,eAAe,CAAC,wCAAwC,CAAC,CAAC;QACnG,EAAE,EAAC,IAAI,CAAC,gBAAgB,IAAI,SAAS,CAAC;YACpC,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClF,IAAI;YACF,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACpF,CAAC;IAED,oDAAoD;IACpD,gDAAY,GAAZ,UAAa,KAAoB;QAAjC,iBAMC;QAJC,UAAU,CAAC;YAET,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACzF,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,kDAAc,GAAd,UAAe,KAAK;QAElB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAED,yCAAyC;IACzC,iDAAa,GAAb,UAAc,KAAK;QAEjB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrD,CAAC;IAED,sCAAsC;IACtC,8CAAU,GAAV,UAAW,KAAK,EAAE,KAAa,EAAG,IAAY;QAA9C,iBA+BC;QA5BC,IAAI,gBAAgB,GAAgB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YAC3E,IAAI,MAAM,CAAC;YACX,IAAI,MAAM,CAAC;YACX,EAAE,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACrB,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;gBAClB,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;YACpB,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC;gBACzB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAC,MAAM,CAAC,CAAC;gBACzE,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAC,MAAM,CAAC,CAAC;gBACzE,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3B,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9D,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAE;QAC5B,gBAAgB,CAAC,OAAO,CAAC,iBAAO;YAE9B,KAAI,CAAC,gBAAgB,GAAE,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iGAAiG;IACjG,iDAAa,GAAb,UAAc,QAAQ;QAAtB,iBAgCC;QA9BC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,SAAS,CAAC,CAC/B,CAAC;YACC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,0CAA0C,CAAC,CAAC;YACnG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,cAAc,GAAG,IAAI,CAAC;YAC/D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC7E,MAAM,CAAC;QACT,CAAC;QACD,IAAI,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC;QAC/D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAC/C,CAAC;YACE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EACrD,CAAC;gBACC,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CACzE,CAAC;oBACC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACnC,KAAK,CAAC;gBACR,CAAC;YACH,CAAC;QACJ,CAAC;QACD,IAAI,WAAW,GAAgB,IAAI,CAAC,gBAAgB,CAAC;QACrD,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAE;QAC5B,WAAW,CAAC,OAAO,CAAC,iBAAO;YAEzB,KAAI,CAAC,gBAAgB,GAAE,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;QAC9E,IAAI,CAAC,mBAAmB,CAAC,eAAe,GAAG,EAAE,CAAC;QAC9C,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,cAAc,GAAG,IAAI,CAAC;QAC/D,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,+BAA+B,CAAC,CAAC;IAE9F,CAAC;IAED,yEAAyE;IACzE,6CAAS,GAAT,UAAU,IAAI;QAEZ,EAAE,EAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,CACtF,CAAC;YACC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,4EAA4E,CAAC,CAAC;YACrI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,4EAA4E,CAAC,CAAC;YAC7H,MAAM,CAAC;QACT,CAAC;QACD,IAAI,QAAQ,GAAU,EAAE,CAAC;QACzB,IAAI,aAAqB,CAAC;QAC1B,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC;YAC9B,aAAa,GAAG,qFAAuB,CAAC,MAAM,CAAC;QACjD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC;YAClC,aAAa,GAAG,qFAAuB,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC;YAClC,aAAa,GAAG,qFAAuB,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC;YACpC,aAAa,GAAG,qFAAuB,CAAC,QAAQ,CAAC;QACnD,IAAI;YACA,aAAa,GAAG,qFAAuB,CAAC,YAAY,CAAC;QACzD,EAAE,EAAC,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,CACpB,CAAC;YACC,EAAE,EAAC,QAAQ,IAAI,EAAE,CAAC;gBAChB,QAAQ,GAAG,QAAQ,GAAG,GAAG,GAAE,aAAa,GAAC,GAAG,GAAC,IAAI,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,QAAQ,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3J,IAAI;gBACF,QAAQ,GAAG,aAAa,GAAC,GAAG,GAAC,IAAI,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,QAAQ,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7I,CAAC;QACD,IAAI,CACJ,CAAC;YACC,EAAE,EAAC,QAAQ,IAAI,EAAE,CAAC;gBAChB,QAAQ,GAAG,QAAQ,GAAG,GAAG,GAAE,aAAa,GAAC,GAAG,GAAC,IAAI,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,QAAQ,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC5I,IAAI;gBACF,QAAQ,GAAG,aAAa,GAAC,GAAG,GAAC,IAAI,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,QAAQ,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9H,CAAC;QACD,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,4DAA4D;IAC5D,gDAAY,GAAZ,UAAa,KAAK;QAEhB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,aAAa,CAAC;IAC9C,CAAC;IAEH,gCAAC;AAAD,CAAC;AArZY,yBAAyB;IANrC,gEAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,mJAAkD;QAClD,kJAAiD;KAClD,CAAC;yDA+C4B,4DAAM,oBAAN,4DAAM,sDAA8B,yFAAe,oBAAf,yFAAe;GA7CpE,yBAAyB,CAqZrC;AArZqC;;;;;;;;;AChBtC;AACA;;;AAGA;AACA,sCAAuC,qBAAqB,KAAK,gBAAgB,kBAAkB,KAAK,yBAAyB,0BAA0B,KAAK;;AAEhK;;;AAGA;AACA,2C;;;;;;;ACXA,odAAod,cAAc,y2D;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhb;AACyB;AAC7B;AACQ;AACY;AACR;AAQ1D,IAAa,uBAAuB;IAWlC,iCAAoB,MAAc,EAAU,cAA+B,EAAU,mBAAwC;QAAzG,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAiB;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QAT7H,cAAS,GAAG,yBAAyB,CAAC;QACtC,mDAAmD;QACnD,sBAAiB,GAAG,KAAK,CAAC;QAC1B,kBAAa,GAAG,KAAK,CAAC;QACtB,sBAAiB,GAAG,IAAI,CAAC;QAMvB,IAAI,CAAC,EAAE,GAAG,cAAc,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;IACtD,CAAC;IAEF,0CAAQ,GAAR;QAAA,iBAQC;QANC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,CAC7C,aAAG;YAED,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iDAAe,GAAf;QAEE,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;QACjD,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACjE,CAAC;IAEF;;;;QAII;IAEH,kDAAgB,GAAhB;QAEE,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC7D,CAAC;IAED,iDAAe,GAAf;QAEE,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;QACjD,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACjE,CAAC;IAED,qDAAmB,GAAnB;QAAA,iBAuCC;QArCC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,IAAI,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,KAAK,CAAC;YACtK,IAAI,CAAC,cAAc,CAAC,eAAe,GAAG,SAAS,CAAC;QAElD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,CAAC,CACpD,CAAC;YACC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,6CAA6C,CAAC,CAAC;YACjG,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,oDAAoD;YAC7D,MAAM,EAAE;gBAEN,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,qBAAqB,EAAE,wCAAwC,EAAE,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;gBAEvI,IAAI,UAAU,GAAmB,IAAI,gFAAc,EAAE,CAAC;gBAEtD,qCAAqC;gBACrC,UAAU,CAAC,SAAS,GAAG,iFAAmB,CAAC;gBAC3C,UAAU,CAAC,OAAO,GAAG,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,WAAW,GAAE,EAAE,CAAC;gBACzE,UAAU,CAAC,mBAAmB,GAAG,EAAE,CAAC;gBAEpC,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,OAAO,CAAC,mBAAS;oBAEnD,EAAE,CAAC,CAAC,UAAU,CAAC,mBAAmB,IAAI,EAAE,CAAC;wBACvC,UAAU,CAAC,mBAAmB,GAAG,SAAS,CAAC,UAAU,GAAG,EAAE,CAAC;oBAC7D,IAAI;wBACF,UAAU,CAAC,mBAAmB,GAAG,UAAU,CAAC,mBAAmB,GAAG,GAAG,GAAG,SAAS,CAAC,UAAU,CAAC;gBACjG,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,eAAe,CAAC,sCAAsC,CAAC,CAAC;gBAE5F,0CAA0C;gBAC1C,KAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;YACvD,CAAC;SACF,CAAC,CAAC;IAEL,CAAC;IAED,yEAAyE;IACzE,2CAAS,GAAT;QAEE,IACA,CAAC;YACC,IAAI,QAAgB,CAAC;YACrB,IAAI,aAAqB,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;YAClE,IAAI,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe;YAEzD,EAAE,CAAC,CAAC,eAAe,KAAK,SAAS,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,CAAC,CAClE,CAAC;gBACC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,4DAA4D,CAAC,CAAC;gBAChH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,oBAAoB,EAAE,4DAA4D,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBACpJ,MAAM,CAAC;YACT,CAAC;YACD,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,eAAe,CAAC,MAAM,EAAG,CAAC,EAAE,EAC5C,CAAC;gBACC,EAAE,EAAC,eAAe,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC;oBAC5I,QAAQ,CAAC;gBACX,EAAE,EAAC,wFAA0B,CAAC,MAAM,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBACrE,aAAa,GAAG,qFAAuB,CAAC,MAAM,CAAC;gBACjD,IAAI,CAAC,EAAE,EAAC,wFAA0B,CAAC,KAAK,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBACzE,aAAa,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBAChD,IAAI,CAAC,EAAE,EAAC,wFAA0B,CAAC,KAAK,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBACzE,aAAa,GAAG,qFAAuB,CAAC,KAAK,CAAC;gBAChD,IAAI,CAAC,EAAE,EAAC,wFAA0B,CAAC,QAAQ,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBAC5E,aAAa,GAAG,qFAAuB,CAAC,QAAQ,CAAC;gBACnD,IAAI;oBACA,aAAa,GAAG,qFAAuB,CAAC,YAAY,CAAC;gBACzD,EAAE,EAAC,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,CAAE,CAAC;oBACrB,EAAE,EAAC,QAAQ,IAAI,SAAS,CAAC;wBACvB,QAAQ,GAAG,QAAQ,GAAG,GAAG,GAAE,aAAa,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC/O,IAAI;wBACF,QAAQ,GAAG,aAAa,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACjO,CAAC;gBACD,IAAI,EAAC;oBACH,EAAE,EAAC,QAAQ,IAAI,SAAS,CAAC;wBACvB,QAAQ,GAAG,QAAQ,GAAG,GAAG,GAAE,aAAa,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBAClN,IAAI;wBACF,QAAQ,GAAG,aAAa,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAC,GAAG,GAAC,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;gBACpM,CAAC;YACH,CAAC;YACD,EAAE,EAAC,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,CAAC,CAC7C,CAAC;gBACC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,4EAA4E,CAAC,CAAC;gBAChI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,4EAA4E,CAAC,CAAC;gBAC7H,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;QACzD,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;IAEH,8BAAC;AAAD,CAAC;AAnJY,uBAAuB;IANnC,gEAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,+IAAgD;QAChD,8IAA+C;QAC/C,SAAS,EAAE,CAAC,oEAAmB,CAAC;KACjC,CAAC;yDAY4B,4DAAM,oBAAN,4DAAM,sDAA0B,yFAAe,oBAAf,yFAAe,sDAA+B,oEAAmB,oBAAnB,oEAAmB;GAXlH,uBAAuB,CAmJnC;AAnJmC;;;;;;;;;ACbpC;AACA;;;AAGA;AACA,kFAAmF,sBAAsB,KAAK,uBAAuB,wBAAwB,yBAAyB,KAAK,+BAA+B,wBAAwB,4BAA4B;;AAE9Q;;;AAGA;AACA,2C;;;;;;;ACXA,8MAA8M,aAAa,8DAA8D,YAAY,qBAAqB,YAAY,gJAAgJ,aAAa,uCAAuC,YAAY,qBAAqB,YAAY,iH;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9gB;AACA;AACkC;AAC7B;AACkB;AACU;AACU;AAQpF,IAAa,kBAAkB;IAI7B,4BAAmB,eAA+B,EAAU,mBAAuC,EAAU,mBAAuC,EAAU,MAAc,EAAU,MAAc;QAAjL,oBAAe,GAAf,eAAe,CAAgB;QAAU,wBAAmB,GAAnB,mBAAmB,CAAoB;QAAU,wBAAmB,GAAnB,mBAAmB,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFnM,cAAS,GAAG,oBAAoB,CAAC;QAIhC,IAAI,CAAC,SAAS,GAAE,0FAAmB,CAAC;IACtC,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAyCC;QAvCC,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,SAAS,CAAC;QACpF,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QACvG,EAAE,EAAC,IAAI,CAAC,eAAe,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,IAAI,EAAE,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,IAAI,SAAS,CAAC;YAClI,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC3E,EAAE,EAAC,IAAI,CAAC,eAAe,CAAC,YAAY,IAAI,UAAU,IAAI,IAAI,CAAC,eAAe,CAAC,YAAY,IAAI,UAAU,CAAC;YACpG,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,cAAc,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAEhF,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC;QAC/E,EAAE,EAAC,IAAI,CAAC,eAAe,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAE5F,IAAI,CAAC,eAAe,CAAC,oBAAoB,GAAG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC;QAC1F,EAAE,EAAC,IAAI,CAAC,eAAe,CAAC,oBAAoB,IAAI,EAAE,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,oBAAoB,GAAG,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAEtF,IAAI,CAAC,eAAe,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC;QAChF,IAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;QAChF,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC;QAC5F,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,SAAS,CAAC;YACpG,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC;QAC1E,IAAI;YACF,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAE1E,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;QAC5E,EAAE,EAAC,IAAI,CAAC,eAAe,CAAC,aAAa,KAAK,SAAS,CAAC,CACpD,CAAC;YACC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,CAC7C,aAAG;gBAED,KAAI,CAAC,eAAe,CAAC,aAAa,GAAG,GAAG,CAAC;gBACzC,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YACzD,CAAC,EACD,eAAK,IAAI,YAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,UAAU,EAAE,oCAAoC,CAAC,EAAnF,CAAmF,CAC7F,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,GAAG,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY;YAC3O,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAC,oBAAoB,GAAG,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;IAC7L,CAAC;IAEA,6KAA6K;IAC9K,wCAAW,GAAX,UAAY,GAAG;QAEb,IACA,CAAC;YACC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAO;gBAE5B,EAAE,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CACnC,CAAC;oBACC,EAAE,EAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACxB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;oBACzB,IAAI;wBACF,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;gBAC5B,CAAC;gBACD,IAAI;oBACF,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;YAC5B,CAAC,CAAC;QACJ,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;QACxD,CAAC;IACH,CAAC;IAED,4CAAe,GAAf,UAAgB,IAAI;QAElB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,iBAAiB,EAAE,SAAS,GAAG,IAAI,CAAC,CAAC;QAC5E,EAAE,EAAC,IAAI,CAAC,eAAe,CAAC,aAAa,KAAK,SAAS,CAAC;YAClD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;QACvD,EAAE,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CACtB,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;YACxD,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QACjD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAC5B,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;YACxD,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAClD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,aAAa,CAAC,CAChC,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;YACxD,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;QACtD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAC5B,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;YACxD,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAClD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CACzB,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;YACxD,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAC/C,CAAC;IACH,CAAC;IACH,yBAAC;AAAD,CAAC;AAhHY,kBAAkB;IAN9B,gEAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,qHAA0C;QAC1C,oHAAyC;KAC1C,CAAC;yDAMoC,iFAAc,oBAAd,iFAAc,sDAA+B,+FAAkB,oBAAlB,+FAAkB,sDAA+B,2FAAkB,oBAAlB,2FAAkB,sDAAkB,uDAAM,oBAAN,uDAAM,sDAAkB,4DAAM,oBAAN,4DAAM;GAJzL,kBAAkB,CAgH9B;AAhH8B;;;;;;;;;ACd/B;AACA;;;AAGA;AACA,4CAA6C,oDAAoD,wBAAwB,wCAAwC,2BAA2B,wBAAwB,mCAAmC,OAAO,iCAAiC,uBAAuB,OAAO,0BAA0B,kCAAkC,OAAO,oBAAoB,mCAAmC,KAAK,yBAAyB,mCAAmC,KAAK,6BAA6B,iCAAiC,2BAA2B,uBAAuB,KAAK,kCAAkC,kCAAkC,KAAK,oCAAoC,qCAAqC,qCAAqC,qCAAqC,KAAK,0BAA0B,mCAAmC,KAAK,2BAA2B,wBAAwB,KAAK,iBAAiB,oCAAoC,wBAAwB,oBAAoB,qCAAqC,KAAK,wBAAwB,uBAAuB,OAAO,mBAAmB,oBAAoB,OAAO,kBAAkB,mBAAmB,OAAO,2BAA2B,qBAAqB,OAAO,sBAAsB,yBAAyB,OAAO;;AAEr1C;;;AAGA;AACA,2C;;;;;;;ACXA,2SAA2S,8BAA8B,sjCAAsjC,6HAA6H,4BAA4B,cAAc,IAAI,KAAK,0KAA0K,eAAe,8CAA8C,8BAA8B,uLAAuL,+BAA+B,KAAK,6BAA6B,g7BAAg7B,eAAe,sDAAsD,2CAA2C,gKAAgK,iCAAiC,KAAK,+BAA+B,uVAAuV,cAAc,uCAAuC,2CAA2C,wHAAwH,qCAAqC,KAAK,mCAAmC,yMAAyM,cAAc,qCAAqC,yCAAyC,sHAAsH,mCAAmC,KAAK,iCAAiC,8UAA8U,cAAc,qCAAqC,qCAAqC,mHAAmH,gCAAgC,KAAK,gCAAgC,8MAA8M,cAAc,uCAAuC,2CAA2C,wHAAwH,qCAAqC,KAAK,mCAAmC,yMAAyM,cAAc,qCAAqC,yCAAyC,sHAAsH,mCAAmC,KAAK,iCAAiC,yWAAyW,cAAc,uCAAuC,2CAA2C,wHAAwH,qCAAqC,KAAK,mCAAmC,yMAAyM,cAAc,qCAAqC,yCAAyC,sHAAsH,mCAAmC,KAAK,iCAAiC,oVAAoV,cAAc,sCAAsC,uCAAuC,oHAAoH,iCAAiC,KAAK,+BAA+B,mMAAmM,eAAe,qCAAqC,6CAA6C,uHAAuH,oCAAoC,KAAK,kCAAkC,0MAA0M,cAAc,uCAAuC,2CAA2C,wHAAwH,qCAAqC,KAAK,mCAAmC,yMAAyM,cAAc,qCAAqC,yCAAyC,sHAAsH,mCAAmC,KAAK,iCAAiC,iVAAiV,eAAe,uCAAuC,yCAAyC,qHAAqH,kCAAkC,KAAK,gCAAgC,2LAA2L,cAAc,qCAAqC,qCAAqC,mHAAmH,gCAAgC,KAAK,8BAA8B,0MAA0M,cAAc,uCAAuC,2CAA2C,wHAAwH,qCAAqC,KAAK,mCAAmC,yMAAyM,cAAc,qCAAqC,yCAAyC,sHAAsH,mCAAmC,KAAK,iCAAiC,mVAAmV,cAAc,sCAAsC,uCAAuC,oHAAoH,iCAAiC,KAAK,+BAA+B,mMAAmM,eAAe,qCAAqC,6CAA6C,uHAAuH,oCAAoC,KAAK,kCAAkC,iMAAiM,eAAe,uCAAuC,yCAAyC,qHAAqH,kCAAkC,KAAK,gCAAgC,0MAA0M,cAAc,uCAAuC,2CAA2C,wHAAwH,qCAAqC,KAAK,mCAAmC,yMAAyM,cAAc,qCAAqC,yCAAyC,sHAAsH,mCAAmC,KAAK,iCAAiC,sgBAAsgB,cAAc,uCAAuC,2CAA2C,4HAA4H,qCAAqC,KAAK,mCAAmC,wbAAwb,cAAc,wDAAwD,yCAAyC,0HAA0H,mCAAmC,KAAK,iCAAiC,u0BAAu0B,sBAAsB,aAAa,yCAAyC,s+CAAs+C,iCAAiC,kQAAkQ,QAAQ,0FAA0F,aAAa,4EAA4E,cAAc,oXAAoX,iBAAiB,cAAc,2BAA2B,iBAAiB,iGAAiG,cAAc,2WAA2W,aAAa,KAAK,aAAa,iGAAiG,cAAc,mXAAmX,4VAA4V,KAAK,4VAA4V,kGAAkG,cAAc,wXAAwX,kBAAkB,KAAK,kBAAkB,kGAAkG,cAAc,keAAke,iBAAiB,KAAK,iBAAiB,yGAAyG,aAAa,0lCAA0lC,2MAA2M,+JAA+J,4JAA4J,0LAA0L,+CAA+C,uD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzkuB;AACJ;AACsC;AACpB;AAC6B;AAEtC;AACvB;AACiC;AAQjE,IAAa,yBAAyB;IA2HpC,mCAAoB,MAAc,EAAS,uBAAgD,EAAS,cAA8B,EAAS,mBAAuC;QAA9J,WAAM,GAAN,MAAM,CAAQ;QAAS,4BAAuB,GAAvB,uBAAuB,CAAyB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAS,wBAAmB,GAAnB,mBAAmB,CAAoB;QAxHlL,uCAAuC;QACvC,cAAS,GAAG,2BAA2B,CAAC;QAQxC,YAAO,GAAc,EAAE,CAAC;QAIxB,8DAA8D;QAC9D,iBAAY,GAAW,EAAE,CAAC;QAE1B,uDAAuD;QACvD,2BAAsB,GAAG,IAAI,KAAK,EAAE,CAAC;QAErC,gEAAgE;QAChE,qBAAgB,GAAa,EAAE,CAAC;QAEhC,oBAAe,GAAW,GAAG,CAAC;QAE9B,MAAM;QACN,wBAAmB,GAAG,IAAI,KAAK,EAAE,CAAC;QAElC,8BAAyB,GAAa,EAAE,CAAC;QAczC,4DAA4D;QAC5D,gCAA2B,GAAQ,EAAE,CAAC;QAEtC,iBAAY,GAAa,EAAE,CAAC;QAQ5B,yDAAyD;QACzD,oCAA+B,GAAQ,EAAE,CAAC;QAE1C,uDAAuD;QACvD,kCAA6B,GAAQ,EAAE,CAAC;QAKxC,sDAAsD;QACtD,+BAA0B,GAAQ,EAAE,CAAC;QAKrC,sDAAsD;QACtD,gCAA2B,GAAQ,EAAE,CAAC;QAKtC,0DAA0D;QAC1D,mCAA8B,GAAQ,EAAE,CAAC;QAKzC,uDAAuD;QACvD,iCAA4B,GAAQ,EAAE,CAAC;QAYvC,yDAAyD;QACzD,aAAQ,GAAS,IAAI,CAAC;QACtB,oBAAe,GAAO,IAAI,IAAI,EAAE,CAAC;QACjC,WAAM,GAAS,IAAI,CAAC;QAEpB,uDAAuD;QACvD,gBAAW,GAAW,EAAE,CAAC;QAKzB,8CAA8C;QAC9C,yBAAoB,GAAY,KAAK,CAAC;QAEtC,kDAAkD;QAClD,uBAAkB,GAAY,IAAI,CAAC;QACnC,wBAAmB,GAAY,IAAI,CAAC;QAEpC,4DAA4D;QAC5D,YAAO,GAAW,CAAC,CAAC;QAMpB,+CAA+C;QAC/C,oBAAe,GAA6B,EAAE,CAAC;QAI7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC;IACrD,CAAC;IAED,4CAAQ,GAAR;QAAA,iBA8BC;QA5BC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAQ,IAAI,YAAI,CAAC,GAAG,GAAG,QAAQ,EAAnB,CAAmB,CAAC,CAAC;QAC3F,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAE,+FAAiC,CAAC,WAAW,CAAC;QACjE,IAAI,CAAC,uBAAuB,GAAG,4FAA8B,CAAC;QAC9D,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACzE,IAAI,CAAC,wBAAwB,GAAG,6FAA+B,CAAC;QAChE,IAAI,CAAC,yBAAyB,GAAG,+FAAiC,CAAC;QACnE,IAAI,CAAC,2BAA2B,GAAG,iGAAmC,CAAC;QACvE,IAAI,CAAC,sBAAsB,GAAG,2FAA6B,CAAC;QAC5D,IAAI,CAAC,uBAAuB,GAAG,4FAA8B,CAAC;QAC9D,IAAI,CAAC,0BAA0B,GAAG,gGAAkC,CAAC;QACrE,EAAE,EAAC,IAAI,CAAC,2BAA2B,CAAC,aAAa,KAAK,sFAAwB,CAAC,MAAM,CAAC;YACnF,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAChC,IAAI,CAAC,mBAAmB,GAAG,IAAI,sFAAmB,EAAE,CAAC;QACrD,IAAI,CAAC,uBAAuB,GAAG,IAAI,0FAAuB,EAAE,CAAC;QAC7D,IAAI,CAAC,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QAC/D,IAAI,CAAC,mBAAmB,CAAC,OAAO,GAAG,+FAAiC,CAAC,mCAAmC,CAAC;QACzG,IAAI,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,uFAAyB,CAAC,MAAM,EAAE,uFAAyB,CAAC,wBAAwB,CAAC,CAAC,SAAS,CACnK,aAAG;YAED,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,EACD;YAEE,aAAa,CAAC,WAAW,EAAE,CAAC;QAC9B,CAAC,CACF;QACD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACvD,CAAC;IAED,6KAA6K;IAC7K,iDAAa,GAAb,UAAc,GAAG;QAEf,IACA,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACxF,EAAE,EAAC,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,KAAK,SAAS,IAAG,GAAG,CAAC,GAAG,KAAK,sFAAwB,CAAC,aAAa,IAAI,GAAG,CAAC,GAAG,KAAK,sFAAwB,CAAC,SAAS,CAAC;gBAC9I,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YACjC,IAAI;gBACF,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QACpC,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;QACxD,CAAC;IACH,CAAC;IAED,+CAA+C;IAC/C,uDAAmB,GAAnB;QAEE,IAAI,CAAC,oBAAoB,GAAI,KAAK,CAAC;QACnC,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,sDAAsD;IACtD,yDAAqB,GAArB,UAAsB,mBAAwC;QAA9D,iBA0BC;QAxBC,wDAAwD;QACxD,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,4FAA8B,CAAC,MAAM,EAAE,CAAC,EAAE,EAC7D,CAAC;YACC,EAAE,EAAC,CAAC,IAAE,CAAC,CAAC;gBACN,IAAI,CAAC,YAAY,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,4FAA8B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACnE,IAAI;gBACF,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,4FAA8B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAEjE,EAAE,EAAC,CAAC,IAAE,CAAC,CAAC;gBACN,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QAC9B,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4FAA8B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAChE,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,0CAA0C,CAAC,CAAC;QAChF,IAAI,CAAC,uBAAuB,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,SAAS,CACnF,aAAG;YAED,KAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,EACD,eAAK;YAEH,KAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC;YAC1C,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YAClE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,oBAAoB,EAAE,oCAAoC,CAAC,CAAC;QAChG,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mDAAmD;IACnD,8DAA0B,GAA1B,UAA2B,GAAG;QAA9B,iBAcC;QAZC,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,EAAE,EAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAChC,EAAE,EAAC,GAAG,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC,CAC/B,CAAC;YACC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,EAAE,OAAO,EAAE,gBAAgB,EAAC,CAAC,CAAC;YAChH,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,iBAAO;gBAC7B,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;YACvF,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IAED,6DAA6D;IAC7D,oDAAgB,GAAhB,UAAiB,aAAqB,EAAE,qBAA6B;QAArE,iBA4BC;QA1BC,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;QAC5F,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAE3D,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC1E,EAAE,CAAC,CAAC,qBAAqB,KAAK,gBAAgB,CAAC,CAC/C,CAAC;YACC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACpF,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACxD,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QACpF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAClD,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACxD,IAAI,kBAAkB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK;YAE3C,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,EAAE,EAAC,KAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,KAAK,gBAAgB,CAAC;gBAC5D,WAAW,CAAC,IAAI,CAAC,qFAAuB,GAAG,OAAO,CAAC,CAAC;YACtD,IAAI;gBACF,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5B,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,CAAC;IACxD,CAAC;IAED,+EAA+E;IAC/E,sDAAkB,GAAlB,UAAmB,iBAAiB,EAAE,aAAa;QAAnD,iBA6BC;QA3BC,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,KAAK,gBAAgB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAC9K,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,2DAA2D,CAAC,CAAC;YACxH,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QACpF,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC9E,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,EAAE,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;QAChG,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,EAAE,CAAC,CAAC,iBAAiB,KAAK,EAAE,CAAC,CAC7B,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,8BAA8B,CAAC,CAAC;YAC3F,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,qFAAuB,GAAG,iBAAiB,CAAC,CAAC;QAC9E,IAAI,kBAAkB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK;YAE3C,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,EAAE,EAAC,KAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,KAAK,gBAAgB,CAAC;gBAC5D,WAAW,CAAC,IAAI,CAAC,qFAAuB,GAAG,OAAO,CAAC,CAAC;YACtD,IAAI;gBACF,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5B,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,CAAC;IACxD,CAAC;IAED,gEAA4B,GAA5B,UAA6B,uBAAuB;QAApD,iBAmBC;QAjBC,IAAI,mBAAmB,GAAG,IAAI,sFAAmB,EAAE,CAAC;QACpD,mBAAmB,CAAC,eAAe,GAAG,uBAAuB,CAAC;QAC9D,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QAEjC,2EAA2E;QAC3E,IAAI,CAAC,uBAAuB,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAC/E,aAAG;YAED,KAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC;QACvC,CAAC,EACD,eAAK;YAEH,KAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC;YAC1C,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YAClE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,oBAAoB,EAAE,oCAAoC,CAAC,CAAC;QAChG,CAAC,CACF,CAAC;IACJ,CAAC;IACD,6BAA6B;IAC7B,wDAAoB,GAApB,UAAqB,KAAK;QAExB,IAAI,CAAC,mBAAmB,EAAE;QAC1B,EAAE,EAAC,KAAK,CAAC,KAAK,CAAC,aAAa,KAAK,sFAAwB,CAAC,wBAAwB,CAAC;YACjF,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,EAAE,EAAC,KAAK,CAAC,KAAK,CAAC,aAAa,KAAK,sFAAwB,CAAC,kBAAkB,CAAC;YAChF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,EAAE,EAAC,KAAK,CAAC,KAAK,CAAC,aAAa,KAAK,sFAAwB,CAAC,uBAAuB,CAAC;YACrF,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,EAAE,EAAC,KAAK,CAAC,KAAK,CAAC,aAAa,KAAK,sFAAwB,CAAC,sBAAsB,CAAC;YACpF,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,EAAE,EAAC,KAAK,CAAC,KAAK,CAAC,aAAa,KAAK,sFAAwB,CAAC,iBAAiB,CAAC;YAC/E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,EAAE,EAAC,KAAK,CAAC,KAAK,CAAC,aAAa,KAAK,sFAAwB,CAAC,qBAAqB,CAAC;YACnF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,EAAE,EAAC,KAAK,CAAC,KAAK,CAAC,aAAa,KAAK,sFAAwB,CAAC,MAAM,CAAC;YACpE,IAAI,CAAC,qBAAqB,EAAE;QAC9B,IAAI,CAAC,4BAA4B,EAAE,CAAC;IACtC,CAAC;IAED,0EAA0E;IAC1E,gEAA4B,GAA5B;QAEE,wCAAwC;QACxC,IAAI,CAAC,+BAA+B,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,6BAA6B,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,0BAA0B,GAAG,EAAE,CAAE;QACtC,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;QACzC,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;IACzC,CAAC;IAED,qEAAqE;IACrE,sDAAkB,GAAlB,UAAmB,kBAA2B;QAA9C,iBAmRC;QAjRC,EAAE,EAAC,kBAAkB,CAAC;YACpB,MAAM,CAAC;QACT,IAAI,mBAAmB,GAAG,IAAI,sFAAmB,EAAE,CAAC;QACpD,IAAI,uBAAuB,GAAG,IAAI,0FAAuB,EAAE,CAAC;QAE5D,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,KAAK,CAAC,CAAC,CAChD,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,4DAA4D,CAAC,CAAC;YACzH,MAAM,CAAC;QACT,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,gBAAgB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAC7M,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,2DAA2D,CAAC,CAAC;YACxH,MAAM,CAAC;QACT,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,aAAa,KAAK,SAAS,IAAI,IAAI,CAAC,2BAA2B,CAAC,aAAa,KAAK,EAAE,CAAC,CAC1H,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,0CAA0C,CAAC,CAAC;YACvG,MAAM,CAAC;QACT,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CACnB,CAAC;YACC,EAAE,EAAC,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,oBAAqB,CAAC,CAC5D,CAAC;gBACC,EAAE,EAAC,IAAI,CAAC,2BAA2B,CAAC,MAAM,IAAI,SAAS,CAAC,CACxD,CAAC;oBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,qBAAqB,CAAC,CAAC;oBAClF,MAAM,CAAC;gBACT,CAAC;gBACD,EAAE,EAAC,IAAI,CAAC,8BAA8B,CAAC,SAAS,IAAI,SAAS,CAAC,CAC9D,CAAC;oBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,yBAAyB,CAAC,CAAC;oBACtF,MAAM,CAAC;gBACT,CAAC;YACH,CAAC;YACD,EAAE,EAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,oBAAoB,CAAC,CACtD,CAAC;gBACC,EAAE,EAAC,IAAI,CAAC,4BAA4B,CAAC,UAAU,IAAI,SAAS,CAAC,CAC7D,CAAC;oBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,sBAAsB,CAAC,CAAC;oBACnF,MAAM,CAAC;gBACT,CAAC;YACH,CAAC;YACD,EAAE,EAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAC;gBAClD,EAAE,EAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,IAAI,SAAS,CAAC,CACtD,CAAC;oBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,oBAAoB,CAAC,CAAC;oBACjF,MAAM,CAAC;gBACT,CAAC;YACH,CAAC;YACD,EAAE,EAAC,IAAI,CAAC,+BAA+B,CAAC,MAAM,IAAI,SAAS,CAAC,CAC5D,CAAC;gBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,2BAA2B,CAAC,CAAC;gBACxF,MAAM,CAAC;YACT,CAAC;YACD,EAAE,EAAC,IAAI,CAAC,6BAA6B,CAAC,MAAM,IAAI,SAAS,CAAC,CAC1D,CAAC;gBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,yBAAyB,CAAC,CAAC;gBACtF,MAAM,CAAC;YACT,CAAC;YACD,EAAE,EAAC,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC,CAC3F,CAAC;gBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,6CAA6C,CAAC,CAAC;gBAC1G,MAAM,CAAC;YACT,CAAC;QACH,CAAC;QACD,IAAI,CACJ,CAAC;YACC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAC1D,CAAC;gBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,+DAA+D,CAAC,CAAC;gBAC5H,MAAM,CAAC;YACT,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,CACtD,CAAC;gBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,2DAA2D,CAAC,CAAC;gBACxH,MAAM,CAAC;YACT,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,+BAA+B,CAAC,MAAM,IAAI,SAAS,CAAC,CAC7D,CAAC;gBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,2BAA2B,CAAC,CAAC;gBACxF,MAAM,CAAC;YACT,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,6BAA6B,CAAC,MAAM,IAAI,SAAS,CAAC,CAC3D,CAAC;gBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,yBAAyB,CAAC,CAAC;gBACtF,MAAM,CAAC;YACT,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,+BAA+B,CAAC,MAAM,IAAI,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC,CAAC,CAC3M,CAAC;gBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,+DAA+D,CAAC,CAAC;gBAC5H,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,EAAE,EAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,6BAA6B,CAAC,MAAM,KAAK,CAAC,CAAC,CAC/G,CAAC;gBACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,+DAA+D,CAAC,CAAC;gBAC5H,MAAM,CAAC;YACT,CAAC;QACH,CAAC;QACD,IAAI,YAAoB,CAAC;QACzB,IAAI,sBAAsB,GAAG,KAAK,CAAC;QACnC,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,UAAC,MAAM,EAAC,KAAK;YAEhD,EAAE,EAAC,YAAY,IAAI,SAAS,CAAC,CAC7B,CAAC;gBACC,EAAE,EAAC,MAAM,KAAK,KAAK,CAAC;oBAClB,YAAY,GAAG,GAAG,CAAC;gBACrB,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,gBAAgB,CAAC,CACrC,CAAC;oBACC,EAAE,EAAC,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,SAAS,CAAC,CAC9C,CAAC;wBACC,sBAAsB,GAAG,IAAI,CAAC;wBAC9B,MAAM,CAAC;oBACT,CAAC;oBACD,YAAY,GAAG,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;oBAC5C,YAAY,GAAG,IAAI,CAAC;gBACtB,CAAC;gBACD,IAAI;oBACF,YAAY,GAAG,MAAM,CAAC;YAC1B,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,EAAE,EAAC,MAAM,KAAK,KAAK,CAAC;oBAClB,YAAY,GAAG,YAAY,GAAG,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;gBAC3D,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,gBAAgB,CAAC,CACrC,CAAC;oBACC,EAAE,EAAC,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,SAAS,CAAC,CAC9C,CAAC;wBACC,sBAAsB,GAAG,IAAI,CAAC;wBAC9B,MAAM,CAAC;oBACT,CAAC;oBACD,YAAY,GAAG,YAAY,GAAG,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;oBAClF,YAAY,GAAG,IAAI,CAAC;gBACtB,CAAC;gBACD,IAAI;oBACF,YAAY,GAAI,YAAY,GAAG,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC;YACjE,CAAC;QACL,CAAC,CAAC,CAAC;QACH,uBAAuB,CAAC,QAAQ,GAAG,YAAY,CAAC;QAEhD;;WAEG;QACH,EAAE,EAAC,sBAAsB,CAAC,CAC1B,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,2DAA2D,CAAC,CAAC;YACxH,MAAM,CAAC;QACT,CAAC;QACD,EAAE,CAAC,CAAC,uBAAuB,CAAC,QAAQ,KAAK,SAAS,IAAI,uBAAuB,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,uBAAuB,CAAC,QAAQ,KAAK,EAAE,CAAC,CAC/I,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,4DAA4D,CAAC,CAAC;YACzH,MAAM,CAAC;QACT,CAAC;QACD,mBAAmB,CAAC,OAAO,GAAG,+FAAiC,CAAC,8BAA8B,CAAC;QAC/F,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QAC1D,uBAAuB,CAAC,YAAY,GAAG,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC;QACnF,uBAAuB,CAAC,YAAY,GAAG,+FAAiC,CAAC,wBAAwB,CAAC;QAClG,uBAAuB,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACvD,EAAE,EAAC,IAAI,CAAC,sBAAsB,CAAC,CAC/B,CAAC;YACC,uBAAuB,CAAC,QAAQ,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC;YAC/E,uBAAuB,CAAC,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC;QAC7E,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,iBAAiB,CAAC,CAC/B,CAAC;YACC,uBAAuB,CAAC,GAAG,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;YACpE,uBAAuB,CAAC,QAAQ,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC;YAC/E,uBAAuB,CAAC,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC;QAC7E,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,qBAAqB,CAAC,CACnC,CAAC;YACC,uBAAuB,CAAC,QAAQ,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC;YAC/E,uBAAuB,CAAC,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC;QAC7E,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,qBAAqB,CAAC,CACnC,CAAC;YACC,uBAAuB,CAAC,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC;YACvE,uBAAuB,CAAC,GAAG,GAAG,IAAI,CAAC,8BAA8B,CAAC,SAAS,CAAC;YAC5E,uBAAuB,CAAC,QAAQ,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC;YAC/E,uBAAuB,CAAC,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC;QAC7E,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAC9B,CAAC;YACC,uBAAuB,CAAC,KAAK,GAAG,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC;YAC1E,uBAAuB,CAAC,GAAG,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;YACpE,uBAAuB,CAAC,QAAQ,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC;YAC/E,uBAAuB,CAAC,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC;QAC7E,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,oBAAoB,CAAC,CAClC,CAAC;YACC,uBAAuB,CAAC,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC;YACvE,uBAAuB,CAAC,GAAG,GAAG,IAAI,CAAC,8BAA8B,CAAC,SAAS,CAAC;YAC5E,uBAAuB,CAAC,KAAK,GAAG,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC;YAC1E,uBAAuB,CAAC,QAAQ,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC;YAC/E,uBAAuB,CAAC,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC;QAC7E,CAAC;QACD,IAAI,CACJ,CAAC;YACC,IAAI,cAAc,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,YAAY,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzC,IAAI,QAAQ,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC;YAC3D,IAAI,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC;YACvD,EAAE,EAAC,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC,IAAI,MAAM,KAAK,CAAC,CAAC,CACvE,CAAC;gBACC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,gFAAkB,CAAC,GAAG,CAAC,CAAC;gBACtE,MAAM,GAAG,EAAE,CAAC;YACd,CAAC;YACD,EAAE,EAAC,QAAQ,GAAG,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,CAChC,CAAC;gBACC,uBAAuB,CAAC,SAAS,GAAI,oCAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,GAAE,QAAQ,GAAC,QAAQ,CAAC;gBAC3G,uBAAuB,CAAC,OAAO,GAAI,oCAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAE,GAAG,GAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAC,QAAQ,CAAC;YAC1G,CAAC;YACD,IAAI,CAAC,EAAE,EAAC,MAAM,GAAG,EAAE,IAAI,QAAQ,GAAG,CAAC,CAAC,CACpC,CAAC;gBACC,uBAAuB,CAAC,SAAS,GAAI,oCAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,GAAG,GAAE,QAAQ,GAAC,QAAQ,CAAC;gBAC1G,uBAAuB,CAAC,OAAO,GAAI,oCAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAE,IAAI,GAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAC,QAAQ,CAAC;YAC3G,CAAC;YACD,IAAI,CAAC,EAAE,EAAC,QAAQ,GAAG,EAAE,IAAI,MAAM,IAAI,EAAE,CAAC,CACtC,CAAC;gBACC,uBAAuB,CAAC,SAAS,GAAI,oCAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,GAAE,QAAQ,GAAC,QAAQ,CAAC;gBAC3G,uBAAuB,CAAC,OAAO,GAAI,oCAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAE,IAAI,GAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAC,QAAQ,CAAC;YAC3G,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,uBAAuB,CAAC,SAAS,GAAI,oCAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,GAAG,GAAE,QAAQ,GAAC,QAAQ,CAAC;gBAC1G,uBAAuB,CAAC,OAAO,GAAI,oCAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAE,GAAG,GAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAC,QAAQ,CAAC;YAE1G,CAAC;QACH,CAAC;QACD,IAAI,gBAAgB,GAAG,EAAE,CAAC;QAC1B,gBAAgB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAC/C,mBAAmB,CAAC,WAAW,GAAG,gBAAgB,CAAC;QACnD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,0GAA0G;YACnH,MAAM,EAAE;gBAEN,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,uDAAuD,CAAC,CAAC;gBAC7F,KAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAClF,aAAG;oBAED,KAAI,CAAC,cAAc,CAAC,aAAa,GAAG,GAAG,CAAC;oBACxC,KAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC1C,EAAE,EAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC;wBACnB,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC1E,IAAI,CACJ,CAAC;wBACC,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;wBACpE,MAAM,CAAC;oBACT,CAAC;oBACD,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;oBAC1B,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,iBAAO;wBAE7B,EAAE,EAAC,OAAO,CAAC,UAAU,KAAK,EAAE,IAAI,KAAI,CAAC,oBAAoB,CAAC;4BACxD,KAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAChG,CAAC,CAAC,CAAC;oBACH,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,mBAAmB,CAAC;oBACpD,KAAI,CAAC,uBAAuB,CAAC,qBAAqB,GAAG,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC;gBACnG,CAAC,EACD,eAAK;oBACH,KAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC1C,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;oBAClE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,oBAAoB,EAAE,oCAAoC,CAAC,CAAC;gBAChG,CAAC,CACF,CAAC;gBACF,KAAI,CAAC,iCAAiC,EAAE,CAAC;YAC3C,CAAC;YACD,MAAM,EAAE;gBACN,MAAM,CAAC;YACT,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,qEAAiC,GAAjC;QAEE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,EAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QACnE,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,EAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;QAC/E,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,4BAA4B,EAAE,CAAC;IACtC,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA8DG;IAEH,8CAAU,GAAV;QAEE,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAED,qFAAqF;IACrF,sDAAkB,GAAlB,UAAmB,KAAK;QAAxB,iBA4BC;QA1BC,IAAI,mBAAmB,GAAG,IAAI,sFAAmB,EAAE,CAAC;QACpD,IAAI,uBAAuB,GAAG,IAAI,0FAAuB,EAAE,CAAC;QAE5D,EAAE,EAAC,IAAI,CAAC,oBAAoB,KAAK,IAAI,CAAC,CACtC,CAAC;YACC,mBAAmB,CAAC,OAAO,GAAG,+FAAiC,CAAC,mBAAmB,CAAC;QACtF,CAAC;QACD,IAAI,CACJ,CAAC;YACC,mBAAmB,CAAC,OAAO,GAAG,+FAAiC,CAAC,sBAAsB,CAAC;QACzF,CAAC;QACD,IAAI,gBAAgB,GAAG,EAAE,CAAC;QAC1B,gBAAgB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAC/C,mBAAmB,CAAC,WAAW,GAAG,gBAAgB,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,8DAA8D,CAAC,CAAC;QACpG,IAAI,CAAC,uBAAuB,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,SAAS,CACjF,aAAG;YAED,KAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,EACD,eAAK;YAEH,KAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC;YAC1C,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YAClE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,oBAAoB,EAAE,oCAAoC,CAAC,CAAC;QAChG,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mGAAmG;IACnG,+DAA2B,GAA3B,UAA4B,kBAA2B;QAAvD,iBA4CC;QA1CC,EAAE,EAAC,kBAAkB,CAAC;YACpB,MAAM,CAAC;QACT,IAAI,mBAAmB,GAAG,IAAI,sFAAmB,EAAE,CAAC;QACpD,mBAAmB,CAAC,OAAO,GAAG,+FAAiC,CAAC,iCAAiC,CAAC;QAElG,IAAI,gBAAgB,GAAG,IAAI,KAAK,EAA2B,CAAC;QAC5D,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,iBAAO;YAClC,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,IAAI,+FAAiC,CAAC,wBAAwB,CAAC,CACvF,CAAC;gBACC,OAAO,CAAC,YAAY,GAAG,+FAAiC,CAAC,6CAA6C,CAAC;gBACvG,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,mBAAmB,CAAC,WAAW,GAAG,gBAAgB,CAAC;QACnD,EAAE,CAAC,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC,CAChD,CAAC;YACC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,8CAA8C,CAAC,CAAC;YAC3G,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,2KAA2K;YACpL,MAAM,EAAE;gBAEN,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,8DAA8D,CAAC,CAAC;gBACpG,KAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC,SAAS,CACpF,aAAG;oBAED,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;gBAChC,CAAC,EACD,eAAK;oBAEH,KAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC1C,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;oBAClE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,oBAAoB,EAAE,oCAAoC,CAAC,CAAC;gBAChG,CAAC,CAAC,CAAC;YACL,CAAC;YACD,MAAM,EAAE;gBACN,MAAM,CAAC;YACT,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,sGAAsG;IACtG,mEAA+B,GAA/B,UAAgC,kBAA2B;QAA3D,iBA8CC;QA5CC,EAAE,EAAC,kBAAkB,CAAC;YACpB,MAAM,CAAC;QACT,IAAI,mBAAmB,GAAG,IAAI,sFAAmB,EAAE,CAAC;QACpD,mBAAmB,CAAC,OAAO,GAAG,+FAAiC,CAAC,iCAAiC,CAAC;QAElG,IAAI,gBAAgB,GAAG,IAAI,KAAK,EAA2B,CAAC;QAC5D,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,iBAAO;YAElC,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,IAAI,+FAAiC,CAAC,wBAAwB,CAAC,CACvF,CAAC;gBACC,OAAO,CAAC,YAAY,GAAG,+FAAiC,CAAC,iDAAiD,CAAC;gBAC3G,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,mBAAmB,CAAC,WAAW,GAAG,gBAAgB,CAAC;QAEnD,EAAE,CAAC,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC,CAChD,CAAC;YACC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,8CAA8C,CAAC,CAAC;YAC3G,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,4KAA4K;YACrL,MAAM,EAAE;gBAEN,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,8DAA8D,CAAC,CAAC;gBACpG,KAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC,SAAS,CACpF,aAAG;oBAED,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;gBAChC,CAAC,EACD,eAAK;oBAEH,KAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC1C,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;oBAClE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,oBAAoB,EAAE,oCAAoC,CAAC,CAAC;gBAChG,CAAC,CAAC,CAAC;YACL,CAAC;YACD,MAAM,EAAE;gBACN,MAAM,CAAC;YACT,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,iGAAiG;IACjG,uDAAmB,GAAnB,UAAoB,IAA6B;QAAjD,iBAoCC;QAlCC,IAAI,mBAAmB,GAAG,IAAI,sFAAmB,EAAE,CAAC;QACpD,mBAAmB,CAAC,OAAO,GAAG,+FAAiC,CAAC,iCAAiC,CAAC;QAElG,IAAI,gBAAgB,GAAG,IAAI,KAAK,EAA2B,CAAC;QAC5D,IAAI,CAAC,YAAY,GAAG,+FAAiC,CAAC,6CAA6C,CAAC;QACpG,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE5B,mBAAmB,CAAC,WAAW,GAAG,gBAAgB,CAAC;QACnD,EAAE,CAAC,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC,CAChD,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAC,OAAO,EAAC,yCAAyC,CAAC,CAAC;YACpG,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,2KAA2K;YACpL,MAAM,EAAE;gBAEN,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,8DAA8D,CAAC,CAAC;gBACpG,KAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC,SAAS,CACpF,aAAG;oBAED,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;gBAChC,CAAC,EACD,eAAK;oBAEH,KAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC1C,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;oBAClE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,oBAAoB,EAAE,oCAAoC,CAAC,CAAC;gBAChG,CAAC,CAAC,CAAC;YACL,CAAC;YACD,MAAM,EAAE;gBACN,MAAM,CAAC;YACT,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,oGAAoG;IACpG,2DAAuB,GAAvB,UAAwB,IAA6B;QAArD,iBAoCC;QAlCC,IAAI,mBAAmB,GAAG,IAAI,sFAAmB,EAAE,CAAC;QACpD,mBAAmB,CAAC,OAAO,GAAG,+FAAiC,CAAC,iCAAiC,CAAC;QAElG,IAAI,gBAAgB,GAAG,IAAI,KAAK,EAA2B,CAAC;QAC5D,IAAI,CAAC,YAAY,GAAG,+FAAiC,CAAC,iDAAiD,CAAC;QACxG,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE5B,mBAAmB,CAAC,WAAW,GAAG,gBAAgB,CAAC;QACnD,EAAE,CAAC,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC,CAChD,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,yCAAyC,CAAC,CAAC;YACtG,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,4KAA4K;YACrL,MAAM,EAAE;gBAEN,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,8DAA8D,CAAC,CAAC;gBACpG,KAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC,SAAS,CACpF,aAAG;oBAED,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;gBAChC,CAAC,EACD,eAAK;oBAEH,KAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC1C,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;oBAClE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,oBAAoB,EAAE,oCAAoC,CAAC,CAAC;gBAChG,CAAC,CAAC,CAAC;YACL,CAAC;YACD,MAAM,EAAE;gBACN,MAAM,CAAC;YACT,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,iEAAiE;IACjE,4CAAQ,GAAR,UAAS,OAAO,EAAE,IAAI;QAEpB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,+FAAiC,CAAC,wBAAwB,CAAC,CACpF,CAAC;YACC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,GAAG,0EAA0E,CAAC;QAC9H,CAAC;QAED,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,GAAG,gBAAgB,CAAC;IACzD,CAAC;IAED,yEAAyE;IACzE,6CAAS,GAAT,UAAU,KAAK;QAEb,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC;YACpB,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACrD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QAEvD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACpB,IAAI;YACF,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAEnB,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,CAAC,iBAAO;YAClD,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,iBAAiB,CAAC;IAC3D,CAAC;IAED,6DAA6D;IAC7D,yDAAqB,GAArB;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACpB,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACtB,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACtB,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QAEtB,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACrB,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACvB,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACvB,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAC5B,uCAAuC;QACvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,aAAa,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7G,CAAC;IAED,kDAAkD;IAClD,0CAAM,GAAN,UAAO,KAAK,EAAC,KAAK,EAAE,uBAAuB;QAA3C,iBAqCC;QAnCC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CACjB,CAAC;YACC,KAAK,GAAG,CAAC,CAAC;QACZ,CAAC;QACD,IAAI,CACJ,CAAC;YACC,KAAK,GAAG,CAAC,CAAC,CAAC;QACb,CAAC;QACD,IAAI,MAAM,CAAC;QACX,IAAI,MAAM,CAAC;QACX,uBAAuB,GAAG,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YAEnE,EAAE,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAC3B,CAAC;gBACC,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC;gBACpB,MAAM,GAAG,CAAC,CAAC,MAAM;gBACjB,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC;gBACzB,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC;gBACzB,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC;YAC3B,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CACjB,CAAC;gBACC,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9D,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,EAAE,CAAC;QAC1C,uBAAuB,CAAC,OAAO,CAAC,iBAAO;YAErC,KAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+EAA+E;IAC/E,2DAAuB,GAAvB,UAAwB,GAAG;QAEzB,IAAI,CAAC,cAAc,CAAC,aAAa,GAAG,GAAG,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC;QAC1C,EAAE,EAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC;YACnB,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1E,IAAI,CACJ,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YACpE,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;QAC/B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACpD,IAAI,CAAC,uBAAuB,CAAC,qBAAqB,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC;QACjG,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IAED,+FAA+F;IAC/F,uDAAmB,GAAnB,UAAoB,GAAG;QAAvB,iBAyCC;QAvCC,IAAI,CAAC,cAAc,CAAC,aAAa,GAAG,GAAG,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC;QAC1C,EAAE,EAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC;YACnB,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1E,IAAI,CACJ,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YACpE,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,iBAAO;YAE7B,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,UAAU,EAAE,KAAK;gBAE7D,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,CAAC,CAChC,CAAC;oBACC,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;oBACtD,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,KAAK,KAAK,CAAC,CACxC,CAAC;YACC,aAAa,CAAC,IAAI,EAAE,CAAC;YACrB,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,EAChE,CAAC;gBACC,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC;oBACpC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YACzE,CAAC;QACH,CAAC;QACD,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,CAAC,iBAAO;YAClD,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,iBAAiB,CAAC;QACzD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACpD,IAAI,CAAC,uBAAuB,CAAC,qBAAqB,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC;IACnG,CAAC;IAED,6DAA6D;IAC7D,gDAAY,GAAZ,UAAa,KAAK;QAEhB,IAAI,CAAC,mBAAmB,GAAG,IAAI,sFAAmB,EAAE,CAAC;QACrD,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAE,KAAK,CAAC,aAAa,CAAC;IAC5D,CAAC;IAED,iGAAiG;IACjG,2DAAuB,GAAvB,UAAwB,UAAkB;QAExC,EAAE,EAAC,IAAI,CAAC,mBAAmB,IAAI,SAAS,CAAC,CACzC,CAAC;YACC,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAClF,CAAC;QACD,IAAI;YACF,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACpF,CAAC;IACH,gCAAC;AAAD,CAAC;AApkCY,yBAAyB;IAPrC,gEAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,mIAAiD;QACjD,kIAAgD;QAChD,SAAS,EAAC,CAAC,oEAAmB,CAAC;KAChC,CAAC;yDA6H0B,4DAAM,oBAAN,4DAAM,sDAAkC,qGAAuB,oBAAvB,qGAAuB,sDAAyB,iFAAc,oBAAd,iFAAc,sDAA6B,oEAAmB,oBAAnB,oEAAmB;GA3HvK,yBAAyB,CAokCrC;AApkCqC;;;;;;;;;;;;;;;;;;;;;AChBsB;AAM5D,IAAa,wBAAwB;IACnC,kCAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAC5D,+BAAC;AAAD,CAAC;AAFY,wBAAwB;IAJpC,gEAAS,CAAC;QACT,QAAQ,EAAE,8BAA8B;KACzC,CAAC;yDAGqC,+DAAgB,oBAAhB,+DAAgB;GAD1C,wBAAwB,CAEpC;AAFoC;;;;;;;;;;;;;;;;;;;;;ACNuB;AAM5D,IAAa,wBAAwB;IACnC,kCAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAC5D,+BAAC;AAAD,CAAC;AAFY,wBAAwB;IAJpC,gEAAS,CAAC;QACT,QAAQ,EAAE,8BAA8B;KACzC,CAAC;yDAGqC,+DAAgB,oBAAhB,+DAAgB;GAD1C,wBAAwB,CAEpC;AAFoC;;;;;;;;;;;;;;;;;;;;;;ACN8B;AAEK;AAwDxE,IAAa,uBAAuB;IAKlC,iCAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAFrD,qBAAgB,GAAY,KAAK,CAAC;QAClC,yBAAoB,GAAW,EAAE,CAAC;IAGlC,CAAC;IAED,gDAAc,GAAd,UAAe,GAAW;QAExB,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB;QAC9C,EAAE,EAAC,IAAI,CAAC,gBAAgB,CAAC;YACvB,IAAI,CAAC,oBAAoB,GAAG,gBAAgB,CAAC;QAC/C,IAAI;YACF,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;IACnC,CAAC;IACD,iDAAe,GAAf,UAAgB,WAAW;QAA3B,iBAQC;QANC,IAAI,YAAY,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACrE,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,OAAO,EAAC,KAAK;YAC3D,KAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,8BAAC;AAAD,CAAC;AAzBU;IAAR,4DAAK,EAAE;;qDAAW;AAFR,uBAAuB;IAvDnC,gEAAS,CAAC;QACT,QAAQ,EAAE,6kGAmDT;KACF,CAAC;yDAOqC,sFAAgB,oBAAhB,sFAAgB;GAL1C,uBAAuB,CA2BnC;AA3BmC;;;;;;;;;;;;;;;;;;;;;AC1DwB;AAK5D,IAAa,sBAAsB;IACjC,gCAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAC5D,6BAAC;AAAD,CAAC;AAFY,sBAAsB;IAHlC,gEAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;KACjC,CAAC;yDAEqC,+DAAgB,oBAAhB,+DAAgB;GAD1C,sBAAsB,CAElC;AAFkC;;;;;;;;;;;;;;;;;;;;;;;ACLgC;AAEK;AACT;AA6D/D,IAAa,uBAAuB;IAMlC,iCAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAHtD,qBAAgB,GAAY,KAAK,CAAC;QAClC,yBAAoB,GAAW,EAAE,CAAC;IAEwB,CAAC;IAE3D,gDAAc,GAAd,UAAe,GAAW;QAExB,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB;QAC9C,EAAE,EAAC,IAAI,CAAC,gBAAgB,CAAC;YACvB,IAAI,CAAC,oBAAoB,GAAG,gBAAgB,CAAC;QAC/C,IAAI;YACF,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;IACnC,CAAC;IACD,iDAAe,GAAf,UAAgB,WAAmB,EAAE,YAAoB;QAAzD,iBAoCC;QAlCC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACrB,KAAK,wFAAqB,CAAC,cAAc;gBACzC,CAAC;oBACC,IAAI,QAAQ,GAAG,WAAW,CAAC;oBAC3B,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBAC7D,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBAC5D,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,OAAO,EAAC,KAAK;wBAC5D,KAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBACjE,CAAC,CAAC,CAAC;oBACH,KAAK,CAAC;gBACR,CAAC;YACD,KAAK,wFAAqB,CAAC,cAAc;gBACzC,CAAC;oBACC,IAAI,OAAO,GAAG,WAAW,CAAC;oBAC1B,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAC5D,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;oBAC3D,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,OAAO,EAAC,KAAK;wBAC5D,KAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBACjE,CAAC,CAAC,CAAC;oBACH,KAAK,CAAC;gBACR,CAAC;YACD,KAAK,wFAAqB,CAAC,iBAAiB;gBAC5C,CAAC;oBACC,IAAI,UAAU,GAAG,WAAW,CAAC;oBAC7B,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBAClE,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;oBACjE,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,OAAO,CAAC,UAAC,OAAO,EAAC,KAAK;wBAC/D,KAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBACpE,CAAC,CAAC,CAAC;oBACH,KAAK,CAAC;gBACR,CAAC;YACD;gBACE,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IAEH,8BAAC;AAAD,CAAC;AApDU;IAAR,4DAAK,EAAE;;qDAAW;AAFR,uBAAuB;IA5DnC,gEAAS,CAAC;QACT,QAAQ,EAAE,8jHAwDT;KACF,CAAC;yDAQsC,sFAAgB,oBAAhB,sFAAgB;GAN3C,uBAAuB,CAsDnC;AAtDmC;;;;;;;;;AChEpC;AACA;;;AAGA;AACA,qCAAsC,uBAAuB,KAAK,mBAAmB,0BAA0B,KAAK,YAAY,kBAAkB,+BAA+B,KAAK,iCAAiC,mBAAmB,KAAK;;AAE/O;;;AAGA;AACA,2C;;;;;;;ACXA,+CAA+C,uCAAuC,mcAAmc,8KAA8K,iJAAiJ,gBAAgB,iKAAiK,sWAAsW,uUAAuU,eAAe,+EAA+E,2VAA2V,2CAA2C,wGAAwG,cAAc,6FAA6F,qEAAqE,gBAAgB,gJAAgJ,2HAA2H,6FAA6F,gBAAgB,gIAAgI,2BAA2B,gEAAgE,2HAA2H,+CAA+C,8IAA8I,cAAc,qGAAqG,yEAAyE,gBAAgB,oJAAoJ,+HAA+H,0GAA0G,gBAAgB,0HAA0H,2BAA2B,gEAAgE,wHAAwH,+CAA+C,8IAA8I,cAAc,qGAAqG,yEAAyE,gBAAgB,iJAAiJ,+HAA+H,0GAA0G,gBAAgB,2HAA2H,2BAA2B,gEAAgE,wHAAwH,+CAA+C,8IAA8I,cAAc,qGAAqG,yEAAyE,gBAAgB,iJAAiJ,+HAA+H,0GAA0G,gBAAgB,mjBAAmjB,yPAAyP,gPAAgP,ydAAyd,yPAAyP,gPAAgP,kcAAkc,oIAAoI,gBAAgB,yQAAyQ,oIAAoI,gBAAgB,mxBAAmxB,0uBAA0uB,mKAAmK,gBAAgB,8GAA8G,uMAAuM,eAAe,mFAAmF,kSAAkS,gFAAgF,oBAAoB,kbAAkb,gBAAgB,wEAAwE,qIAAqI,uW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlhY;AAC7D;AACM;AACJ;AACD;AACA;AACA;AAGuB;AACrB;AAG1B;AACiB;AAM/D,IAAa,uBAAuB;IAiClC,iCAAoB,MAAc,EAAU,wBAAkD,EAAU,WAA6B;QAAjH,WAAM,GAAN,MAAM,CAAQ;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;QAAU,gBAAW,GAAX,WAAW,CAAkB;QAhCrI,uCAAuC;QACvC,cAAS,GAAG,yBAAyB,CAAC;QAetC,0BAAqB,GAAG,IAAI,2DAAY,EAAW,CAAC;QAUnD,yEAAyE;QACzE,sBAAiB,GAAQ,EAAE,CAAC;QAE5B,EAAE;QACF,sBAAiB,GAAa,KAAK,CAAC;IAIpC,CAAC;IACF,0CAAQ,GAAR;QAEE,IAAI,CAAC,YAAY,GAAG,sFAAkB,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,iFAAa,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,kFAAc,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,oFAAgB,CAAC;QACnC,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;IAED,4DAA0B,GAA1B;QAEE,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B;;;;;;;;;;;;;;;;;WAiBG;IACL,CAAC;IAED,qDAAmB,GAAnB;QAEE;;;;;;aAMK;QACL,IAAI,iBAAiB,GAAG,IAAI,6EAAiB,EAAE,CAAC;QAChD,iBAAiB,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC;QAChE,iBAAiB,CAAC,YAAY,GAAG,yFAAqB,CAAC,YAAY,CAAC;QACpE,iBAAiB,CAAC,IAAI,GAAG,YAAY,GAAC,CAAC,iBAAiB,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,2FAAuB,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;QACxG,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;QAC/D,IAAI,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QACnE,IAAI,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACtG,IAAI,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;QAC3D,IAAI,CAAC,WAAW,CAAC,yBAAyB,GAAG,gBAAgB,CAAC;QAC9D,IAAI,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QACtD,YAAY,CAAC,QAAS,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;IACnE,CAAC;IACD,qDAAmB,GAAnB;QAEE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,KAAK,EAAE,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IACD,+CAAa,GAAb;QAEE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,KAAK,EAAE,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IACD,qDAAmB,GAAnB;QAEE,IAAI,iBAAiB,GAAG,IAAI,6EAAiB,EAAE,CAAC;QAChD,iBAAiB,CAAC,EAAE,GAAE,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAM,CAAC;QACnE,iBAAiB,CAAC,YAAY,GAAG,yFAAqB,CAAC,iBAAiB,CAAC;QACzE,iBAAiB,CAAC,IAAI,GAAG,YAAY,GAAC,CAAC,iBAAiB,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,2FAAuB,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAC5G,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC;QACnE,IAAI,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;QAC5E,IAAI,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAC1G,IAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;QACjE,IAAI,CAAC,WAAW,CAAC,wBAAwB,GAAG,gBAAgB,CAAC;QAC7D,IAAI,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QACtD,YAAY,CAAC,QAAS,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC;IACtE,CAAC;IACD,kDAAgB,GAAhB;QAEE,IAAI,iBAAiB,GAAG,IAAI,6EAAiB,EAAE,CAAC;QAChD,iBAAiB,CAAC,EAAE,GAAE,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC;QAChE,iBAAiB,CAAC,YAAY,GAAG,yFAAqB,CAAC,cAAc,CAAC;QACtE,iBAAiB,CAAC,IAAI,GAAG,YAAY,GAAC,CAAC,iBAAiB,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,2FAAuB,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;QACzG,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;QAChE,IAAI,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QACrE,IAAI,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACvG,IAAI,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,qBAAqB,GAAG,gBAAgB,CAAC;QAC1D,IAAI,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QACtD,YAAY,CAAC,QAAS,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;IACpE,CAAC;IACD,kDAAgB,GAAhB;QAEE,IAAI,iBAAiB,GAAG,IAAI,6EAAiB,EAAE,CAAC;QAChD,iBAAiB,CAAC,EAAE,GAAE,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC;QAChE,iBAAiB,CAAC,YAAY,GAAG,yFAAqB,CAAC,cAAc,CAAC;QACtE,iBAAiB,CAAC,IAAI,GAAG,YAAY,GAAC,CAAC,iBAAiB,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,2FAAuB,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;QACzG,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;QAChE,IAAI,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QACrE,IAAI,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACvG,IAAI,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,qBAAqB,GAAG,gBAAgB,CAAC;QAC1D,IAAI,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QACtD,YAAY,CAAC,QAAS,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;IACpE,CAAC;IACD,mDAAiB,GAAjB;QAEE,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACxE,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,iBAAO;YAC/C,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,UAAU,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnC;;;;;;;;;;;;;UAaE;IACJ,CAAC;IAED,oDAAkB,GAAlB;QAEE,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC5D,CAAC;IAsCH,8BAAC;AAAD,CAAC;AAnNC;IADC,4DAAK,EAAE;;oEACqB;AAG7B;IADC,4DAAK,EAAE;;4DACS;AAGjB;IADC,6DAAM,EAAE;;sEAC2C;AAEjB;IAAlC,gEAAS,CAAC,0FAAsB,CAAC;kDAAgB,0FAAsB,oBAAtB,0FAAsB;8DAAC;AAChC;IAAxC,gEAAS,CAAC,gGAA4B,CAAC;kDAAsB,gGAA4B,oBAA5B,gGAA4B;oEAAC;AACtD;IAApC,gEAAS,CAAC,6FAAwB,CAAC;kDAA2B,6FAAwB,oBAAxB,6FAAwB;yEAAC;AACnD;IAApC,gEAAS,CAAC,6FAAwB,CAAC;kDAA2B,6FAAwB,oBAAxB,6FAAwB;yEAAC;AAtB7E,uBAAuB;IALnC,gEAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,0IAA+C;QAC/C,yIAA8C;KAC/C,CAAC;yDAkC4B,4DAAM,oBAAN,4DAAM,sDAAoC,uEAAwB,oBAAxB,uEAAwB,sDAAuB,sFAAgB,oBAAhB,sFAAgB;GAjC1H,uBAAuB,CA8NnC;AA9NmC;;;;;;;;;;;;;;;;;;;;;ACpBwB;AAM5D,IAAa,4BAA4B;IACvC,sCAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAC5D,mCAAC;AAAD,CAAC;AAFY,4BAA4B;IAJxC,gEAAS,CAAC;QACT,QAAQ,EAAE,4BAA4B;KACvC,CAAC;yDAGqC,+DAAgB,oBAAhB,+DAAgB;GAD1C,4BAA4B,CAExC;AAFwC;;;;;;;;;ACNzC;AACA;;;AAGA;AACA,6CAA8C,qBAAqB,KAAK,iBAAiB,kBAAkB,KAAK,gBAAgB,iBAAiB,KAAK,uBAAuB,mBAAmB,KAAK,kBAAkB,uBAAuB,KAAK,wBAAwB,gCAAgC,KAAK,yBAAyB,gCAAgC,KAAK,uBAAuB,gCAAgC,KAAK,wBAAwB,gCAAgC,KAAK,sBAAsB,mBAAmB,4CAA4C,KAAK;;AAEjkB;;;AAGA;AACA,2C;;;;;;;ACXA,sEAAsE,sBAAsB,aAAa,+BAA+B,2MAA2M,kBAAkB,mCAAmC,0BAA0B,iKAAiK,gBAAgB,2KAA2K,qMAAqM,6JAA6J,0JAA0J,ovCAAovC,iP;;;;;;;;;;;;;;;;;;;;;;;ACA35E;AACxB;AACa;AAC1B;AAM9C,IAAa,wBAAwB;IASnC,kCAAoB,WAA6B,EAAS,MAAc;QAApD,gBAAW,GAAX,WAAW,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAQ;QARxE,cAAS,GAAG,0BAA0B,CAAC;QACvC,wBAAmB,GAAY,KAAK,CAAC;QAErC,gBAAW,GAAW,CAAC,CAAC;QAMtB,IAAI,CAAC,WAAW,GAAI,IAAI,uEAAW,EAAE,CAAC;IACvC,CAAC;IAEF,2CAAQ,GAAR;QAEE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE,CAAC;IACvC,CAAC;IAID,sDAAmB,GAAnB;QAEE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QACpC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEpB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,oDAAiB,GAAjB;QAEE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;IAElC,CAAC;IAED,qDAAkB,GAAlB,UAAmB,mBAA4B;QAE7C,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;IACjD,CAAC;IACH,+BAAC;AAAD,CAAC;AAlC4B;IAA1B,gEAAS,CAAC,cAAc,CAAC;;uDAAO;AALtB,wBAAwB;IALpC,gEAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,4IAAgD;QAChD,2IAA+C;KAChD,CAAC;yDAUiC,sFAAgB,oBAAhB,sFAAgB,sDAAiB,4DAAM,oBAAN,4DAAM;GAT7D,wBAAwB,CAuCpC;AAvCoC;;;;;;;;;ACTrC;AACA;;;AAGA;AACA,gDAAiD,oDAAoD,wBAAwB,wCAAwC,2BAA2B,wBAAwB,kCAAkC,OAAO,+BAA+B,uBAAuB,OAAO,yBAAyB,kCAAkC,OAAO,sBAAsB,uBAAuB,OAAO,mBAAmB,oBAAoB,OAAO,uBAAuB,mCAAmC,OAAO,2BAA2B,mCAAmC,qBAAqB,mCAAmC,OAAO,oBAAoB,kCAAkC,OAAO,yDAAyD,iCAAiC,QAAQ,6BAA6B,mCAAmC,QAAQ,kCAAkC,oCAAoC,OAAO;;AAEp9B;;;AAGA;AACA,2C;;;;;;;ACXA,4SAA4S,8BAA8B,gtJAAgtJ,gBAAgB,4HAA4H,aAAa,KAAK,aAAa,+gLAA+gL,gBAAgB,aAAa,kBAAkB,qGAAqG,YAAY,KAAK,YAAY,2bAA2b,gBAAgB,aAAa,sBAAsB,yGAAyG,YAAY,KAAK,YAAY,wcAAwc,gBAAgB,+DAA+D,6BAA6B,uGAAuG,cAAc,KAAK,cAAc,soB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnoY;AACJ;AAC8B;AACZ;AACkC;AACJ;AAEvC;AAQvD,IAAa,qBAAqB;IAgGhC,+BAAoB,MAAc,EAAU,mBAAwC,EAAS,cAA8B,EAAU,kBAAsC;QAAvJ,WAAM,GAAN,MAAM,CAAQ;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;QA9F3K,uCAAuC;QACvC,cAAS,GAAG,uBAAuB,CAAC;QAKpC,UAAK,GAAG,SAAS,CAAC;QA+BlB,uEAAuE;QACvE,gCAA2B,GAAW,EAAE,CAAC;QAEzC,6DAA6D;QAC7D,wBAAmB,GAAW,CAAC,CAAC;QAoChC,0BAAqB,GAAW,CAAC,CAAC;QAClC,wBAAmB,GAAW,GAAG,CAAC;QAkBhC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC;QAC5C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC;IAC/C,CAAC;IAED,wCAAQ,GAAR;QAAA,iBA2CC;QAzCC,IAAI,CAAC,gBAAgB,GAAG,IAAI,4EAAa,EAAE,CAAC;QAC5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,6EAAc,EAAE,CAAC;QAC/C,IAAI,CAAC,cAAc,GAAG,IAAI,gFAAiB,EAAE,CAAC;QAC9C,IAAI,CAAC,QAAQ,GAAG,kFAAoB,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,kFAAoB,CAAC;QACzC,IAAI,CAAC,iBAAiB,GAAE,sFAAwB,CAAC;QACjD,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,IAAI,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,uFAAyB,CAAC,MAAM,EAAE,uFAAyB,CAAC,cAAc,CAAC,CAAC,SAAS,CACrJ,aAAG;YAED,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,EACD;YAEE,aAAa,CAAC,WAAW,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QACL,IAAI,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,SAAS,CACxF,aAAG;YAED,KAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,EACD;YAEE,cAAc,CAAC,WAAW,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,0CAA0C,CAAC,CAAC;QAChF,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,CAAC;QAE/C,IAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,SAAS,CAC1E,aAAG;YAED,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,EACD;YAEC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QAChC,CAAC,CAED,CAAC;IACJ,CAAC;IAED,sDAAsB,GAAtB;QAEE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,0DAA0D;IAC1D,+CAAe,GAAf,UAAgB,gBAA8B;QAA9C,iBA2CC;QAzCC,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,gBAAgB,GAAE,gBAAgB,CAAC,gBAAgB,CAAC;QACzD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,kBAAkB,GAAG,gBAAgB,CAAC,gBAAgB,CAAC;QAC5D,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,kBAAkB,GAAI,gBAAgB,CAAC,gBAAgB,CAAC;QAC7D,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC;QACvD,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC;QAC5C,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC;QAC3D,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,EAAE,EAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,CAC3D,CAAC;YACC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;gBACxD,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;QACL,CAAC;QACD,EAAE,EAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,CAC5D,CAAC;YACC,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;QACvE,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,gBAAgB,CAAC,MAAM,CAAC,UAAU,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC;QACjD,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC,MAAM,CAAC,UAAU,CAAC;QACzD,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC;QACrD,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,cAAc,CAAC;QAC3D,IAAI,CAAC,oBAAoB,GAAG,gBAAgB,CAAC,qBAAqB,CAAC;QACnE,IAAI,CAAC,qBAAqB,GAAG,gBAAgB,CAAC,cAAc,CAAC;QAC7D,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,mBAAmB,CAAC;QAChE,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,UAAU,CAAC;QACpD,IAAI,CAAC,oBAAoB,GAAG,gBAAgB,CAAC,cAAc,CAAC;QAC5D,IAAI,CAAC,oBAAoB,GAAG,gBAAgB,CAAC,gBAAgB,CAAC;QAC9D,IAAI,CAAC,eAAe,GAAI,gBAAgB,CAAC,aAAa,CAAC;QACvD,IAAI,CAAC,kBAAkB,GAAG,gBAAgB,CAAC,gBAAgB,CAAC;QAC5D,EAAE,EAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,2BAA2B,GAAG,6BAA6B,CAAC;QACnE,IAAI;YACF,IAAI,CAAC,2BAA2B,GAAG,mCAAmC,CAAC;IAC3E,CAAC;IAED,6KAA6K;IAC7K,6CAAa,GAAb,UAAc,GAAG;QAEf,IACA,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACxF,EAAE,EAAC,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,KAAK,SAAS,IAAG,GAAG,CAAC,GAAG,KAAK,sFAAwB,CAAC,aAAa,IAAI,GAAG,CAAC,GAAG,KAAK,sFAAwB,CAAC,SAAS,CAAC;gBAC9I,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YACjC,IAAI;gBACF,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QACpC,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;QACxD,CAAC;IACH,CAAC;IAED,qDAAqB,GAArB,UAAsB,GAAG;QAEvB,IACA,CAAC;YACC,IAAI,aAAa,GAAG,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAC9C,EAAE,EAAC,aAAa,KAAK,sFAAwB,CAAC,aAAa,CAAC;gBAC1D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC9B,IAAI;gBACF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QACjC,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,CAAC;YACC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,uBAAuB,EAAE,CAAC,CAAC,CAAC;QAChE,CAAC;IACH,CAAC;IAED,4DAA4D;IAC5D,kDAAkB,GAAlB;QAEE,EAAE,EAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB,IAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,kBAAkB,IAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,kBAAkB,CAAC;YAC3c,MAAM,CAAC,IAAI,CAAC;QACd,IAAI;YACF,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,qEAAqE;IACrE,+CAAe,GAAf,UAAgB,kBAAkB;QAEhC,EAAE,EAAC,kBAAkB,CAAC;YACpB,MAAM,CAAC;QACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gCAAgC,CAAC,CAAC;QACnE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAC/B,CAAC;YACC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,8CAA8C,CAAC,CAAC;YACvG,MAAM,CAAC;QACT,CAAC;QACD;;;;;;;WAOG;QACH,EAAE,EAAC,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,CACpG,CAAC;YACC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,+EAA+E,CAAC,CAAC;YACxI,MAAM,CAAC;QACT,CAAC;QACD,EAAE,EAAC,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,eAAe,CAAC,CACrD,CAAC;YACC,EAAE,EAAC,IAAI,CAAC,qBAAqB,GAAG,CAAC,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,CACxE,CAAC;gBACC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,mDAAmD,CAAC,CAAC;gBAC5G,MAAM,CAAC;YACT,CAAC;QACH,CAAC;QACD,IAAI;YACF,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;QACpE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QAChE,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3C,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/D,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACvD,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACjE,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACxD,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAI,IAAI,CAAC,kBAAkB;QACjE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;QACvD,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5C,IAAI,CAAC,kBAAkB,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACvD,IAAI,CAAC,kBAAkB,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QACvD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;QACzD,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QACrD,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;QACvD,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAChE,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC;QAC3D,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACjE,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACxE,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAClE,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACrE,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACzD,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACjE,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACnE,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;QACxD,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACvD,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,0CAA0C,CAAC,CAAC;QAChF,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACrE,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,gDAAgD;IAChD,gDAAgB,GAAhB,UAAiB,kBAAkB;QAEjC,EAAE,EAAC,kBAAkB,CAAC;YACpB,MAAM,CAAC;QACT,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,0CAA0C,CAAC,CAAC;QAChF,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,CAAC;IACjD,CAAC;IAED,0DAA0B,GAA1B,UAA2B,KAAK;QAAhC,iBAOC;QALC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,iBAAO;YAErC,EAAE,EAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC;gBAC9B,KAAI,CAAC,2BAA2B,GAAG,OAAO,CAAC,KAAK,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8DAA8D;IAC9D,wDAAwB,GAAxB;QAEE,IAAI,CAAC,kBAAkB,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IACH,4BAAC;AAAD,CAAC;AAlWY,qBAAqB;IANjC,gEAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,2HAA6C;QAC7C,0HAA4C;KAC7C,CAAC;yDAkG0B,4DAAM,oBAAN,4DAAM,sDAA+B,6FAAmB,oBAAnB,6FAAmB,sDAAyB,iFAAc,oBAAd,iFAAc,sDAA8B,6GAAkB,oBAAlB,6GAAkB;GAhGhK,qBAAqB,CAkWjC;AAlWiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX3B,IAAM,UAAU,GAAgB;IACrC;QACE,IAAI,EAAE,UAAU;QAChB,KAAK,EAAE,UAAU;QACjB,KAAK,EAAE,UAAU;QACjB,OAAO,EAAE,gBAAgB;KAC1B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,KAAK,EAAE,UAAU;QACjB,KAAK,EAAE,UAAU;QACjB,OAAO,EAAE,gBAAgB;KAC1B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,KAAK;KACf;CACF,CAAC;AAEK,IAAM,mBAAmB,GAAwB;IACtD,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAC,EAAE;IACzE,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,KAAK,EAAC,EAAE;IAC3E,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAC,EAAE;IAC3D,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAC,EAAE;IAClD,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAC,EAAE;IAClE,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,KAAK,EAAC,EAAE;IAC3E,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IAC3D,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IACjE,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IACrE,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IACrE,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IACnE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IAC/D,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IACxD,EAAE,KAAK,EAAE,QAAQ,EAAG,KAAK,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IAC7D,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IAChE,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IACrE,EAAE,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IAC5E,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;IAC/D,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC;CAC5D;AAEM,IAAM,aAAa,GAAkB;IAC1C;QACE,KAAK,EAAE,iBAAiB;QACxB,KAAK,EAAE,iBAAiB;QACxB,OAAO,EAAE,iBAAiB;KAC3B;IACD;QACE,KAAK,EAAE,iBAAiB;QACxB,KAAK,EAAE,iBAAiB;QACxB,OAAO,EAAE,iBAAiB;KAC3B;IACD;QACE,KAAK,EAAE,aAAa;QACpB,KAAK,EAAE,aAAa;QACpB,OAAO,EAAE,aAAa;KACvB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,cAAc;KACxB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,cAAc;KACxB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,cAAc;KACxB;IACD;QACE,KAAK,EAAE,eAAe;QACtB,KAAK,EAAE,eAAe;QACtB,OAAO,EAAE,eAAe;KACzB;IACD;QACE,KAAK,EAAE,eAAe;QACtB,KAAK,EAAE,eAAe;QACtB,OAAO,EAAE,eAAe;KACzB;IACD;QACE,KAAK,EAAE,OAAO;QACd,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,OAAO;KACjB;IACD;QACE,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,WAAW;QAClB,OAAO,EAAE,WAAW;KACrB;IACD;QACE,KAAK,EAAE,aAAa;QACpB,KAAK,EAAE,aAAa;QACpB,OAAO,EAAE,aAAa;KACvB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,cAAc;KACxB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,cAAc;KACxB;IACD;QACE,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,WAAW;QAClB,OAAO,EAAE,WAAW;KACrB;IACD;QACE,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,WAAW;QAClB,OAAO,EAAE,WAAW;KACrB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,cAAc;KACxB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,cAAc;KACxB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,cAAc;KACxB;IACD;QACE,KAAK,EAAE,YAAY;QACnB,KAAK,EAAE,YAAY;QACnB,OAAO,EAAE,YAAY;KACtB;IACD;QACE,KAAK,EAAE,YAAY;QACnB,KAAK,EAAE,YAAY;QACnB,OAAO,EAAE,YAAY;KACtB;IACD;QACE,KAAK,EAAE,eAAe;QACtB,KAAK,EAAE,eAAe;QACtB,OAAO,EAAE,eAAe;KACzB;IACD;QACE,KAAK,EAAE,eAAe;QACtB,KAAK,EAAE,eAAe;QACtB,OAAO,EAAE,eAAe;KACzB;IACD;QACE,KAAK,EAAE,eAAe;QACtB,KAAK,EAAE,eAAe;QACtB,OAAO,EAAE,eAAe;KACzB;IACD;QACE,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,WAAW;QAClB,OAAO,EAAE,WAAW;KACrB;IACD;QACE,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,WAAW;QAClB,OAAO,EAAE,WAAW;KACrB;IACD,IAAI;IACJ,yBAAyB;IACzB,yBAAyB;IACzB,0BAA0B;IAC1B,KAAK;IACL;QACE,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,QAAQ;QACf,OAAO,EAAE,QAAQ;KAClB;CACF;AAEM,IAAM,gBAAgB,GAAkB;IAC7C;QACE,KAAK,EAAE,iBAAiB;QACxB,KAAK,EAAE,iBAAiB;QACxB,OAAO,EAAE,iBAAiB;KAC3B;IACD;QACE,KAAK,EAAE,iBAAiB;QACxB,KAAK,EAAE,iBAAiB;QACxB,OAAO,EAAE,iBAAiB;KAC3B;IACD;QACE,KAAK,EAAE,aAAa;QACpB,KAAK,EAAE,aAAa;QACpB,OAAO,EAAE,aAAa;KACvB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,cAAc;KACxB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,cAAc;KACxB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,cAAc;KACxB;IACD;QACE,KAAK,EAAE,eAAe;QACtB,KAAK,EAAE,eAAe;QACtB,OAAO,EAAE,eAAe;KACzB;IACD;QACE,KAAK,EAAE,eAAe;QACtB,KAAK,EAAE,eAAe;QACtB,OAAO,EAAE,eAAe;KACzB;IACD;QACE,KAAK,EAAE,gBAAgB;QACvB,KAAK,EAAE,gBAAgB;QACvB,OAAO,EAAE,gBAAgB;KAC1B;IACD;QACE,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,QAAQ;QACf,OAAO,EAAE,QAAQ;KAClB;CACF;AAED,oCAAoC;AAC7B,IAAM,sBAAsB,GAAG;IACpC,SAAS,EAAE,WAAW;IACtB,aAAa,EAAE,eAAe;IAC9B,OAAO,EAAE,SAAS;CACnB;AAEM,IAAM,0BAA0B,GAAG;IACxC,SAAS,EAAE,CAAC;IACZ,aAAa,EAAE,CAAC;IAChB,OAAO,EAAE,CAAC;CACX;AAEM,IAAM,UAAU,GAAW,oBAAoB,CAAC;AAChD,IAAM,iBAAiB,GAAG;IAC/B,QAAQ,EAAE,UAAU;IACpB,QAAQ,EAAE,UAAU;IACpB,GAAG,EAAC,KAAK;CACV;AAEM,IAAM,aAAa,GAAG;IAC3B,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,KAAK;IACb,SAAS,EAAE,OAAO;IAClB,IAAI,EAAE,OAAO;IACb,GAAG,EAAE,QAAQ;CACd;AAEM,IAAM,qBAAqB,GAAG;IACnC,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,OAAO;IACd,KAAK,EAAE,OAAO;IACd,MAAM,EAAE,QAAQ;CACjB;AAEM,IAAM,kBAAkB,GAAG;IAChC,MAAM,EAAE,CAAC;IACT,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;IACR,QAAQ,EAAE,CAAC;IACX,YAAY,EAAE,CAAC;IACf,yBAAyB,EAAC,CAAC;CAC5B;AAED,wFAAwF;AACjF,IAAO,8BAA8B,GAAG;IAC7C,WAAW,EAAE,eAAe;CAC7B;AACD,mBAAmB;AACZ,IAAM,cAAc,GAAG,CAAC,CAAC;AACzB,IAAM,cAAc,GAAG,EAAE,CAAC;AAEjC,qBAAqB;AACd,IAAM,WAAW,GAAG,CAAC,CAAC;AACtB,IAAM,aAAa,GAAG,CAAC,CAAC;AAE/B,OAAO;AACA,IAAM,MAAM,GAAG,CAAC,CAAC;AACjB,IAAM,QAAQ,GAAG,CAAC,CAAC;AAE1B,YAAY;AACL,IAAM,cAAc,GAAG,CAAC,CAAC;AACzB,IAAM,gBAAgB,GAAG,CAAC,CAAC;AAC3B,IAAM,SAAS,GAAG,CAAC,CAAC;AAEpB,IAAM,MAAM,GAAG;IACpB,YAAY,EAAE,iBAAiB;IAC/B,YAAY,EAAE,iBAAiB;IAC/B,YAAY,EAAE,aAAa;IAC3B,YAAY,EAAE,cAAc;IAC5B,YAAY,EAAE,cAAc;IAC5B,YAAY,EAAE,cAAc;IAC5B,aAAa,EAAE,eAAe;IAC9B,aAAa,EAAE,eAAe;IAC9B,KAAK,EAAE,OAAO;IACd,SAAS,EAAE,WAAW;IACtB,WAAW,EAAE,aAAa;IAC1B,YAAY,EAAE,cAAc;IAC5B,YAAY,EAAE,cAAc;IAC5B,SAAS,EAAE,WAAW;IACtB,SAAS,EAAE,WAAW;IACtB,YAAY,EAAE,cAAc;IAC5B,YAAY,EAAE,cAAc;IAC5B,YAAY,EAAE,cAAc;IAC5B,UAAU,EAAE,YAAY;IACxB,UAAU,EAAE,YAAY;IACxB,aAAa,EAAE,cAAc;IAC7B,aAAa,EAAE,cAAc;IAC7B,aAAa,EAAE,cAAc;IAC7B,SAAS,EAAE,WAAW;IACtB,SAAS,EAAE,WAAW;IACtB,MAAM,EAAE,QAAQ;CACjB;AAEM,IAAM,IAAI,GAAG;IAClB,KAAK,EAAE,CAAC;IACR,IAAI,EAAE,CAAC;IACP,QAAQ,EAAE,CAAC;IACX,aAAa,EAAE,CAAC;IAChB,IAAI,EAAE,CAAC;IACP,MAAM,EAAC,CAAC;IACR,WAAW,EAAC,CAAC;CACd;AAED,iBAAiB;AACV,IAAM,MAAM,GAAG;IACpB,OAAO,EAAE,CAAC;IACV,SAAS,EAAE,CAAC;IACZ,KAAK,EAAE,CAAC;IACR,QAAQ,EAAE,CAAC;IACX,UAAU,EAAE,CAAC;IACb,UAAU,EAAE,CAAC;IACb,qBAAqB,EAAE,CAAC;CACzB;AAED,aAAa;AACN,IAAM,UAAU,GAAG;IACxB,aAAa,EAAE,CAAC;IAChB,YAAY,EAAE,CAAC;IACf,aAAa,EAAE,CAAC;CACjB;AAEM,IAAM,oBAAoB,GAAyB;IACxD;QACE,KAAK,EAAE,YAAY;QACnB,KAAK,EAAE,YAAY;QACnB,OAAO,EAAE,YAAY;KACtB;IACD;QACE,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,WAAW;QAClB,OAAO,EAAE,WAAW;KACrB;IACD;QACE,KAAK,EAAE,YAAY;QACnB,KAAK,EAAE,YAAY;QACnB,OAAO,EAAE,YAAY;KACtB;CACF;AACD,qBAAqB;AACd,IAAM,mBAAmB,GAAG;IACjC,SAAS,EAAE,CAAC;IACZ,UAAU,EAAE,CAAC;IACb,aAAa,EAAC,CAAC;CAEhB;AAEM,IAAM,eAAe,GAAmB;IAC7C;QACE,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,OAAO,EAAE,GAAG;KACb;IACD;QACE,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,OAAO,EAAE,GAAG;KACb;IACD;QACE,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,OAAO,EAAE,GAAG;KACb;IACD;QACE,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,OAAO,EAAE,GAAG;KACb;IACD;QACE,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,OAAO,EAAE,GAAG;KACb;CACF;AAEM,IAAM,mBAAmB,GAAwB;IACtD;QACE,KAAK,EAAE,OAAO;QACd,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,6BAA6B;KACrC;IACD;QACE,KAAK,EAAE,UAAU;QACjB,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,mCAAmC;KAC3C;CACF;AAEM,IAAM,kBAAkB,GAAG,UAAU,CAAC;AACtC,IAAM,oBAAoB,GAAG;IAClC,MAAM,EAAE,OAAO;IACf,YAAY,EAAE,cAAc;IAC5B,aAAa,EAAE,eAAe;IAC9B,wBAAwB,EAAE,0BAA0B;IACpD,cAAc,EAAE,gBAAgB;CAEjC;AAEM,IAAM,yBAAyB,GAA8B;IAClE;QACE,KAAK,EAAE,0BAA0B;QACjC,KAAK,EAAE,EAAC,UAAU,EAAE,CAAC,EAAE,aAAa,EAAE,0BAA0B,EAAC;QACjE,OAAO,EAAE,0BAA0B;QACnC,MAAM,EAAE,KAAK;KACd;IACD;QACE,KAAK,EAAE,oBAAoB;QAC3B,KAAK,EAAE,EAAC,UAAU,EAAE,CAAC,EAAE,aAAa,EAAE,oBAAoB,EAAC;QAC3D,OAAO,EAAE,oBAAoB;QAC7B,MAAM,EAAE,KAAK;KACd;IACD;QACE,KAAK,EAAE,yBAAyB;QAChC,KAAK,EAAE,EAAC,UAAU,EAAE,CAAC,EAAE,aAAa,EAAE,yBAAyB,EAAC;QAChE,OAAO,EAAE,yBAAyB;QAClC,MAAM,EAAE,KAAK;KACd;IACD;QACE,KAAK,EAAE,wBAAwB;QAC/B,KAAK,EAAE,EAAC,UAAU,EAAE,CAAC,EAAE,aAAa,EAAE,wBAAwB,EAAC;QAC/D,OAAO,EAAE,wBAAwB;QACjC,MAAM,EAAE,KAAK;KACd;IACD;QACE,KAAK,EAAE,mBAAmB;QAC1B,KAAK,EAAE,EAAC,UAAU,EAAE,CAAC,EAAE,aAAa,EAAE,mBAAmB,EAAC;QAC1D,OAAO,EAAE,mBAAmB;QAC5B,MAAM,EAAE,KAAK;KACd;IACD;QACE,KAAK,EAAE,uBAAuB;QAC9B,KAAK,EAAE,EAAC,UAAU,EAAE,CAAC,EAAE,aAAa,EAAE,uBAAuB,EAAC;QAC9D,OAAO,EAAE,uBAAuB;QAChC,MAAM,EAAE,KAAK;KACd;IACD;QACE,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,EAAC,UAAU,EAAE,CAAC,EAAE,aAAa,EAAE,QAAQ,EAAC;QAC/C,OAAO,EAAE,QAAQ;QACjB,MAAM,EAAE,KAAK;KACd;CACF;AAEM,IAAM,WAAW,GAAG,eAAe,CAAC;AACpC,IAAM,mBAAmB,GAAG;IACjC,wBAAwB,EAAE,0BAA0B;IACpD,kBAAkB,EAAE,oBAAoB;IACxC,uBAAuB,EAAE,yBAAyB;IAClD,sBAAsB,EAAE,wBAAwB;IAChD,iBAAiB,EAAE,mBAAmB;IACtC,qBAAqB,EAAE,uBAAuB;IAC9C,MAAM,EAAE,QAAQ;CACjB;AAEM,IAAM,0BAA0B,GAA+B;IACpE,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,SAAS,EAAC,EAAE,OAAO,EAAE,SAAS,EAAE;IACpF,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,UAAU,EAAC,EAAE,OAAO,EAAE,UAAU,EAAE;IACvF,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,EAAC,EAAE,OAAO,EAAE,OAAO,EAAE;IAC9E,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,EAAC,EAAE,OAAO,EAAE,OAAO,EAAE;IAC9E,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC3E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC3E,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAC,EAAE,OAAO,EAAE,QAAQ,EAAE;IACjF,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,WAAW,EAAC,EAAE,OAAO,EAAE,WAAW,EAAE;IAC1F,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAC,EAAE,OAAO,EAAE,SAAS,EAAE;IACrF,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAC,EAAE,OAAO,EAAE,UAAU,EAAE;IACxF,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAC,EAAE,OAAO,EAAE,UAAU,EAAE;CACzF;AAEM,IAAM,yBAAyB,GAA8B;IAClE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;CAC1E;AAEM,IAAM,6BAA6B,GAAiC;IACzE,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAC,EAAE,OAAO,EAAE,QAAQ,EAAE;IACrF,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAC,EAAE,OAAO,EAAE,QAAQ,EAAE;IACrF,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,SAAS,EAAC,EAAE,OAAO,EAAE,SAAS,EAAE;IACxF,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,WAAW,EAAC,EAAE,OAAO,EAAE,WAAW,EAAE;IAC9F,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,UAAU,EAAC,EAAE,OAAO,EAAE,UAAU,EAAE;IAC3F,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAC,EAAE,OAAO,EAAE,QAAQ,EAAE;IACrF,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,UAAU,EAAC,EAAE,OAAO,EAAE,UAAU,EAAE;CAC5F;AAEM,IAAM,wBAAwB,GAA6B;IAChE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACpE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACpE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACpE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACpE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACpE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACpE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACpE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACpE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACpE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;CACzE;AAEM,IAAM,8BAA8B,GAA8B;IACvE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;CAC3E;AAEM,IAAM,4BAA4B,GAA8B;IACrE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE;IACtE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACzE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { CavTopPanelNavigationService } from '../services/cav-top-panel-navigation.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AlertConfigService\r\n{\r\n  private clientConnectionKey = \"\";\r\n  private graphTimeLabel=\"Last 4 Hours\"\r\n  private activeAlertType = \"Capacity\";\r\n  private activeSeverityType = \"All\";\r\n  private moduleName = \"active\";\r\n  private alertCounterClicked = new Subject<any>();\r\n  alertCounterClicked$ = this.alertCounterClicked.asObservable();\r\n  private getAclParam = new Subject<any>();\r\n  getAclParam$ = this.getAclParam.asObservable();\r\n  private runningTRNum = -1;\r\n  private alertGraphUrl: string;\r\n  private alertACLData: any;\r\n\r\n  constructor(private _navService: CavTopPanelNavigationService, private _router: Router) { }\r\n  \r\n  /** This method is used to show alert graph data in dashboard */\r\n  setAlertGraphsData(urlGraphData: any)\r\n  {\r\n    this.alertGraphUrl = urlGraphData;\r\n    this._navService.addNewNaviationLink('dashboard');\r\n    this._navService.activateNavigationLink('dashboard');\r\n    this._router.navigate(['/home/dashboard/favoritePanel']);\r\n  }\r\n\r\n  setAlertCounterValue(alertType: string, severityType: string)\r\n  {\r\n    this.activeAlertType = alertType;\r\n    this.activeSeverityType = severityType;\r\n    let reqObj = {};\r\n    reqObj[\"type\"] = alertType;\r\n    reqObj[\"severity\"] = severityType;\r\n\r\n    this.alertCounterClicked.next(reqObj);\r\n  }\r\n  \r\n  public get $alertACLData(): any\r\n  { \r\n    return this.alertACLData;\r\n  }\r\n  public set $alertACLData(aclData: any)\r\n  { \r\n    this.alertACLData = aclData;    \r\n  }\r\n  \r\n  setAclParam(res)\r\n  {\r\n    this.getAclParam.next(res);\r\n  }\r\n  \r\n  public get $clientConnectionKey(): string\r\n  { \r\n    return this.clientConnectionKey;\r\n  }\r\n  public set $clientConnectionKey(value: string)\r\n  { \r\n    this.clientConnectionKey = value;    \r\n  }\r\n\r\n  public get $graphTimeLabel(): string\r\n  {\r\n    return this.graphTimeLabel;\r\n  }\r\n  public set $graphTimeLabel(value: string)\r\n  {\r\n    this.graphTimeLabel = value;\r\n  }\r\n  \r\n  public get $activeAlertType(): string \r\n  { \r\n    return this.activeAlertType;\r\n  }\r\n  public set $activeAlertType(value: string)\r\n  { \r\n    this.activeAlertType = value;\r\n  }\r\n\r\n  public get $activeSeverityType(): string\r\n  {\r\n    return this.activeSeverityType;\r\n  }\r\n  public set $activeSeverityType(value: string)\r\n  { \r\n    this.activeSeverityType = value;\r\n  }\r\n\r\n  public get $moduleName(): string\r\n  { \r\n    return this.moduleName;\r\n  }\r\n  public set $moduleName(value: string)\r\n  { \r\n    this.moduleName = value;\r\n  }\r\n\r\n  public get $runningTestRunNum() : number\r\n  {\r\n    return this.runningTRNum;\r\n  }  \r\n  public set $runningTestRunNum(value: number)\r\n  {\r\n    this.runningTRNum = value;\r\n  }\r\n\r\n  public get $alertGraphUrl(): string\r\n  { \r\n    return this.alertGraphUrl;\r\n  }\r\n  public set $alertGraphUrl(value: string)\r\n  { \r\n    this.alertGraphUrl = value;    \r\n  }\r\n \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/main/services/alert-config-service.ts","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n//import { WdInputs } from '../container/wd-inputs';\n//import { DashboardDataCache } from '../container/dashboard-data-cache';\n//import { DashboardTrendCompare } from '../container/dashboard-trend-compare';\n\n@Injectable()\nexport class CavConfigService {\n\n\tprivate protocol = 'http';\n\tprivate host = \"10.10.50.5\";//window.location.hostname;\n\tprivate port = \"8001\";//window.location.port;\n\tprivate productName = 'netstorm';\n\tprivate productType = '';\n\tprivate userName: string = \"Cavisson\";\n\tprivate userType = 'Engineer';\n\tprivate userRole = 'Standard';\n\tprivate userGroup = 'netstorm';\n\tprivate serverIP: string = null;\n\tprivate appPath: string = null;\n\tprivate serverType = '';\n\tprivate serverTitle = '';\n\tprivate productMode = '';\n\tprivate timeZone = 'IST';\n        private timeZoneId = 'Asia/Kolkata';\n\tprivate workPath = '';\n\tprivate openDashboardInTab = true;\n\tprivate dashboardTestRun: number = -1;\n\tprivate dashboardReportTestRun: number = -1;\n\n\tprivate selectedDataCenter = 'ALL';\n\tprivate dcInfoArr: any[] = [];\n\tprivate aggregateDCString = '';\n\tprivate nonAggDCString = '';\n\tprivate controllerName = '';\n\tprivate serialNumberOfServer = '';\n\tpublic clientConnectionKey = null;\n//\twdExternalInputs: WdInputs = null;\n\twdOpenOnStart = false;\n\t//private dashboardDataCache: DashboardDataCache = null;\n\tprivate aclAccessRight: string;\n\tprivate testRunAccessPrivileges: any;\n\n\tprivate sessionTestNumChange = new Subject<any>();\n\tsessionTestNumChange$ = this.sessionTestNumChange.asObservable();\n    /*variable for selected test runs details */\n\tprivate testRunDetails: any;\n\t/*variable for getting selected test run numbers */\n\tprivate testRunNumbers = null;\n\t/*variable for setting compare type. */\n\tprivate compareType = 0;\n\t//private dashboardTrendCompare: DashboardTrendCompare = null;\n        private featurePermissionList: any;\n \n  /** defining flag for apply Tx deatil either from compare Trend dialog or dashboard compare dialog   */\n  \tprivate isTxCompareTrendMode = false;\n\tconstructor() {\n\t\t// this.openDashboardInTab = true;\n\t\tthis.serverIP = '//' + this.host + ':' + this.port + '/';\n\t\tthis.appPath = this.serverIP + 'ProductUI';\n\t}\n\n\t/* Getting values from session storage if browser refresh happend. */\n\tpublic restoreConfiguration() {\n\t\ttry {\n\t\t\tconsole.info('Restoring configuration from session.');\n\n\t\t\tthis.userName = \"Cavisson\";//sessionStorage.getItem('sesLoginName');\n\t\t\tthis.userGroup = sessionStorage.getItem('sessGroupName');\n\t\t\tthis.userType = sessionStorage.getItem('sessUserType');\n\t\t\tthis.userRole = sessionStorage.getItem('sesRole');\n\t\t\tthis.productType = sessionStorage.getItem('strServerType');\n\t\t\tthis.serverTitle = sessionStorage.getItem('sessServerTitle');\n\t\t\tthis.productMode = sessionStorage.getItem('productType');\n\t\t\tthis.workPath = sessionStorage.getItem('workPath');\n\t\t\tthis.productName = sessionStorage.getItem('sessServerTitle');\n\t\t\tthis.timeZone = sessionStorage.getItem('timeZone');\n\t\t\tthis.timeZoneId = sessionStorage.getItem('timeZoneId');\n                        this.controllerName = sessionStorage.getItem('controllerName');\n\t\t\tthis.serialNumberOfServer = sessionStorage.getItem('serialNumber');\n\n\t\t\tif (sessionStorage.getItem('dashboardTestRun') !== null && sessionStorage.getItem('dashboardTestRun') !== undefined) {\n\t\t\t\tthis.dashboardTestRun = parseInt(sessionStorage.getItem('dashboardTestRun'), 10);\n\t\t\t\tif (sessionStorage.getItem('clientConnectionKey') !== null && sessionStorage.getItem('clientConnectionKey') !== undefined) {\n\t\t\t\t\tthis.clientConnectionKey = sessionStorage.getItem('clientConnectionKey');\n\t\t\t\t}\n\t\t\t}\n\n\t\t} catch (e) {\n\t\t\tconsole.error('Error in restoring session.');\n\t\t\tconsole.error(e);\n\t\t}\n\t}\n\n       \tpublic get $isTxCompareTrendMode(): boolean {\n\t\treturn this.isTxCompareTrendMode;\n\t}\n\n\tpublic set $isTxCompareTrendMode(value: boolean) {\n\t\tthis.isTxCompareTrendMode = value;\n\t}\n\n\tpublic get $protocol(): string {\n\t\treturn this.protocol;\n\t}\n\n\tpublic set $protocol(value: string) {\n\t\tthis.protocol = value;\n\t}\n\n\tpublic get $host(): string {\n\t\treturn this.host;\n\t}\n\n\tpublic set $host(value: string) {\n\t\tthis.host = value;\n\t}\n\n\tpublic get $port(): string {\n\t\treturn this.port;\n\t}\n\n\tpublic set $port(value: string) {\n\t\tthis.port = value;\n\t}\n\n\tpublic get $productName(): string {\n\t\treturn this.productName;\n\t}\n\n\tpublic set $productName(value: string) {\n\t\tthis.productName = value;\n\t}\n\n\tpublic get $userName(): string {\n\t\treturn this.userName;\n\t}\n\n\tpublic set $userName(value: string) {\n\t\tthis.userName = value;\n\t}\n\n\tpublic get $userType(): string {\n\t\treturn this.userType;\n\t}\n\n\tpublic set $userType(value: string) {\n\t\tthis.userType = value;\n\t}\n\n\tpublic get $serverIP(): string {\n\t\treturn this.serverIP;\n\t}\n\n\tpublic set $serverIP(value: string) {\n\t\tthis.serverIP = value;\n\t}\n\n\t/*public set $dashboardDataCache(dashboardDataCache: DashboardDataCache) {\n\t\tthis.dashboardDataCache = dashboardDataCache;\n\t}\n\n\tpublic get $dashboardDataCache() {\n\t\treturn this.dashboardDataCache;\n\t}*/\n\n\tpublic get $appPath(): string {\n\t\tif (sessionStorage.getItem('isMultiDCMode')) {\n\t\t\treturn sessionStorage.getItem('appPathForDC');\n\t\t}\n\t\telse {\n\t\t\treturn this.appPath;\n\t\t}\n\t}\n\n\tpublic set $appPath(value: string) {\n\t\tthis.appPath = value;\n\t}\n\n\tpublic get $openDashboardInTab(): boolean {\n\t\treturn this.openDashboardInTab;\n\t}\n\n\tpublic set $openDashboardInTab(value: boolean) {\n\t\tthis.openDashboardInTab = value;\n\t}\n\n\tpublic get $dashboardTestRun(): number {\n\t\treturn this.dashboardTestRun;\n\t}\n\n\tpublic set $dashboardTestRun(value: number) {\n\t\tconsole.log('Opening dashboard with testRun =', value);\n\t\tthis.dashboardTestRun = value;\n\t\tthis.sessionTestNumChange.next(value);\n\t\t/*On Every new Test Run connection key got reset. */\n\t\tthis.clientConnectionKey = null;\n\t\t/**On Every new Test Run cache is cleared. */\n\t//\tthis.dashboardDataCache = null;\n\t}\n\n\tpublic get $dashboardReportTestRun(): number {\n\t\treturn this.dashboardReportTestRun;\n\t}\n\n\tpublic set $dashboardReportTestRun(value: number) {\n\t    sessionStorage.setItem('dashboardReportTestRun', value+'');\n\t\tthis.dashboardReportTestRun = value;\n\t}\n\n\t/* using for external link such as copy favorite link */\n\t/*public get $wdExternalInputs(): WdInputs {\n\t\treturn this.wdExternalInputs;\n\t}\n\n\tpublic set $wdExternalInputs(value: WdInputs) {\n\t\tthis.wdExternalInputs = value;\n\t}*/\n\n\tpublic get $userGroup(): string {\n\t\treturn this.userGroup;\n\t}\n\n\tpublic set $userGroup(value: string) {\n\t\tthis.userGroup = value;\n\t}\n\n\tpublic get $userRole(): string {\n\t\treturn this.userRole;\n\t}\n\n\tpublic set $userRole(value: string) {\n\t\tthis.userRole = value;\n\t}\n\n\tpublic get $productType(): string {\n\t\treturn this.productType;\n\t}\n\n\tpublic set $productType(value: string) {\n\t\tthis.productType = value;\n\t}\n\n\tpublic get $serverType(): string {\n\t\treturn this.serverType;\n\t}\n\n\tpublic set $serverType(value: string) {\n\t\tthis.serverType = value;\n\t}\n\n\tpublic get $serverTitle(): string {\n\t\treturn this.serverTitle;\n\t}\n\n\tpublic set $serverTitle(value: string) {\n\t\tthis.serverTitle = value;\n\t}\n\n\tpublic get $productMode(): string {\n\t\treturn this.productMode;\n\t}\n\n\tpublic set $productMode(value: string) {\n\t\tthis.productMode = value;\n\t}\n\n\tpublic get $timeZone(): string {\n\t\treturn this.timeZone;\n\t}\n\n\tpublic set $timeZone(value: string) {\n\t\tthis.timeZone = value;\n\t}\n        public get $timeZoneId(): string {\n\t\treturn this.timeZoneId;\n\t}\n\n\tpublic set $timeZoneId(value: string) {\n\t\tthis.timeZoneId = value;\n\t}\n\n\tpublic get $workPath(): string {\n\t\treturn this.workPath;\n\t}\n\n\tpublic set $workPath(value: string) {\n\t\tthis.workPath = value;\n\t}\n\n\tpublic get $controllerName(): string {\n\t\treturn this.controllerName;\n\t}\n\n\tpublic set $controllerName(value: string) {\n\t\tthis.controllerName = value;\n\t}\n\n\t/**client connection key for the access log */\n\tpublic get $clientConnectionKey(): string {\n\t\treturn this.clientConnectionKey;\n\t}\n\n\tpublic set $clientConnectionKey(value: string) {\n\t\tthis.clientConnectionKey = value;\n\t}\n\n\tpublic get $serialNumberOfServer(): string {\n\t\treturn this.serialNumberOfServer;\n\t}\n\n\tpublic set $serialNumberOfServer(value: string) {\n\t\tthis.serialNumberOfServer = value;\n\t}\n\n\t/* Getter Setter For Multi DC Env  */\n\n\t// Prefix for Aggreagte Specific URL's\n\tpublic setINSAggrPrefix(url) {\n\t\tthis.aggregateDCString = url;\n\t}\n\n\tpublic getINSAggrPrefix() {\n\t\tif (sessionStorage.getItem('isMultiDCMode') === undefined || sessionStorage.getItem('isMultiDCMode') === null) {\n\t\t\treturn `//${this.host}:${this.port}`;\n\t\t} else {\n\t\t\tif (this.getActiveDC() !== 'ALL') {\n\t\t\t\treturn `//${this.host}:${this.port}/tomcat/`;\n\t\t\t}\n\t\t\treturn sessionStorage.getItem('INSAggrPrefix');\n\t\t}\n\t}\n\n\t// Prefix for Non Aggr Specific URL\n\tpublic setINSPrefix(url) {\n\t\tthis.nonAggDCString = url;\n\t}\n\n\tpublic getINSPrefix() {\n\t\tif (sessionStorage.getItem('isMultiDCMode') === undefined || sessionStorage.getItem('isMultiDCMode') === null)\n\t\t\treturn `//${this.host}:${this.port}`;\n\t\telse\n\t\t\treturn sessionStorage.getItem('INSPrefix');\n\t}\n\n\t/*Setting Active DC*/\n\tpublic setActiveDC(dcName) {\n\t\tthis.selectedDataCenter = dcName;\n\t}\n\n\tpublic getActiveDC() {\n\t\tif (sessionStorage.getItem('isMultiDCMode'))\n\t\t\treturn sessionStorage.getItem('activeDC');\n\t\telse\n\t\t\treturn this.selectedDataCenter;\n\t}\n\n\t/*Setting DC Obj*/\n\tpublic setDCInfoObj(dcArrObj) {\n\t\tthis.dcInfoArr = dcArrObj;\n\t}\n\tpublic getDCInfoObj() {\n\t\treturn this.dcInfoArr;\n\t}\n\n\t/** Get IP for Selected DC in case of MultiDC else return current host IP */\n\tpublic getURLByActiveDC(dc?) {\n\t\ttry {\n\t\t\tif (sessionStorage.getItem('isMultiDCMode') === undefined)\n\t\t\t\treturn this.serverIP;\n\t\t\telse {\n\t\t\t\tlet dcName = (dc === undefined) ? this.getActiveDC() : dc;\n\n\t\t\t\t// In case ALL is selected, open JSP with Master DC IP\n\t\t\t\tif (dcName === 'ALL') {\n\t\t\t\t\tfor (let property in this.dcInfoArr) {\n\t\t\t\t\t\tif (this.dcInfoArr[property].isMaster === true) {\n\t\t\t\t\t\t\tdcName = this.dcInfoArr[property].dc;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet host = this.dcInfoArr.find((info) => {\n\t\t\t\t\treturn info.dc === dcName;\n\t\t\t\t});\n\t\t\t\tif (host === null || host === undefined) {\n\t\t\t\t  return this.serverIP;\n \t\t\t\t} else {\n\t\t\t\t  return `${host.protocol}://${host.ip}:${host.port}/`;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log('In method getIPForJSP. Error while getting IP.', e);\n\t\t\treturn this.serverIP;\n\t\t}\n\t}\n\tpublic get $aclAccessRight(): string {\n\t\treturn this.aclAccessRight;\n\t}\n\n\tpublic set $aclAccessRight(value: string) {\n\t\tthis.aclAccessRight = value;\n\t} \n\n\tpublic get $testRunAccessPrivileges(): any {\n\t\treturn this.testRunAccessPrivileges;\n\t}\n\n\tpublic set $testRunAccessPrivileges(value: any) {\n\t\tthis.testRunAccessPrivileges = value;\n\t}\n\n\tpublic get $testRunDetails(): any {\n\t\treturn this.testRunDetails;\n\t}\n\n\tpublic set $testRunDetails(value: any) {\n\t\tthis.testRunDetails = value;\n\t}\n\n\tpublic get $testRunNumbers(): any {\n\t\treturn this.testRunNumbers;\n\t}\n\n\tpublic set $testRunNumbers(value: any) {\n\t\tthis.testRunNumbers = value;\n\t}\n\n\tpublic get $compareType(): number {\n\t\treturn this.compareType;\n\t}\n\n\tpublic set $compareType(value: number) {\n\t\tthis.compareType = value;\n\t}\n\n/*\tpublic set $dashboardTrendCompare(dashboardTrendCompare: DashboardTrendCompare) {\n\t\tthis.dashboardTrendCompare = dashboardTrendCompare;\n\t}\n\n\tpublic get $dashboardTrendCompare() {\n\t\treturn this.dashboardTrendCompare;\n\t} */\n       \n        public set $featurePermissionList(data: any) {\n                this.featurePermissionList = data;\n        }\n\n        public get $featurePermissionList(): any{\n                return this.featurePermissionList;\n        }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/main/services/cav-config.service.ts","import {Injectable} from \"@angular/core\";\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Logger } from 'angular2-logger/core';\r\n//import { MailSmsConfigData } from '../container/cav-mail-sms-config-data';\r\n//import { CavDataApiService } from './cav-data-api.service';\r\nimport { CavConfigService } from './cav-config.service'; \r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class MailSmsConfService\r\n{\r\n  className: string = \"MailConfigurationService\";\r\n\r\n // mailSmsConfigdata: MailSmsConfigData;\r\n\r\n  //this will holds login userName\r\n  private loginUser: string;\r\n\r\n  // Observable used to open mail setting window\r\n  private displayMailSettingSource = new Subject<boolean>();\r\n  displayMailSettingWindow$ = this.displayMailSettingSource.asObservable();\r\n\r\n  //set boolean value to open mail setting window\r\n  displayMailSettingWindowFlag(isShowFilters: boolean)\r\n  {\r\n    this.displayMailSettingSource.next(isShowFilters);\r\n  }\r\n\r\n  //Properties for Message dialog box\r\n  header: string = \"\";\r\n  msg: string = \"\";\r\n\r\n  //hold the flag to show/hide message dialog on validation and configuration\r\n  isDisplayMsg: boolean;\r\n\r\n  //hold the flag whether to hide the progress bar or not\r\n  isHideProgress: boolean = false;\r\n  \r\n  //it holds the value of progress bar\r\n  progressValue: number = 0;\r\n    \r\n  //hold the flag to display the dialog box of progress bar\r\n  isShowProgressBar: boolean = false;\r\n  \r\n  //hold the message to show on the progress bar dialog box\r\n  dialogMessage: string = \"\";\r\n  \r\n\r\n  //Use getMailSmsConfData observable to transfer data from top pane to the Mail_SMS config componenent\r\n // private setMailSmsConfigdata = new Subject<MailSmsConfigData>();\r\n // getMailSmsConfData$ = this.setMailSmsConfigdata.asObservable();\r\n  \r\n  constructor(private _http: Http, private logger: Logger, \r\n              private _config: CavConfigService)\r\n  {\r\n    //his.mailSmsConfigdata = new MailSmsConfigData();    \r\n  }\r\n  \r\n\r\n  //getting mailsmsconfiguration for showing in gui\r\n /* getMailSmsConfiguration()\r\n  {\r\n    this.logger.info(this.className, \"getMailSmsConfiguration\", \"getMailSmsConfiguration method called\");\r\n    try\r\n    {\r\n      let url = this.getServiceURL(\"getMailSmsConfig\");\r\n    \r\n      this.logger.info(this.className, \"getMailSmsConfiguration\" , \"Url for getting data = \" , url);\r\n    \r\n      let dataSubscribe = this._dataApiService.getDataByRESTAPI(url , \"\").subscribe(\r\n          res =>{\r\n                  this.setMailSMSConfiguration(res);\r\n                },\r\n          error => this.logger.error(this.className, \"getMailSmsConfiguration\" , \"error in getting data from server\", error),\r\n          () => \r\n          {\r\n            dataSubscribe.unsubscribe();\r\n          }\r\n        );\r\n    }\r\n    catch(e)\r\n    {\r\n      this.logger.error(this.className, \"getMailSmsConfiguration\", \"Error: \" , e);    \r\n    }\r\n  }*/\r\n\r\n  \r\n  /*Post request for saving mail SMS configuration on server*/\r\n  applyMailSmsSetting(param: string, data: object)\r\n  {\r\n    this.logger.info(this.className, \"applyMailSmsSetting\", \"Going to save data into the server\");\r\n    let url = this.getServiceURL(\"postMailSmsConfig\");\r\n  \r\n    this.logger.info(this.className, \"applyMailSmsSetting\", \"Url for getting data = \", url);\r\n    \r\n    try\r\n    {\r\n    //going to save data on the server by POST request\r\n    /*let dataSubscribe = this._dataApiService.getDataFromRESTUsingPOSTReq(url, param, data).subscribe(\r\n        res =>\r\n        {\r\n          this.logger.info(this.className, \"applyMailSmsSetting\", \"res = \", res);\r\n          this.isHideProgress = true;\r\n          this.openMessageDialog(res.status, res.msg);          \r\n        },\r\n        error => this.logger.error(this.className, \"applyMailSmsSetting\", \"Error in saving Mail SMS Configuration \", error),\r\n        () => \r\n        {\r\n          this.isHideProgress = true;          \r\n          dataSubscribe.unsubscribe();\r\n        }\r\n      );*/\r\n    }\r\n    catch(e)\r\n    {\r\n      this.logger.error(this.className, \"applyMailSmsSetting\", \"Error: \", e);\r\n    }\r\n  }\r\n\r\n\r\n  /*Method is used to call access control information*/\r\n  getAccessControlData(moduleName: string, featureName: string, loginUser: string)\r\n  { \r\n    try\r\n    {\r\n      this.logger.info(this.className, \"getAccessControlData\", \"Going to get access control informatiom\");\r\n      let url = this.getServiceURL(\"getAccessControl?user=\") + loginUser + \"&module=\" + moduleName + \"&feature=\" + featureName ;    \r\n      //return this._dataApiService.getDataByRESTAPI(url, \"\");\r\n    }\r\n    catch(e)\r\n    {\r\n      this.logger.error(this.className, \"getAccessControlData\", \"Error: \", e);      \r\n    }\r\n  }\r\n\r\n\r\n  /*Post method will be invoked by this method(used only testing purpose)*/\r\n  postMailTesting(param: string,data: object)\r\n  {\r\n    this.logger.info(this.className,\"postMailTesting\",\"Going to Test Mail and SMS configuration\");\r\n    let url = this.getServiceURL(\"testMail\");\r\n  \r\n    this.logger.info(this.className, \"postMailTesting\" , \"Url for getting data = \", url);\r\n    \r\n    //going to save data on the server by POST request\r\n   /* let dataSubscribe = this._dataApiService.getDataFromRESTUsingPOSTReq(url , param, data).subscribe(\r\n        res =>\r\n        {\r\n          this.logger.info(this.className, \"postMailTesting\", \"res = \", res); \r\n          this.isHideProgress = true;          \r\n          this.openMessageDialog(res.status, res.msg); \r\n        },\r\n        error => this.logger.error(this.className, \"postMailTesting\", \"Error in saving Mail SMS Configuration \", error),\r\n        () => \r\n        {\r\n          this.isHideProgress = true;          \r\n          dataSubscribe.unsubscribe();\r\n        }\r\n      );*/\r\n  }\r\n\r\n  getComponentAccessControll(loginUser: string) {\r\n    try\r\n    {\r\n      let componenent = \"ProductUI\";\r\n      this.logger.info(this.className, \"getAccessControlData\", \"Going to get Component access control informatiom\",\"loginUsername = \"+loginUser,\"productName = \"+componenent);\r\n      let url = this.getServiceURL(\"getComponentACLParam?user=\") + loginUser + \"&component=\" + componenent ;    \r\n     // return this._dataApiService.getDataByRESTAPI(url, \"\");\r\n    }\r\n    catch(e)\r\n    {\r\n      this.logger.error(this.className, \"getAccessControlData\", \"Error: \", e);      \r\n    }\r\n  } \r\n\r\n\r\n  //Setting mail-sms-configuration data after deserializeing response data\r\n  /*setMailSMSConfiguration(response)\r\n  {\r\n    try\r\n    {\r\n      this.logger.info(this.className, \"setMailSMSConfiguration\", \"method called, body = \", response);\r\n    \r\n      //Setting mail-sms-configuration data after deserializeing response data\r\n      this.mailSmsConfigdata = this.convertResToMailConfData(response);\r\n\r\n      this.setMailSmsConfigdata.next(this.mailSmsConfigdata);\r\n\r\n      //Setting mail-sms-configuration data to the gui Dailog box\r\n    }\r\n    catch (e)\r\n    { \r\n      this.logger.error(this.className, \"setMailSMSConfiguration\", e);\r\n    }\r\n  }*/\r\n\r\n\r\n  /*This method is used to convert responce into MailConfigurationData type and return the resultant object*/  \r\n  /*convertResToMailConfData(response):MailSmsConfigData\r\n  { \r\n    this.logger.info(this.className, \"convertResToMailConfData\", \"Method called. response = \" , response); \r\n  \r\n    let mailSMSconf=new MailSmsConfigData();\r\n  \r\n    try\r\n    {\r\n      if(response.host != \"NA\")\r\n        mailSMSconf.smtpHost = response.host;\r\n      if(response.port != 0)\r\n        mailSMSconf.smtpPort = response.port;\r\n      if(response.secConn === \"NA\")\r\n      {\r\n        mailSMSconf.isSecureConn = false;\r\n      }\r\n      else\r\n      {\r\n        mailSMSconf.secConn = response.secConn; \r\n        mailSMSconf.isSecureConn = true;        \r\n      }     \r\n      mailSMSconf.isAuthRequire = response.authReq;\r\n      mailSMSconf.isSecAuth = response.secAuth;\r\n      if(response.user != \"NA\")\r\n        mailSMSconf.userName = response.user; \r\n      else\r\n        mailSMSconf.userName = \"\";     \r\n      if(mailSMSconf.isAuthRequire)\r\n      {\r\n        mailSMSconf.password = response.pwd;\r\n      }\r\n      response.sms.forEach(element => {\r\n        mailSMSconf.selectedCarriers.push(element);\r\n        });\r\n  \r\n      mailSMSconf.selectedCarrierType = response.smsCType;\r\n    }\r\n    catch(e)\r\n    {\r\n      this.logger.error(this.className, \"convertResToMailConfData\", \"Error in converting to MailConfData: \", e);\r\n    }\r\n    this.logger.info(this.className, \"convertResToMailConfData\", \"After setting response in mailSMSconf is : \" , mailSMSconf);        \r\n    return mailSMSconf;\r\n  }*/\r\n\r\n    \r\n  //making url to get and post method\r\n  getServiceURL(param: string): string\r\n  {\r\n    var activeDC = '';\r\n    \r\n    if(this._config.getINSAggrPrefix().indexOf('node') != -1 || this._config.getINSAggrPrefix().indexOf('tomcat') != -1)\r\n      activeDC = this._config.getActiveDC();\r\n    \r\n    let url = this._config.getINSAggrPrefix() + activeDC + '/DashboardServer/web/AlertDataService/' + param;\r\n  \r\n    return url;\t  \r\n  }\r\n\r\n   /**calling dialog box for showing error & success message */\r\n   openMessageDialog(header: string, message: string)\r\n   {\r\n    this.isDisplayMsg = true;\r\n    this.header = header;\r\n    this.msg = message;\r\n    return;\r\n   }\r\n\r\n   /**the method will be called at the time of saving data into the server */\r\n   showProgressBar(progressMessage: string)\r\n   {\r\n     this.progressValue = 0;\r\n     this.isShowProgressBar = true;\r\n     /* initializing progressbar variables */\r\n     this.dialogMessage = progressMessage;\r\n     this.isHideProgress = false;\r\n     let interval = setInterval(() =>\r\n     {\r\n       if (this.progressValue < 85)\r\n       {\r\n         this.progressValue = this.progressValue + Math.floor(Math.random() * 10) + 1;\r\n         if (this.progressValue == 100)//in case progressValue is 100 then decrease it\r\n           this.progressValue = 86;  \r\n       }\r\n \r\n       if (this.isHideProgress == true)\r\n       {\r\n         this.progressValue = 100;\r\n         this.isShowProgressBar = false;\r\n \r\n         clearInterval(interval); //to hide ProgressBar\r\n       }\r\n     }, 500);\r\n   }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/main/services/cav-mail-sms-configuration-service.ts","import { Injectable } from '@angular/core';\n//import { NAV_LINKS } from '../constants/cav-navigation-links';\nimport { Subject } from 'rxjs/Subject';\nimport { Router } from '@angular/router';\n\nimport {CavConfigService} from './cav-config.service'; \n@Injectable()\nexport class CavTopPanelNavigationService {\n\n  /*Array of navigation menu. */\n  private arrNavMenu: Array<any> = [];\n\n   tabBroadcaster =  new Subject<String>();\n  tabServiceProvider$ =   this.tabBroadcaster.asObservable();\n\n\n  constructor(private _route: Router, private _config: CavConfigService) { \n    /* Adding default navigation. */\n    //this.arrNavMenu.push(this.getNavLinkByName('home'));\n  }\n\n  /* Getting Navigation Links. */\n  getNavigationLinks() {\n    return this.arrNavMenu;\n  }\n/*Removng all navigation on log out*/\n  setNavigationLinksonLogOut(arrNavMenu) {\n    this.arrNavMenu = arrNavMenu;\n    //this.arrNavMenu.push(this.getNavLinkByName('home'));\n  }\n\n  /**\n   * Getting navigation link by name.\n   */\n /* getNavLinkByName (name) {\n    try {\n      for (let i = 0; i < NAV_LINKS.length; i++) {\n        if (NAV_LINKS[i] !== undefined && NAV_LINKS[i].name === name) {\n          return NAV_LINKS[i];\n        }\n      }\n    } catch (e) {\n      console.error('Error while getting navigation link information for = ' + name, e);\n    }\n    return null;\n  }*/\n\n  /**Method is used to get active navigation link. */\n /* getActiveNavLinkName() {\n    try {\n      for (let i = 0; i < NAV_LINKS.length; i++) {\n        if (NAV_LINKS[i] !== undefined && NAV_LINKS[i].isActive) {\n          return NAV_LINKS[i].name;\n        }\n      }\n      return 'home';\n    } catch (e) {\n      console.error(e);\n      return 'home';\n    }\n  }*/\n\n  /**\n   * Adding navigation link by name.\n   */\n  addNewNaviationLink (name) {\n    try {\n        this.tabBroadcaster.next(name);\n\n      /* Checking if Nav link already added. */\n      if (this.isNavMenuExist(name)) {\n        console.info('Navigation Menu already added in list. Activating navigation menu = ' + name);\n\n        /* Activate Navigation link. */\n        this.activateNavigationLink(name);\n\n        return true;\n      }\n\n     // let navLink = this.getNavLinkByName(name);\n\n      /*if (navLink === null) {\n         console.error('Navigation information not available for = ' + name);\n         return false;\n      }*/\n\n      /* Adding navigation links. */\n      //this.arrNavMenu.push(navLink);\n\n      /* Activate Navigation link. */\n      this.activateNavigationLink(name);\n\n      return true;\n      \n    } catch (e) {\n      console.error('Error while adding navigation link information for = ' + name, e);\n      return false;\n    }\n  }\n\n  /*Checking if navigation menu exist.*/\n  isNavMenuExist (name) {\n    try {\n      for (let i = 0; i < this.arrNavMenu.length; i++) {\n        if (this.arrNavMenu[i] !== undefined && this.arrNavMenu[i].name === name) {\n          return true;\n        }\n      }\n    } catch (e) {\n      console.error('Error while checking navigation link availability information for = ' + name, e);\n    }\n    return false;      \n  }\n\n  /** Activating Navigation Links. */\n  activateNavigationLink (name) {\n    try {\n      for (let i = 0; i < this.arrNavMenu.length; i++) {\n        if (this.arrNavMenu[i] !== undefined && this.arrNavMenu[i].name === name) {\n          this.arrNavMenu[i].isActive = true;\n        } else {\n          this.arrNavMenu[i].isActive = false;\n        }\n      } \n    } catch (e) {\n      console.error('Error while activating navigation link for = ' + name, e);\n    }\n  }\n\n  /** Removing navigation links. */\n  removeNavigationLink (name) {\n    try {\n\n       /*Checking if navigation length is greater than 1. */\n       if (this.arrNavMenu.length <= 1) {\n         console.warn('Only one Tab Left which cannot be closed.');\n         return;\n       }\n\n       for (let i = 0; i < this.arrNavMenu.length; i++) {\n        if (this.arrNavMenu[i] !== undefined && this.arrNavMenu[i].name === name) {\n          if (this.arrNavMenu[i].isActive) {\n            this.activateNavigationLink('home');\n            this._route.navigate(['/home']);\n            this.arrNavMenu.splice(i, 1);\n            break;\n          } else {\n           // let activeNavTab = this.getActiveNavLinkName();\n            //this.arrNavMenu.splice(i, 1);\n            //this.activateNavigationLink(activeNavTab);\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      console.error('Error while removing navigation link for = ' + name, e);\n    }\n  }\n\n  /** Add DC Name Corresponsding to screen*/\n  addDCNameForScreen (name, dcName){\n    try {\n\n       if(sessionStorage.getItem('isMultiDCMode') == undefined)\n \t return;\n\n       for (let i = 0; i < this.arrNavMenu.length; i++) {\n        if (this.arrNavMenu[i] !== undefined && this.arrNavMenu[i].name === name) {\n   \t  this.arrNavMenu[i]['dcName'] = dcName;\n        }\n      }\n      sessionStorage.setItem('navMenu', JSON.stringify(this.arrNavMenu));\n    } catch (e) {\n      console.error('Error while adding DC Name for = ' + name, e);\n    }\n  }\n \n  /** Get DC Name for current screen*/\n  getDCNameForScreen(name) {\n    try {\n\n       let dcName = '';\n\n       for (let i = 0; i < this.arrNavMenu.length; i++) {\n        if (this.arrNavMenu[i] !== undefined && this.arrNavMenu[i].name === name) {\n            if (this.arrNavMenu[i]['dcName'] !== undefined) {\n              dcName = this.arrNavMenu[i]['dcName'];\n\t      this._config.setActiveDC(dcName);\n\t      sessionStorage.setItem('activeDC', dcName);\n              break;\n            }\n        }\n      }\n      if(sessionStorage.getItem('isMultiDCMode')){\n\tif(dcName == undefined || dcName == '') {\n\t  let navObj = JSON.parse(sessionStorage.getItem('navMenu'));\n\t  for(let i = 0 ; i < navObj.length ; i++) {\n\t    if(navObj[i] !== undefined && navObj[i]['name'] === name){\n\t      if(navObj[i]['dcName'] !== undefined)\n\t  \treturn navObj[i]['dcName'];\t\n \t    }\n\t    else\n\t\treturn sessionStorage.getItem('activeDC');\n\t  }\n\t}\n\telse \n \t  return dcName;\n      }\n      else\n        return dcName;\n    } catch (e) {\n      console.error('Error while getting DC Name for = ' + name, e);\n      return '';\n    }\n  }\n\n  /** Close rest DC Tabs  */\n  closeDCTabsOtherThanActive(name) {\n    try {\t\n       var count = 0;\n       for (let i = 0; i < this.arrNavMenu.length; i++) {\n        if (this.arrNavMenu[i] !== undefined && this.arrNavMenu[i]['dcName'] !== undefined) {\n\t  if(this.arrNavMenu[i]['dcName'] != name) {\n\t    //this.arrNavMenu[i].isActive = false;\n\t    this.removeNavigationLink (this.arrNavMenu[i].name);\n\t    count++;\n\t  }\n        }\n      }\n      if(count < 1)\n        return false;\n      else\n        return true;\n    } catch (e) {\n      console.error('Error while closing other DC Tabs for = ' + name, e);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/main/services/cav-top-panel-navigation.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/app.component.css\n// module id = ../../../../../src/app/modules/alert/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-alert-home></app-alert-home>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/app.component.html\n// module id = ../../../../../src/app/modules/alert/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms'\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\nimport { Logger, Options as LoggerOptions, Level as LoggerLevel} from 'angular2-logger/core';\nimport { HttpModule } from '@angular/http';\nimport {MaterialModule} from './material.module';\n//import {CdkTableModule} from '@angular/cdk/table';\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {SelectItem} from 'primeng/primeng';\n\nimport { AppRoutingModule } from './routes/routes';\nimport { PrimengModule } from './primeng.module';\n\nimport { AppComponent } from './app.component';\nimport { AlertHomeComponent } from './components/alert-home/alert-home.component';\nimport { ActiveAlertMainComponent } from './components/active-alert/active-alert-main/active-alert-main.component';\nimport { BottomPaneComponent } from './components/active-alert/bottom-pane/bottom-pane.component';\nimport { TablePaneComponent } from './components/active-alert/table-pane/table-pane.component';\nimport { TopPaneComponent } from './components/active-alert/top-pane/top-pane.component';\n\n//importing all history components\nimport { AlertHistoryMainComponent } from './components/alert-history/alert-history-main/alert-history-main.component';\nimport { HistoryTopPaneComponent } from './components/alert-history/history-top-pane/history-top-pane.component';\nimport { HistoryLeftPaneComponent } from './components/alert-history/history-left-pane/history-left-pane.component';\nimport { HistoryTablePaneComponent } from './components/alert-history/history-table-pane/history-table-pane.component';\n\n//importing all setting components\nimport { AlertSettingComponent } from './components/alert-setting/alert-setting.component';\n\n//importing all maintenance components\nimport { AlertMaintenanceComponent } from './components/alert-maintenance/alert-maintenance.component';\n\n//importing all rule components\nimport { RuleDefinitionComponent } from './components/alert-rule/rule-definition/rule-definition.component';\nimport { RuleDescriptionComponent } from './components/alert-rule/rule-description/rule-description.component';\n//import all services\nimport { CommonServices } from './services/common-services';\nimport { ActiveAlertService } from './services/active-alert-services';\nimport { HistoryServices } from './services/alert-history-services';\nimport { AlertSettingService } from './services/alert-setting-services';\nimport { AlertMaintenanceService } from './services/alert-maintenance-services';\nimport { AlertRuleService } from './services/alert-rule-service';\n//import { AddNewRuleCondition } from './components/alert-rule/rule-definition/add-rule-condition';\nimport { RuleConditionDefinition } from './components/alert-rule/rule-definition/rule-condition-definition';\nimport { RuleIndividualCondition } from './components/alert-rule/rule-definition/rule-condition-individual'\nimport { TierConditionDirective } from './components/alert-rule/rule-definition/rule-condition-directives';\nimport { IndividualConditionDirective } from './components/alert-rule/rule-definition/rule-individual-directive';\nimport { IndividualMajorDirective } from './components/alert-rule/rule-definition/individual-major-directive';\nimport { IndividualMinorDirective } from './components/alert-rule/rule-definition/individual-minor-directive';\n\nimport { AlertConfigService } from './../../main/services/alert-config-service';\nimport { CavConfigService } from './../../main/services/cav-config.service';\nimport { MailSmsConfService } from './../../main/services/cav-mail-sms-configuration-service';\nimport { CavTopPanelNavigationService } from './../../main/services/cav-top-panel-navigation.service';\n\n//import all directives\nimport { LimitToIntegerDirective } from './directives/input-field-integer'\nimport { LimitToDirective } from './directives/input-field-limit'\n//import all directives\nimport { DisableButtonDirective } from './directives/disable-button'\nimport { AclPermissonProvider } from './directives/acl-permisson-provider'\n@NgModule({\n  declarations: [\n    LimitToIntegerDirective,\n    LimitToDirective,\n    DisableButtonDirective,\n    AclPermissonProvider,\n    AppComponent,\n    AlertHomeComponent,\n    ActiveAlertMainComponent,\n    BottomPaneComponent,\n    TablePaneComponent,\n    TopPaneComponent,\n    AlertHistoryMainComponent,\n    HistoryTopPaneComponent,\n    HistoryLeftPaneComponent,\n    HistoryTablePaneComponent,\n    AlertSettingComponent,\n    AlertMaintenanceComponent,\n    RuleDefinitionComponent,\n    RuleDescriptionComponent,\n    RuleConditionDefinition,\n    RuleIndividualCondition,\n    TierConditionDirective,\n    IndividualConditionDirective,\n    IndividualMajorDirective,\n    IndividualMinorDirective\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CommonModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    MaterialModule,\n    PrimengModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    { provide: LoggerOptions, useValue: { level: LoggerLevel.DEBUG } },\n    Logger,\n    CommonServices,\n    ActiveAlertService,\n    HistoryServices,\n    AlertSettingService,\n    AlertMaintenanceService,\n    AlertRuleService,\n    AlertConfigService,\n    CavConfigService,\n    MailSmsConfService,\n    CavTopPanelNavigationService\n  ],\n  entryComponents: [RuleConditionDefinition, RuleIndividualCondition],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/app.module.ts","/* This class is used to store active alert data */\r\nexport class AlertData\r\n{ \r\n  //holds alert serial number to show in serial number column\r\n  serialNum: number = 1;\r\n  \r\n   //holds alert id. This is unique for every alert\r\n  alertID: number = -1;\r\n  \r\n  //holds generated alert value\r\n  alertValue: string = \"-1\";\r\n  \r\n  //holds rule id for which alert is generated\r\n  ruleId: string = \"-1\";\r\n  \r\n  //holds rule name\r\n  ruleName: string = \"-\";\r\n  \r\n  //holds condition provided in rule\r\n  alertCondition: string = \"-\";\r\n  \r\n  //holds rule description\r\n  ruleDesc: string = \"-\";\r\n  \r\n  //holds rule type\r\n  alertType: string = \"-\";\r\n  \r\n  //holds alert severity - critical, major, minor\r\n  severity: string = \"Normal\";\r\n  \r\n  //holds alert generation time\r\n  alertTime: string = \"-\";\r\n  \r\n  //holds alert time ago\r\n  timeAgo: string = \"-\";\r\n  \r\n  //holds alert message\r\n  alertMsg: string = \"-\";\r\n  \r\n  //alert start time relative\r\n  startTime: string = \"-\";\r\n  \r\n  //alert end time relative\r\n  endTime: string = \"-\";\r\n  \r\n  //holds groupName for which alert is generated\r\n  groupName: string = \"-\";\r\n  \r\n  //holds groupId for which alert is generated\r\n  groupId: number = -1;\r\n\r\n  //holds graphName for which alert is generated\r\n  graphNames: string = \"-\";\r\n  \r\n  //holds graphId for which alert is generated\r\n  graphId: number = -1;\r\n  \r\n  //holds metaData of group\r\n  metaData: string = \"-\";\r\n  \r\n  //holds Vector Name for which alert is generated\r\n  vectorName: string = \"-\";\r\n\r\n  //holds tier name \r\n  tier: string = \"-\";\r\n  \r\n  //holds server name \r\n  server: string = \"-\";\r\n  \r\n  //holds instance name\r\n  instance: string = \"-\";\r\n  \r\n  //holds the baseline index using which behavior alert is generated\r\n  baselineIdx: number = -1; \r\n\r\n  //holds Baseline Name\r\n  baselineName: string = \"Default Baseline\";\r\n  \r\n  //holds load average value\r\n  loadAvgValue: string = \"-1\";\r\n  \r\n  //holds load Tier name for which alert is generated\r\n  loadTierName: string = \"-\";\r\n  \r\n  //holds load Group Id for which alert is generated\r\n  loadGroupId: number = -1;\r\n  \r\n  //holds load Graph Id for which alert is generated\r\n  loadGraphId: number = -1;\r\n  \r\n  //critical threshold provided in rule to compared average value to generate alert\r\n  criticalThreshold: string = \"-1\";\r\n  \r\n  //major threshold provided in rule to compared average value to generate alert\r\n  majorThreshold: string = \"-1\";\r\n  \r\n  //minor threshold provided in rule to compared average value to generate alert\r\n  minorThreshold: string = \"-1\";\r\n  \r\n  //holds threshold value for which alert is generated\r\n  thresholdValue: string = \"-1\";\r\n\r\n  //holds time window provided in rule\r\n  timeWindow: number = 300;\r\n  \r\n  //total number of samples take part in alert generation for given time window in rule\r\n  numSamples: number = 0;\r\n\r\n  //holds alert status like - Started, Ended, Upgraded, Downgrade, Continuous, Force Clear, Rule Changes, Tomcat ...,\r\n  status: string = \"-\";\r\n  \r\n  //holds alert state whether it is in open or resolved\r\n  state: string = \"-\";\r\n\r\n  //holds primary key used in alert history \r\n  primarykey: number = -1;\r\n\r\n  //holds previous severity of generated alert\r\n  //holds alert severity - critical, major, minor\r\n  previousSeverity: string = \"Normal\";\r\n\r\n  //holds action flag\r\n  actionFlag: number = 0x00000000;\r\n\r\n  //holds event type for the alert TYPE_ALERT, TYPE_RULE, TYPE_BASELINE, TYPE_ALERT_SETTING, TYPE_NONE, TYPE_TOMCAT\r\n  eventType: string = \"\";\r\n\r\n  isRowSelected = false;\r\n\r\n  //used to store data center name\r\n  dc: string = \"\";\r\n\r\n  //used to store graph type for which alert is generated\r\n  graphType: number = 1;\r\n\r\n  //used to store derived vectors names\r\n  derivedVectors: string = \"-\";\r\n\r\n  //used to store derived vectors names\r\n  sourceProt: string = \"-\";\r\n\r\n  //used to store derived vectors names\r\n  sourceIp: string = \"-\";\r\n\r\n  //used to store derived vectors names\r\n  sourcePort: string = \"-\"\r\n\r\n\r\n  constructor()\r\n  {\r\n    this.alertID = undefined;\r\n  }\r\n}\r\n\r\n/*This is used to get data for active alert from server */\r\nexport class ActiveAlertData\r\n{\r\n  //this is used to set alert Type either Capacity or Behavior\r\n  alertType: string = \"-\";\r\n  \r\n  //This is used to set total number of critical alert\r\n  critical: number = 0;\r\n  \r\n  //This is used to set total number of major alert\r\n  major: number = 0;\r\n  \r\n  //This is used to set total number of minor alert\r\n  minor: number = 0;\r\n  \r\n  //holds test run number\r\n  testRun: number = -1;\r\n  \r\n  //This is used total alert Information\r\n  arrAlertData:AlertData[];\r\n\r\n  constructor()\r\n  {  \r\n     this.arrAlertData = void 0;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/active-alert.ts","import { AlertData } from './active-alert';\r\n\r\n/*This class is used to store complete alert history*/\r\nexport class AlertHistoryData\r\n{\r\n  /*Holds New Alert Counter*/\r\n  //holds new critical alert counter \r\n  newCriCtr: number = 0;\r\n\r\n  //holds new major alert counter\r\n  newMajCtr: number = 0;\r\n\r\n  //holds new minor alert counter\r\n  newMinCtr: number = 0;\r\n\r\n  //holds new normal alert counter\r\n  newNorCtr: number = 0;\r\n\r\n  /*Holds Continuous Alert Counter*/\r\n  //holds Continuous Critical alert counter\r\n  contiCriCtr: number = 0;\r\n\r\n  //holds Continuous Major Counter\r\n  contiMajorCtr: number = 0;\r\n\r\n  //holds Continuous Minor Counter\r\n  contiMinorCtr: number = 0;\r\n\r\n\r\n  /*Holds Ended Alert Counter*/\r\n  //holds Ended Critical Alert counter\r\n  endCriCtr: number = 0;\r\n\r\n  //holds Ended Major Alert Counter\r\n  endMajCtr: number = 0;\r\n\r\n  //holds Ended Minor Alert Counter\r\n  endMinCtr: number = 0;\r\n\r\n  /*Holds Upgraded Alert Counter*/\r\n  //holds Upgraded from Minor to Major Counter\r\n  upMinMajCtr: number = 0;\r\n\r\n  //holds Upgraded from Minor to Critical Counter\r\n  upMinCriCtr: number = 0;\r\n\r\n  //holds Upgraded from Major to Critical Counter\r\n  upMajCriCtr: number = 0;\r\n\r\n  /*Holds Downgraded Alert Counter*/\r\n  //holds Downgraded from Critical to Major Counter\r\n  downCriMajCtr: number = 0;\r\n\r\n  //holds Downgraded from Critical to Minor Counter\r\n  downCriMinCtr: number = 0;\r\n\r\n  //holds Downgraded from Major to Minor Counter\r\n  downMajMinCtr: number = 0;\r\n\r\n  /*Holds Force Clear Alert Counter*/\r\n  forceClearCtr: number = 0;\r\n\r\n  /*Holds Clear Rule Changes Alert Counter*/\r\n  clearRuleChCtr: number = 0;\r\n\r\n  /*Holds Alert Type Counter*/\r\n  //holds Alert Type Counter\r\n  allAlertCtr: number = 0;\r\n\r\n  //holds Alert Type Counter\r\n  capacityCtr: number = 0;\r\n\r\n  //holds Alert Type Counter\r\n  behaviorCtr: number = 0;\r\n\r\n  /*Holds Advance Filter*/\r\n\r\n  //holds Alert Type Counter\r\n  otherCtr: number = 0;\r\n\r\n  //holds Rule change counter\r\n  ruleChCtr: number = 0;\r\n\r\n  //holds Baseline change counter\r\n  baselineChCtr: number = 0;\r\n\r\n  //holds Alert Setting Changes counter\r\n  settingChCtr: number = 0;\r\n  \r\n  //holds Alert Maintenance Window Changes counter\r\n  maintenanceChCtr: number = 0;  \r\n\r\n  //holds Alert Setting Changes counter\r\n  tomcatChCtr: number = 0;\r\n  \r\n  //holds Ended Major Alert Counter\r\n  errMsg: string = \"\";\r\n\r\n  //This is used to store total alert Information\r\n  arrHistoryData: AlertData[];\r\n\r\n  dc: string = \"\";\r\n  constructor()\r\n  {\r\n    this.arrHistoryData = void 0;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/history-data.ts","/* This class is used to store all the filters information */\r\nexport class HistoryFilters\r\n{\r\n  //this used for operation type 0 - getData, 1- delete record\r\n  operation: number;\r\n\r\n  //used for status type opened:1 , Resolved:2\r\n  state: number;\r\n\r\n  //used to store alert type Capacity:0, Behavior:1, ALL:2\r\n  alertType: number;\r\n\r\n  //This stores the selected rule names\r\n  ruleName: string;\r\n  \r\n  //This stores the selected key to permanently delete record from history database\r\n  selectedKeyToDelete: string;\r\n\r\n  //used to store Tier name or Topology Level 0 value\r\n  tier: string = \"-\";\r\n\r\n  //used to store Server name or Topology Level 1 value\r\n  server: string = \"-\";\r\n\r\n  //used to store Instance name or Topology Level 2 value\r\n  instance: string = \"-\";\r\n\r\n  //used to store field serial number which is defined in constraints\r\n  strFilterFieldNum: number = -1;\r\n\r\n  //Stores applied Filter String\r\n  appliedStrFilter: string = \"-\";\r\n\r\n  //This stores the testRun for which\r\n  testRun: string;\r\n\r\n  //this will stores the max number of record that is requested from Database\r\n  limit: number;\r\n\r\n  //used to check from which records data is needed. default is 0\r\n  offset: number;\r\n\r\n  //Used to store the applied preset to get data\r\n  preset: string;\r\n\r\n  //used to check where to include current day data or not  \r\n  incCurData: number;  \r\n\r\n  //Used to check whether the custom preset is applied or not. For custom:2 and for rest:1\r\n  lastTimeStamp: number;\r\n\r\n  //These are used for custom preset\r\n  //Used to store date and time from where the data is required\r\n  fromTimeStamp: string;\r\n\r\n  //Used to store date and time till data is required\r\n  toTimeStamp: string;\r\n\r\n  //Not in used\r\n  timeStamp: number = -1;\r\n  \r\n  //This will holds all the filter information for Alert Severity, Alert Type, Advance\r\n  mapTypeStatusWithFilter: any;\r\n\r\n  //This stores the selected alertId to show all record from history database \r\n  selectedAlertId: string;\r\n}\r\n\r\n//This is used to store Alert current and previous severity and it is used in mapTypeStatusWithFilter of HistoryFilters class\r\nexport class AlertSeverityFilter\r\n{\r\n  severity: number = -1;\r\n  prevSeverity: number = -1;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/history-filters.ts","\r\n\r\n/** This class is used to store array of maintenance Setting data */\r\nexport class MaintenanceSettingsData\r\n{\r\n  deleteTS: number = 0;\r\n  tierName: string = \"\";\r\n  deleteStatus: number = -1;\r\n  patternType: number = -1;\r\n  scheduleType: number = -1;\r\n  schTypeStr: string = \"\";\r\n  month: number = -1;\r\n  week: number = -1;\r\n  day: number = -1;\r\n  fromHour: number = -1;\r\n  toHour: number = -1;\r\n  startTime: string = \"\";\r\n  endTime: string = \"\";\r\n  description: string = \"\";\r\n  startLTS: number = 0;\r\n  endLTS: number = 0;\r\n  schStr: string = \"\";\r\n  upcomingTS: string = \"\";\r\n  id : number = -1;\r\n}\r\n\r\n/** This class is used to store all alert maintenance setting data */\r\nexport class MaintenanceSettings\r\n{\r\n\r\n  user: string = \"\";\r\n  selectedIndices: any;\r\n  indicesList: any;\r\n  status: number = -1;\r\n  msg: string = \"\";\r\n  reqType: number = 43;\r\n  vecSep: string = \">\";\r\n  arrMSetting:MaintenanceSettingsData[];\r\n\r\n    constructor()\r\n    {\r\n        this.arrMSetting = void 0;\r\n    }\r\n      \r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/maintenance-data.ts","import * as CONS from \"../constants/alert-rule-constant\";\r\nexport class SeverityConditionDTO\r\n{\r\n  operator: number = CONS.ALERT_RULE_CONST.RULE_OPERATOR_TYPE_ANY;\r\n  arrConditions: RuleConditionsDTO[];\r\n  constructor()\r\n  {\r\n    this.arrConditions = void 0;\r\n  }\r\n}\r\n\r\n/** This class is used to store array of maintenance Setting data */\r\nexport class RuleConditionsDTO\r\n{\r\n  id: number = 0;\r\n  severityType: number = CONS.ALERT_RULE_CONST.SEVERITY_ALL;\r\n  name: string = \"\";\r\n  groupName: string = \"\";\r\n  graphName: string = \"\";\r\n  dataType: number = CONS.ALERT_RULE_CONST.AVERAGE_DATA_TYPE;\r\n  operator: number = CONS.ALERT_RULE_CONST.OPERATOR_ABSOLUTE_INCREASE;\r\n  baselineName: string = \"\";\r\n  threshold: number = CONS.ALERT_RULE_CONST.DEFAULT_INT_VAL;\r\n  conditionType: number = CONS.ALERT_RULE_CONST.OPERATOR_DEFINITION_TYPE_PERCENTAGE;\r\n  minDiff: boolean = false;\r\n  minDiffValue: number = CONS.ALERT_RULE_CONST.DEFAULT_INT_VAL;\r\n  vectorMode: number = 0;\r\n  vectorName: string = \"\";\r\n}\r\n\r\n/** This class is used to store all alert maintenance setting data */\r\nexport class RuleDataDTO\r\n{\r\n  enable: boolean = true;\r\n  name: string = \"\";\r\n  threshType: number = CONS.ALERT_RULE_CONST.MOVING_AVERAGE_THRESH_TYPE;\r\n  timeWindow: number = 5; //default moving time window is of 5 minutes\r\n  checkStatus: boolean = true; //used to check for continous alert to log in alert history\r\n  checkStatusTime: number = 30; //default checkstatus time will be of 30 minutes\r\n  syncEnable: boolean = true; //default sync time is enavle. It used in fixed window\r\n  syncTime: number  = -1; //It is only used at server to check the next sync time for rule\r\n  checkDataPtType: number = CONS.ALERT_RULE_CONST.CHECK_DATA_POINT_TYPE_LAST; //used to decide whether any data point is satisfied or consecutive one\r\n  pctCheckDataPoint: number = 100; //check data point is default 100 %\r\n  level: number = CONS.ALERT_RULE_CONST.RULE_LEVEL_ON_TIER; //default rule level type i.e. tierLevel or individual level\r\n  tiers: any = \"\"; //used for selected tier names if level is of tier type\r\n  ruleOperator: number = CONS.ALERT_RULE_CONST.RULE_OPERATOR_TYPE_ANY; // default rule operator is of any type\r\n  arrConditions:RuleConditionsDTO[];//used to store all the conditions for Tier type\r\n  criticalCondition: SeverityConditionDTO; //used to store all the critical conditions for Individual type\r\n  majorCondition: SeverityConditionDTO; //used to store all the critical conditions for Individual type\r\n  minorCondition: SeverityConditionDTO; //used to store all the critical conditions for Individual type\r\n  severityLevel: number = CONS.ALERT_RULE_CONST.SEVERIRTY_DECISION_ON_PERCENTAGE_OF_SERVER;// default severity decide on which level\r\n  severity: number = 3;// default severity type for individual server is CRITICAL\r\n  criticalThreshold: number = -1; //default critical threshold value is -1\r\n  majorThreshold: number = -1; //default major threshold value is -1\r\n  minorThreshold: number = -1; //default minor threshold value is -1\r\n  constructor()\r\n  {\r\n    this.arrConditions = void 0;\r\n  }\r\n}\r\n\r\nexport class ConditionData\r\n{\r\n  data: any;\r\n  constructor()\r\n  {\r\n      this.data = void 0;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/rule-data.ts","/** This class is used to store extension data */\r\nexport class ExtensionSettings{\r\n  \r\n    /** holds alert extension flage */\r\n    onExt: boolean;\r\n    \r\n    /** holds array of alert all extension name */\r\n    extNames: string[] = [];\r\n    \r\n    /** holds array of selected alert extension name */\r\n    sExtNames: string[] = [];\r\n\r\n    constructor()\r\n    {\r\n\r\n    }\r\n\r\n}\r\n\r\n/** This class is used to store policy data */\r\nexport class PolicySettings\r\n{\r\n    /** holds policy flage */\r\n    onPolicy: boolean;\r\n\r\n    /** holds alert mail flage */\r\n    mail: boolean;\r\n\r\n    /** holds alert sms flage */\r\n    sms: boolean;\r\n\r\n    /** holds alert snmp flage */\r\n    snmp: boolean;\r\n\r\n    /** holds alert thread demp flage */\r\n    threadDump: boolean;\r\n    \r\n    /** holds alert heap dump flage */\r\n    heapDump: boolean;\r\n\r\n    /** holds alert tcp dump flage */\r\n    tcpDump: boolean;\r\n\r\n    /** holds alert cpu profile flage */\r\n    cpuProfile: boolean;\r\n\r\n    /** holds alert runScript flage */\r\n    runScript: boolean;\r\n\r\n    /** holds all information of alert extention */\r\n    extension: ExtensionSettings;\r\n\r\n    constructor()\r\n    {\r\n        this.extension = void 0;;\r\n    }\r\n}\r\n\r\n/** This class is used to store alert setting data */\r\nexport class AlertSettings\r\n{\r\n    /** holds alert flage which enable/disable */\r\n    alert: boolean;\r\n\r\n    /** holds alert capacity flage */\r\n    capacity: boolean;\r\n\r\n    /** holds alert behavior flage */\r\n    behaviour: boolean;\r\n    \r\n    /**  holds alert clear existing alert flage */\r\n    clrExistingAlert: boolean;\r\n    \r\n    /** holds alert maintenance flage */\r\n    maintenance: boolean;\r\n    \r\n    /** holds alert clear alert on maintenance flage */\r\n    clrAlertOnMain: boolean;\r\n    \r\n    /**  holds clear external alert flage*/\r\n    clrExtAlertOnInterval: boolean;\r\n    \r\n    clrExtAlertInt: number = 30; \r\n\r\n    /** holds debug level for setting */\r\n    debugLevel: number = 0;\r\n\r\n    profilingLevel: number = 0;\r\n    \r\n    /** holds view mode of baseline data */\r\n    baselineViewMode: number = 0;\r\n\r\n    /** holds min required baseline value */\r\n    minBehabiorValueReq: number = 0.0;\r\n\r\n    /**  its holds applied status of alert setting*/\r\n    status: string =  \"Error\";\r\n\r\n    /**  its holds applied message of alert setting*/\r\n    msg: string  = \"\";\r\n\r\n    /** its holds userName who is logging */\r\n    userName : string = \"Netstorm\";\r\n    \r\n    /** its holds clear capacity alert falge */\r\n    clrCapacityAlert: boolean;\r\n    \r\n    /** its holds clear behavior alert falge */\r\n    clrBehaviorAlert: boolean;\r\n\r\n    /** its holds external alert flage */\r\n    externalAlert: boolean;\r\n    \r\n    /** is holds clear external alert flage */\r\n    clrExternalAlert: boolean;\r\n\r\n    /** holds all information of setting policy data */\r\n    policy: PolicySettings;\r\n\r\n    constructor()\r\n    {\r\n        this.policy = void 0;\r\n    }\r\n      \r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/setting-data.ts","import { Observable } from 'rxjs/Rx';\r\n\r\n/* This class is used to get calculate time to display in HH:mm:ss formate*/\r\nexport class Timer\r\n{\r\n  private hh: number;\r\n  private mm: number;\r\n  private ss: number;\r\n  private time: string;\r\n\r\n  /*assigning default values */\r\n  constructor()\r\n  { \r\n    this.hh = 0;\r\n    this.mm = 0;\r\n    this.ss = 0;\r\n    this.time = \"00:00:00\";\r\n    \r\n    //calling update time method at interval of 1 sec \r\n    Observable.interval(1000).subscribe(\r\n      x => this.updateTime()\r\n    );\r\n  }\r\n\r\n  /*used update time on interval of every 1 sec.*/\r\n  updateTime()\r\n  {\r\n    let hh: string = this.hh + \"\";\r\n    let mm: string = this.mm + \"\";\r\n    let ss: string = this.ss + \"\";\r\n\r\n    //here formating hour value in hh format\r\n    if (this.hh < 10)\r\n      hh = \"0\" + hh;\r\n\r\n    //formating minutes value in mm format\r\n    if (this.mm < 10)\r\n      mm = \"0\" + mm;  \r\n    \r\n    //formating second value in ss format\r\n    if (this.ss < 10)\r\n      ss = \"0\" + ss;\r\n    \r\n    //if second goes beyond 59 then need to increase minutes value\r\n    if (this.ss > 59)\r\n    {\r\n      this.ss = 0;\r\n      ss = \"00\";\r\n      this.mm += 1;\r\n    }\r\n\r\n    //if minute goes beyond 59 then need to increase hour value\r\n    if (this.mm > 59)\r\n    { \r\n      this.mm = 0;\r\n      mm = \"00\";\r\n      this.hh += 1;\r\n    }  \r\n\r\n    //increasing second value whenever this method is called    \r\n    this.ss += 1;\r\n    \r\n    //formating time into hh:mm:ss format\r\n    this.time = hh + \":\" + mm + \":\" + ss;\r\n  }\r\n\r\n  /*Method is used to reset time*/  \r\n  resetTime()\r\n  { \r\n    this.hh = 0;\r\n    this.mm = 0;\r\n    this.ss = 0;\r\n  }\r\n\r\n  /*Method is used to return current time*/\r\n  getTime()\r\n  { \r\n    return this.time;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/commons/timer.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*padding-top:1em;*/\\r\\n.main-panel{\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.centre-panel{\\r\\n  /*background: #bbccff;*/\\r\\n  /*height: 460px;*/\\r\\n  padding: 4px;\\r\\n}\\r\\n\\r\\n.bottom-panel{\\r\\n  /*position: fixed;*/\\r\\n  padding: 2px;\\r\\n}\\r\\n.main-box-alert {\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n  margin: 1px 8px;\\r\\n  min-height: 70vh;\\r\\n  padding: 2px 4px;\\r\\n  box-shadow: 0 0 4px 1px #565656;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.alert-top-panel {\\r\\n  background: #68a0d2;\\r\\n}\\r\\n.bottom-panel{\\r\\n  padding: 2px;\\r\\n  background: rgba(185, 228, 255, 0.85);\\r\\n  margin: 2px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/active-alert-main/active-alert-main.component.css\n// module id = ../../../../../src/app/modules/alert/components/active-alert/active-alert-main/active-alert-main.component.css\n// module chunks = main","module.exports = \"<div class=\\\"main-box-alert\\\">\\n  <p-growl [value]=\\\"msg\\\" [life]=5000></p-growl>\\n<div class=\\\"ui-g main-panel\\\">\\n  <app-top-pane [isAccessPermission] = \\\"isAccessPermission\\\" [alertData]=\\\"alertData\\\" class=\\\"ui-g-12 ui-md-12 ui-lg-12 alert-top-panel\\\" (alertTypeChange)=\\\"changeAlertType($event)\\\" (showFilterEvent)=\\\"showHideFilter($event)\\\" (showFilteredDataEvent)=\\\"getFilteredData($event)\\\" [alertSeverity]=\\\"alertSeverity\\\">\\n  </app-top-pane>\\n\\n  <app-table-pane class=\\\"ui-g centre-panel\\\" [isAccessPermission] = \\\"isAccessPermission\\\" [alertData] = \\\"alertData\\\" [alertType] =\\\"alertType\\\" [isShowFilter] = \\\"isShowFilter\\\" (downloadFilterEvent)=\\\"downloadFilterEvents($event)\\\">\\n  </app-table-pane>\\n</div>\\n</div>\\n<div>\\n  <app-bottom-pane class=\\\"ui-g-12 ui-md-12 ui-lg-12 bottom-panel\\\" [isAccessPermission] = \\\"isAccessPermission\\\" [alertData]=\\\"alertData\\\" [alertType]=\\\"alertType\\\" [alertSeverity]=\\\"alertSeverity\\\" (alertDataEmiter)=\\\"setAlertData($event)\\\"  [downloadfilteredValue] = \\\"downloadfilteredValue\\\">\\n  </app-bottom-pane>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/active-alert-main/active-alert-main.component.html\n// module id = ../../../../../src/app/modules/alert/components/active-alert/active-alert-main/active-alert-main.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs/Subject'\nimport { ActiveAlertService } from '../../../services/active-alert-services'\nimport {AlertConfigService} from '../../../../../main/services/alert-config-service';\nimport { ActiveAlertData } from '../../../commons/active-alert';\nimport {CommonServices} from '../../../services/common-services';\nimport { ALERT_NAV_COMPONENT } from '../../../constants/alert-nav-constant';\nimport { Logger } from 'angular2-logger/core';\nimport * as CONS from '../../../constants/alert-constant';\nimport { FilertProperty } from \"../../../interfaces/active-alert\";\n\n/* This is main component of active alert which handle all the model and the data flow in active alert */\n@Component({\n  selector: 'app-active-alert-main',\n  templateUrl: './active-alert-main.component.html',\n  styleUrls: ['./active-alert-main.component.css'],\n  //providers:[ActiveAlertService]\n})\n\n/*Calss is used to handle main component*/  \nexport class ActiveAlertMainComponent implements OnInit \n{\n  //This is used to stroe clas name\n  className: string;\n  //Main data variable which is use to handle active alert data\n  alertData: ActiveAlertData;\n\n  //This will holds alert type whether capacity, behavior or all\n  alertType: string;          \n\n  alertSeverity: number;  \n  //used to show and hide alert filters in alert table  \n  isShowFilter: boolean;\n\n  //used to display message in gui\n  msg: any;\n   private _alertCounterClicked = new Subject<any>();  \n  \n  //This is used to stored filtered value for download\n  downloadfilteredValue: ActiveAlertData  =  new ActiveAlertData();\n\n  //hold the flag for access controll\n  isAccessPermission: boolean;\n  \n  constructor(private activeAlertService: ActiveAlertService,private _commonServices:CommonServices, private _alertConfigService:AlertConfigService, private logger: Logger) \n  { \n    this.className = \"ActiveAlertMainComponent\";\n    this.alertData = new ActiveAlertData();\n   \n    //initializing message variable\n    this.msg = this.activeAlertService.messages;\n  }\n\n  /*This method is used to get data from server before DOM is load */\n  ngOnInit() \n  {\n    this._alertConfigService.alertCounterClicked$.subscribe(\n        response =>\n        {\n          this.activeAlertService.$alertType = response.type;\n          this.activeAlertService.$activeSeverityType = response.severity;\n          var severity = CONS.ALERT_SEVERITY_NUM.ALL_SEVERITY;     \n          if (response.severity == CONS.ALERT_SEVERITY_STRING.CRITICAL)\n            severity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n          else if (response.severity == CONS.ALERT_SEVERITY_STRING.MAJOR)\n            severity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n          else if (response.severity == CONS.ALERT_SEVERITY_STRING.MINOR)\n            severity = CONS.ALERT_SEVERITY_NUM.MINOR;\n          \n          this.activeAlertService.getAlertData(response.type, severity).subscribe(\n            res => \n            {\n              this.setAlertData(res);\n              this.alertType = response.type;\n              this.alertSeverity = severity;\n              this._commonServices.changeRoutingItemActiveState('active');\n            },\n            error => this.logger.error(this.className, \"ngOnInit\", \"Error in getting data from server.\"),\n            () => this.logger.info(this.className, \"ngOnInit\", \"Request Completed.\")\n          );\n        }\n      );\n\n    try\n    {\n      let type = this.activeAlertService.$alertType;\n      if (type != null && type !== \"\")\n        this.alertType = type;\n      else\n        this.alertType = CONS.ALERT_TYPE_STRING.ALL;\n\n      this.alertSeverity = CONS.ALERT_SEVERITY_NUM.ALL_SEVERITY;\n\n      let severity = this.activeAlertService.$activeSeverityType;\n      if (severity != null)\n      {\n        if (severity === CONS.ALERT_SEVERITY_STRING.CRITICAL)\n          this.alertSeverity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n        if (severity === CONS.ALERT_SEVERITY_STRING.MAJOR)\n          this.alertSeverity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n        if (severity === CONS.ALERT_SEVERITY_STRING.MINOR)\n          this.alertSeverity = CONS.ALERT_SEVERITY_NUM.MINOR;\n      }\n\n      this.logger.info(this.className, \"ngOnInit\" + this.alertType + \", severity = \" + this.alertSeverity);\n    \n      //getting data for all alerts from server and call \n      this.activeAlertService.getAlertData(this.alertType, this.alertSeverity).subscribe(\n        res => this.setAlertData(res),\n        error => this.logger.error(this.className, \"ngOnInit\", \"Error in getting data from server.\"),\n        () => this.logger.info(this.className, \"ngOnInit\", \"Request Completed.\")\n      );\n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"ngOnInit\", e);\n    }\n\n    let accessControl = this._commonServices.getAccessControlData(CONS.ALERT_ACCESS_CONTROL.MODULE, CONS.ALERT_ACCESS_CONTROL.ACTIVE_ALERT).subscribe(\n      res=>\n      {\n        this.setAccessData(res);\n      },\n      ()=>\n      {\n        accessControl.unsubscribe();\n      }   \n    );\n    \n  }\n\n  /*Method is used to get data from server whenever there is change in alert type*/  \n  changeAlertType(alertType: string)\n  { \n    this.logger.info(this.className, \"changeAlertType\", \"alert type = \" + alertType + \", alertSeverity = \" + this.alertSeverity);\n\n    //setting alert type    \n    this.alertType = alertType;\n\n    //getting data from server for selected alert type and also set data in table\n    this.activeAlertService.getAlertData(alertType, this.alertSeverity).subscribe(\n      res => this.setAlertData(res),\n      error => this.logger.error(this.className, \"changeAlertType\", \"error in getting data from server\")\n    );\n  }\n\n  /*Method is used to get filtered data from server*/  \n  getFilteredData(filterProperty: FilertProperty)\n  {\n    try\n    {\n      this.logger.info(this.className, \"getFilteredData\", \"alertType = \" + filterProperty.alertType + \", severity =\" + filterProperty.severity);\n\n      this.alertSeverity = filterProperty.severity;\n\n      //setting alert type\n      this.alertType = filterProperty.alertType;\n\n      //getting data from server for selected alert type and also set data in table\n      this.activeAlertService.getAlertData(filterProperty.alertType, filterProperty.severity).subscribe(\n        res => this.setAlertData(res),\n        error => this.logger.error(this.className, \"getFilteredData\", \"error in getting data from server\")\n      );\n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"getFilteredData\", e);\n    }\n  }\n  \n  showHideFilter(isShowFilter)\n  {\n    this.isShowFilter = isShowFilter;\n  }\n\n  /*This is used to set alert data after deserialize the original data got from server and set it to alertData variable for future use*/ \n  setAlertData(res) \n  {\n    try\n    {\n      this.logger.debug(this.className, \"setAlertData\", \" response = \" + res);\n\n      //Setting alert data after deserializeing response data\n      this.alertData = this.activeAlertService.$commonService.convertToActiveAlertData(res);\n      \n      this.downloadfilteredValue.arrAlertData = this.alertData.arrAlertData;\n      //displaying message\n      this.activeAlertService.showMessage('success', 'Success', 'Active alert(s) fetched successfully');\n\n      //reset selected records on table after setting alert data\n      this.activeAlertService.setSelectedRowData([]);\n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"setAlertData\", e);\n    }\n  }\n  downloadFilterEvents(downloadfilteredValue: ActiveAlertData)\n  {\n    this.downloadfilteredValue = downloadfilteredValue;\n  } \n\n  /**This is used to set alert access privilages setting data after deserialize the original data got from server and set it to alertAccessPrivilages variable for future use*/ \n  setAccessData(res) \n  {\n    try\n    {\n      this.logger.info(this.className, \"setAccessData\", \" response = \" + JSON.stringify(res));\n      if(res === null || res.All === undefined ||res.All === CONS.ACCESS_CONTROL_MODE.NO_PERMISSION || res.All === CONS.ACCESS_CONTROL_MODE.READ_MODE)\n        this.isAccessPermission = true;\n      else\n        this.isAccessPermission = false; \n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"setAccessData\", e);\n    }\n  } \n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/active-alert-main/active-alert-main.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".inline-display{\\r\\n  display: block;\\r\\n}\\r\\n.align-right{\\r\\n  float:right;\\r\\n}\\r\\n.align-left{\\r\\n  float:left;\\r\\n}\\r\\n\\r\\n.label-padding{\\r\\n  padding: 4px;\\r\\n}\\r\\ndiv .icon\\r\\n{\\r\\n  font-size: 1.9em;\\r\\n}\\r\\ndiv .alertgui-word {\\r\\n  color: #0055cc !important;\\r\\n}\\r\\n\\r\\n.alertgui-excel {\\r\\n  color: #00aa77 !important;\\r\\n}\\r\\n\\r\\n.alertgui-pdf {\\r\\n  color: #ff4040 !important;\\r\\n}\\r\\n\\r\\n.alertgui-type {\\r\\n  color: #ff2020 !important;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/bottom-pane/bottom-pane.component.css\n// module id = ../../../../../src/app/modules/alert/components/active-alert/bottom-pane/bottom-pane.component.css\n// module chunks = main","module.exports = \"<div class=\\\"bottom-pane\\\">\\n  <div class=\\\"ui-g-4 ui-md-4 ui-lg-5\\\">\\n    <label class=\\\"align-left label-padding\\\">Download As :</label>\\n    <!--<a (click) = \\\"downloadPdf()\\\"><i class=\\\"fa fa-file-pdf-o\\\"></i></a>\\n    <a (click) = \\\"downloadWord()\\\"><i class=\\\"fa fa-file-word-o\\\"></i></a>\\n    <a (click) = \\\"downloadExcel()\\\"><i class=\\\"fa fa-file-excel-o\\\"></i></a>-->\\n    <span title=\\\"Word\\\" class=\\\"icon alertgui-word\\\" style='margin-bottom: -3px; cursor:pointer' (click)='downloadAlertData(\\\"WordFile\\\")'></span>\\n    <span title=\\\"Excel\\\" class=\\\"icon alertgui-excel\\\" style='margin-bottom: -3px; cursor:pointer' (click)='downloadAlertData(\\\"ExcelFile\\\")'></span>\\n    <span title=\\\"PDF\\\" class=\\\"icon alertgui-pdf\\\" style='margin-bottom: -3px; cursor:pointer' (click)='downloadAlertData(\\\"PDFFile\\\")'></span>\\n  </div>\\n  <div class=\\\"ui-g-8 ui-md-8 ui-lg-7 inline-display\\\">\\n    <div class=\\\"align-right\\\">\\n      <button pButton type=\\\"button\\\" icon=\\\"fa fa-line-chart\\\" iconPos=\\\"left\\\" label=\\\"Show Graph\\\" (click) = \\\"showGraph()\\\"></button>\\n      <button pButton type=\\\"button\\\" icon=\\\"fa fa-bell\\\" iconPos=\\\"left\\\" label=\\\"Alert History\\\" *ngIf = \\\"!noPermissonOnHis[1].display\\\"(click) = \\\"alertHistory()\\\"></button>\\n      <button pButton type=\\\"button\\\" icon=\\\"fa fa-times\\\" iconPos=\\\"left\\\" label=\\\"Force Clear\\\" (click)=\\\"forceClear(isAccessPermission)\\\"></button>\\n  <!--    <button pButton type=\\\"button\\\" icon=\\\"fa fa-window-close\\\" iconPos=\\\"left\\\" label=\\\"Close\\\"></button>-->\\n    </div>\\n  <div>\\n  \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/bottom-pane/bottom-pane.component.html\n// module id = ../../../../../src/app/modules/alert/components/active-alert/bottom-pane/bottom-pane.component.html\n// module chunks = main","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { AlertData, ActiveAlertData } from '../../../commons/active-alert';\nimport { Logger } from 'angular2-logger/core';\nimport { ALERT_NAV_COMPONENT } from '../../../constants/alert-nav-constant';\nimport * as CONS from '../../../constants/alert-constant';\nimport * as moment from 'moment';\nimport { ActiveAlertService } from '../../../services/active-alert-services';\nimport { IMAGE_PATH } from \"../../../constants/alert-constant\";\nimport { Router } from '@angular/router';\n\n/*Components is to create bottom panel for download and alert action*/\n@Component({\n  selector: 'app-bottom-pane',\n  templateUrl: './bottom-pane.component.html',\n  styleUrls: ['./bottom-pane.component.css']\n})\n\n/*Class is used to handle all the action performed in bottom panel and also update the data according to the action*/  \nexport class BottomPaneComponent implements OnInit \n{\n  //This will holds the class name\n  className: string;\n\n  //this will store all the alert data that is available on server  \n  @Input()\n  alertData: ActiveAlertData;\n\n  //used to daownload complete alert data when click on downloading button \n  alertDataForDownload: ActiveAlertData;\n\n  //This will holds the selected alert type in top panel\n  @Input()\n  alertType: string;\n\n  @Input()\n  alertSeverity: number;  \n\n  //this used to emit alert data to top panel to update data  \n  @Output()\n  alertDataEmiter = new EventEmitter<ActiveAlertData>();\n\n  //This is used to hold alert icon path\n  imagePath: string;\n\n  //This is holds the alert value for download\n  @Input() \n  downloadfilteredValue: ActiveAlertData;\n\n  //this is Show MultiDc in Case of ALL\n  dc: string;\n\n  //hold the flag for nopermisson mode\n  noPermissonOnHis: any;\n\n  //hold the flag for access controll\n  @Input()\n  isAccessPermission: boolean;\n\n  constructor(private logger: Logger, private activeAlertService: ActiveAlertService, private router: Router)\n  {\n    this.dc = activeAlertService.$commonService.getDcName();\n    this.noPermissonOnHis = ALERT_NAV_COMPONENT;\n   }\n    \n  ngOnInit()\n  {\n    this.className = \"BottomPaneComponent\";\n    this.imagePath = IMAGE_PATH;\n  }\n\n  //This method is used to get graph data from server  \n  showGraph()\n  { \n    try\n    {\n      let queryParam: string;\n      let severity: number;\n      let graphKey: string;\n      let keyFormater = \"_\";\n      let keySaparator = \";\";\n      let querySaparator = \"&\";\n\n      let startTime: number = new Date().getTime();\n      let endTime = 0;\n      let selectedRowData = this.activeAlertService.selectedRowData;\n\n      //If there is no record selected\n      if (selectedRowData === undefined || selectedRowData.length === 0)\n      {\n        this.activeAlertService.showMessage('error', 'Error', 'No row is selected. Select record to show graph(s).');\n        this.logger.error(this.className, \"showGraph\", \"No row is selected. Select record to show graph(s).\");\n        return;\n      }\n\n      for (let idx = 0; idx < selectedRowData.length; idx++)\n      {\n        let date = new Date(selectedRowData[idx].alertTime);\n        if (date.getTime() < startTime)\n          startTime = date.getTime();\n      \n        if (date.getTime() > endTime)\n          endTime = date.getTime();\n        if(selectedRowData[idx].groupId == -1 || selectedRowData[idx].groupId == 0 || selectedRowData[idx].graphId == -1 || selectedRowData[idx].graphId == 0)\n          continue;     \n        if (selectedRowData[idx].severity === CONS.ALERT_SEVERITY_STRING.CRITICAL)\n          severity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n        else if (selectedRowData[idx].severity === CONS.ALERT_SEVERITY_STRING.MAJOR)\n          severity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n        else if (selectedRowData[idx].severity === CONS.ALERT_SEVERITY_STRING.MINOR)\n          severity = CONS.ALERT_SEVERITY_NUM.MINOR;\n        else if (selectedRowData[idx].severity === CONS.ALERT_SEVERITY_STRING.NORMAL)\n          severity = CONS.ALERT_SEVERITY_NUM.NORMAL;\n          \n        if(this.dc == 'ALL')\n        {\n          if (graphKey === undefined)\n            graphKey = \"graphKey=\" + severity + keyFormater + selectedRowData[idx].groupId + keyFormater + selectedRowData[idx].graphId + keyFormater + selectedRowData[idx].tier + keyFormater + selectedRowData[idx].server + keyFormater + selectedRowData[idx].instance + keyFormater + selectedRowData[idx].dc;\n          else\n            graphKey = graphKey + keySaparator + severity + keyFormater + selectedRowData[idx].groupId + keyFormater + selectedRowData[idx].graphId + keyFormater + selectedRowData[idx].tier + keyFormater + selectedRowData[idx].server + keyFormater + selectedRowData[idx].instance + keyFormater + selectedRowData[idx].dc;\n        }\n        else\n        {\n          if (graphKey === undefined)\n            graphKey = \"graphKey=\" + severity + keyFormater + selectedRowData[idx].groupId + keyFormater + selectedRowData[idx].graphId + keyFormater + selectedRowData[idx].tier + keyFormater + selectedRowData[idx].server + keyFormater + selectedRowData[idx].instance;\n          else\n            graphKey = graphKey + keySaparator + severity + keyFormater + selectedRowData[idx].groupId + keyFormater + selectedRowData[idx].graphId + keyFormater + selectedRowData[idx].tier + keyFormater + selectedRowData[idx].server + keyFormater + selectedRowData[idx].instance;\n        }\n      }\n      if(graphKey == null || graphKey == undefined)\n      {\n        this.activeAlertService.showMessage('error', 'Error', 'Open Alert graph is not applicable for derived graph(s).');\n        this.logger.error(this.className, \"showGraph\", \"Open Alert graph is not applicable for derived graph(s).\");\n        return; \n      }   \n      let fromDate = new Date(startTime - CONS.TIME_IN_MILIS.MINUTE_30);\n      let toDate = new Date(endTime + CONS.TIME_IN_MILIS.MINUTE_30);\n\n      queryParam = querySaparator + \"fromDate=\" + moment(fromDate).format('MM/DD/YYYY HH:mm:ss') + querySaparator + \"toDate=\" + moment(toDate).format('MM/DD/YYYY HH:mm:ss') + querySaparator + graphKey;\n      this.activeAlertService.getAlertGraphData(queryParam);\n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"showGraph\", e);\n    }\n  }\n\n  /*Method is used to perform force clear operation of alert */  \n  forceClear(isAccessPermission: boolean)\n  {\n    if(isAccessPermission)\n      return; \n    try\n    {\n      this.logger.info(this.className, \"forceClear\", \"Method calld.\");\n\n      let selectedRowData = this.activeAlertService.selectedRowData;\n\n      //If there is no record selected\n      if (selectedRowData === undefined || selectedRowData.length === 0)\n      {\n        this.activeAlertService.showMessage('error', 'Error', 'No row is selected. Please select row(s) to clear alert(s).');\n        this.logger.error(this.className, \"showGraph\", \"No row is selected. Please select row(s) to clear alert(s).\", this.activeAlertService.messages);\n        return;\n      }\n\n      var  alertIdObj = [];\n      if(this.activeAlertService.$commonService.getDcName() === \"ALL\")\n      {\n        for (let idx = 0; idx < selectedRowData.length; idx++)\n        {\n          alertIdObj.push(selectedRowData[idx].alertID + \"|\" + selectedRowData[idx].dc);\n        }\n      }\n      else\n      {\n        for (let idx = 0; idx < selectedRowData.length; idx++)\n        {\n          alertIdObj.push(selectedRowData[idx].alertID);\n        }\n      }\n\n      console.log(JSON.stringify(alertIdObj));\n\n      //Requesting server for force clear\n      this.activeAlertService.forceClear(alertIdObj, this.alertType, this.alertSeverity).subscribe(\n        res =>  this.setAlertData(res),\n        error => this.logger.error(this.className, \"forceClear\", \"Error in force clear.\"));\n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"forceClear\", e);\n    }\n  }  \n\n  //this is used to set data in main panel  \n  setAlertData(alertData: ActiveAlertData)\n  { \n    this.alertDataEmiter.emit(alertData);\n    this.activeAlertService.showMessage('success', 'Success', 'Alert(s) clear successfully.');\n  }\n\n  //this method is used to download active alert data in word, excel and pdf format\n  downloadAlertData(fileFormat: string)\n  {\n    let selectedSeverity = \"\";\n    if (this.alertSeverity === CONS.ALERT_SEVERITY_NUM.MINOR)\n      selectedSeverity = \"minor\";\n    else if (this.alertSeverity === CONS.ALERT_SEVERITY_NUM.MAJOR)\n      selectedSeverity = \"major\";\n    else if (this.alertSeverity === CONS.ALERT_SEVERITY_NUM.CRITICAL)\n      selectedSeverity = \"critical\";\n    else if (this.alertSeverity === CONS.ALERT_SEVERITY_NUM.ALL_SEVERITY)\n      selectedSeverity = \"all\";\n    if(this.downloadfilteredValue != undefined)\n    {\n      let criticalCounter:number = 0;\n      let majorCounter:number = 0;\n      let minorCounter:number = 0;\n      this.downloadfilteredValue.arrAlertData.forEach(element =>\n      {\n        if (element.severity === CONS.ALERT_SEVERITY_STRING.CRITICAL)\n          criticalCounter++;\n        else if (element.severity === CONS.ALERT_SEVERITY_STRING.MAJOR)\n          majorCounter++;\n        else if (element.severity === CONS.ALERT_SEVERITY_STRING.MINOR)\n          minorCounter++; \n      });\n      this.downloadfilteredValue.alertType = this.alertData.alertType;\n      this.downloadfilteredValue.testRun = this.alertData.testRun;\n      this.downloadfilteredValue.critical = criticalCounter;\n      this.downloadfilteredValue.major = majorCounter;\n      this.downloadfilteredValue.minor = minorCounter;\n      this.activeAlertService.downloadData(fileFormat, this.downloadfilteredValue, selectedSeverity);\n    }\n    else\n      this.activeAlertService.downloadData(fileFormat, this.alertData, selectedSeverity);\n  }\n  \n  /**This method is used to show history data in Aleert History of a particular alert */\n  alertHistory()\n  {\n    let AlertIds: string;\n    let selectedRowData = this.activeAlertService.selectedRowData;\n    if (selectedRowData === undefined || selectedRowData.length === 0)\n    {\n      this.activeAlertService.showMessage('error', 'Error', 'No row is selected. Select record to open alert history(s).');\n      this.logger.error(this.className, \"showGraph\", \"No row is selected. Select record to open alert history(s).\");\n      return;\n    }\n    for (let idx = 0; idx < selectedRowData.length; idx++)\n    {\n      let alertID = selectedRowData[idx].alertID;\n        if (AlertIds === undefined)\n          AlertIds = alertID + \"\";\n        else\n          AlertIds = AlertIds + \",\" + alertID;   \n    } \n    this.logger.info(this.className, \" alertHistory \", \" method called \", \"AlertIds = \" + AlertIds);\n    this.activeAlertService.$commonService.selectedAlertIds = AlertIds;\n    this.router.navigate(['home/alert/history']);\n    this.activeAlertService.$commonService.changeRoutingItemActiveState('history');\n    sessionStorage.setItem(\"moduleName\", \"history\");\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/bottom-pane/bottom-pane.component.ts","module.exports = \"<div class=\\\"ui-widget-header\\\" style=\\\"padding:0em; display: inline-flex; width: 100%;\\\">\\n  <div style=\\\"width: 80%;\\\">\\n    <i class=\\\"fa fa-search\\\" style=\\\"margin:11px 10px 0px 10px\\\"></i>\\n    <input #gb type=\\\"text\\\" pInputText size=\\\"45\\\" placeholder=\\\"Global Filter\\\">\\n  </div>\\n  <div style=\\\"padding-top: 5px; font-weight: 500;\\\" >\\n    <div style=\\\"float: left; padding: 4px 5px 0px 4px;\\\"><label>Show/Hide columns</label></div>\\n    <p-multiSelect [options]=\\\"columnHide\\\" [(ngModel)]=\\\"selectedColumnHide\\\" [maxSelectedLabels] = \\\"2\\\" [style]=\\\"{'width':'130px'}\\\" (onChange)=\\\"callOnSelectedColumnHideType($event)\\\" ></p-multiSelect>\\n  </div>\\n</div>\\n\\n\\n<p-dataTable class=\\\"active-alert\\\" [value]=\\\"alertData.arrAlertData\\\" #dt [globalFilter]=\\\"gb\\\" dataKey=\\\"serialNum\\\" [rows]=\\\"numRowPerPage\\\" [rowsPerPageOptions]=\\\"arrRowsPerPage\\\"  [paginator]=\\\"true\\\"  [responsive]=\\\"true\\\" [pageLinks]=\\\"3\\\" [(selection)]=\\\"activeAlertService.selectedRowData\\\" (onFilter)=\\\"onFilterData($event)\\\" scrollable=\\\"true\\\" scrollHeight={{tablePanelHeight}}>\\n\\n<p-column [style]=\\\"{'width':'30px', 'text-align':'right'}\\\" *ngIf = \\\"!consColHide[0].value.flage\\\" field=\\\"serialNum\\\" sortable=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"Serial Number\\\">#</span>\\n  </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'26px'}\\\" *ngIf = \\\"!consColHide[1].value.flage\\\" header=\\\"cBox\\\" selectionMode=\\\"multiple\\\"></p-column>\\n<p-column [style]=\\\"{'width':'100px'}\\\" *ngIf = \\\"!consColHide[2].value.flage\\\" field=\\\"source\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"Status\\\">Source</span>\\n  </ng-template>\\n  <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n    <span title=\\\"{{data.sourceIp}}:{{data.sourcePort}}\\\">{{data.sourceIp}}:{{data.sourcePort}}</span>\\n  </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'30px', 'text-align':'left'}\\\" field=\\\"dc\\\" *ngIf=\\\"dc=='ALL' && !consColHide[3].value.flage\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"DC\\\">DC</span>\\n  </ng-template>\\n  <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n    <span title=\\\"{{data.dc}}\\\">{{data.dc}}</span>\\n  </ng-template>\\n</p-column>\\n<p-column  field=\\\"alertType\\\" *ngIf=\\\"alertType == 'All' && !consColHide[4].value.flage\\\" [style]=\\\"{'width':'30px'}\\\" sortable=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span><img class=\\\"table-header-icon\\\" border='0' title=\\\"Alert Type\\\" src='{{imagePath}}type.png'></span>\\n  </ng-template>\\n  <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n    <span *ngIf=\\\"data[col.field]=='Capacity'\\\" title=\\\"Capacity\\\" class=\\\"icon alertgui-capacity\\\"></span>\\n    <span *ngIf=\\\"data[col.field]=='Behavior'\\\" title=\\\"Behavior\\\" class=\\\"icon alertgui-behavior\\\"></span>\\n  </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'37px'}\\\" *ngIf = \\\"!consColHide[5].value.flage\\\" field=\\\"severity\\\" sortable=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span><img class=\\\"table-header-icon\\\" border='0' title=\\\"Alert Severity\\\" src='{{imagePath}}severity.png'></span>\\n  </ng-template>\\n  <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n    <span *ngIf=\\\"data[col.field]=='Normal'\\\" class=\\\"icon normal alertgui-major-event\\\" title=\\\"Normal\\\"></span>\\n    <span *ngIf=\\\"data[col.field]=='Critical'\\\" class=\\\"icon alertgui-critical-event\\\" title=\\\"Critical\\\"></span>\\n    <span *ngIf=\\\"data[col.field]=='Major'\\\" class=\\\"icon alertgui-major-event\\\" title=\\\"Major\\\"></span>\\n    <span *ngIf=\\\"data[col.field]=='Minor'\\\" class=\\\"icon alertgui-minor-event\\\" title=\\\"Minor\\\"></span>\\n  </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'100px'}\\\" *ngIf = \\\"!consColHide[7].value.flage\\\" field=\\\"ruleName\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"Rule Name\\\">Rule Name</span>\\n  </ng-template>\\n   <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n     <span title=\\\"{{data.ruleName}}\\\" title=\\\"bottom\\\">{{data.ruleName}}</span>\\n   </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'100px'}\\\" *ngIf = \\\"!consColHide[8].value.flage\\\" field=\\\"graphNames\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"Graph Name\\\">Graph Name</span>\\n  </ng-template>\\n  <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n     <span *ngIf=\\\"data.graphType == 2\\\" title=\\\"{{data.derivedVectors}}\\\">{{data.graphNames}}</span>\\n     <span *ngIf=\\\"data.graphType != 2\\\" title=\\\"{{data.graphNames}}\\\">{{data.graphNames}}</span>\\n   </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'150px'}\\\" *ngIf = \\\"!consColHide[9].value.flage\\\" field=\\\"alertMsg\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"Alert Message\\\">Alert Message</span>\\n  </ng-template>\\n  <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n     <span title=\\\"{{data.alertMsg}}\\\">{{data.alertMsg}}</span>\\n   </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'120px', 'text-align':'right'}\\\" *ngIf = \\\"!consColHide[10].value.flage\\\" header=\\\"Alert Time\\\" field=\\\"alertTime\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"mysort($event,alertData.arrAlertData)\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"Alert Time\\\">Alert Time</span>\\n  </ng-template>\\n  <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n    <span title=\\\"{{data.alertTime}}\\\">{{data.alertTime}}</span>\\n  </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'70px', 'text-align':'right'}\\\" *ngIf = \\\"!consColHide[11].value.flage\\\" header=\\\"Time Ago\\\" field=\\\"timeAgo\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"mysort($event,alertData.arrAlertData)\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"Time Ago\\\">Time Ago</span>\\n  </ng-template>\\n  <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n    <span title=\\\"{{data.timeAgo}}\\\">{{data.timeAgo}}</span>\\n  </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'90px'}\\\" *ngIf = \\\"!consColHide[12].value.flage\\\" field=\\\"tier\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"{{tier}}\\\">{{tier}}</span>\\n  </ng-template>\\n   <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n     <span title=\\\"{{data.tier}}\\\">{{data.tier}}</span>\\n   </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'80px'}\\\" field=\\\"server\\\" *ngIf = \\\"!consColHide[13].value.flage\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"{{server}}\\\">{{server}}</span>\\n  </ng-template>\\n  <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n     <span title=\\\"{{data.server}}\\\">{{data.server}}</span>\\n  </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'90px'}\\\" *ngIf = \\\"!consColHide[14].value.flage\\\" field=\\\"instance\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"{{instance}}\\\">{{instance}}</span>\\n  </ng-template>\\n  <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n     <span title=\\\"{{data.instance}}\\\">{{data.instance}}</span>\\n  </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'80px', 'text-align':'right'}\\\" *ngIf = \\\"!consColHide[15].value.flage\\\" [filter]=isShowFilter field=\\\"alertValue\\\" filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"mysort($event,alertData.arrAlertData)\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"Alert Value\\\">Alert Value</span>\\n  </ng-template>\\n   <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n     <span title=\\\"{{data.alertValue}}\\\">{{data.alertValue}}</span>\\n   </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'80px', 'text-align':'right'}\\\" *ngIf = \\\"!consColHide[16].value.flage\\\" field=\\\"thresholdValue\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"mysort($event,alertData.arrAlertData)\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"Threshold\\\">Threshold</span>\\n  </ng-template>\\n  <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n    <span title=\\\"{{data.thresholdValue}}\\\">{{data.thresholdValue}}</span>\\n  </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'100px'}\\\" *ngIf=\\\"alertType != 'Capacity' && !consColHide[17].value.flage\\\" field=\\\"baselineName\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"true\\\">\\n   <ng-template pTemplate=\\\"header\\\">\\n    <span title=\\\"Baseline\\\">Baseline</span>\\n  </ng-template>\\n   <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n     <span title=\\\"{{data.baselineName}}\\\">{{data.baselineName}}</span>\\n  </ng-template>\\n</p-column>\\n<p-column [style]=\\\"{'width':'30px'}\\\" *ngIf = \\\"!consColHide[18].value.flage\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n      <span title=\\\"Action\\\" class=\\\"fa fa-line-chart\\\"></span>\\n  </ng-template>\\n  <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n    <button type=\\\"button\\\" pButton (click)=\\\"showGraph(data)\\\" icon=\\\"fa fa-line-chart\\\" title=\\\"Show Graph\\\"></button>\\n  </ng-template> \\n</p-column>\\n\\n</p-dataTable>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/table-pane/table-pane.component.html\n// module id = ../../../../../src/app/modules/alert/components/active-alert/table-pane/table-pane.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter }  from '@angular/core';\nimport { IMAGE_PATH } from \"../../../constants/alert-constant\";\nimport { ActiveAlertData, AlertData} from '../../../commons/active-alert';\nimport { Logger } from 'angular2-logger/core';\nimport { ActiveAlertService } from '../../../services/active-alert-services';\nimport { ColFilterProperty, ValueFlageProperty } from '../../../interfaces/active-alert';\nimport { CommonServices } from '../../../services/common-services';\nimport * as CONS from '../../../constants/alert-constant';\nimport * as moment from 'moment';\n\n/*This component is used to create Table panel and also handle all the operation performed on table */\n@Component({\n  selector: 'app-table-pane',\n  templateUrl: './table-pane.component.html',\n  //styleUrls: ['./table-pane.component.css'],\n  //inputs: ['alertData'],\n  providers: [ActiveAlertData]\n})\n\n/*This class will handle all the operation performed in table panel*/  \nexport class TablePaneComponent implements OnInit\n{\n  //used to store class name\n  className: string;\n\n  //This is used to hold alert icon path\n  imagePath: string;\n\n  //this will store all the alert data that is available on server  \n  @Input()\n  alertData: ActiveAlertData;\n  \n  //This will holds selected alert type\n  @Input()\n  alertType: string;\n \n  //used to show and hide alert filter in alert table \n  @Input() isShowFilter: boolean;\n  rowNum = 0;\n\n  //hold the flag for access controll\n  @Input()\n  isAccessPermission: boolean;\n  \n  //Thes are used to changed table header for vectors\n  tier: string;\n  server: string;\n  instance: string;\n \n  //this is Show MultiDc in Case of ALL\n  dc: any;\n  \n  numRowPerPage: number;\n  arrRowsPerPage: number[];\n\n  //This is height of table pane\n  tablePanelHeight: string;\n\n  columnHide:ColFilterProperty[];\n  selectedColumnHide: ValueFlageProperty[] = [];\n  consColHide:ColFilterProperty[];\n\n  \n  \n  @Output()\n  downloadFilterEvent = new EventEmitter<ActiveAlertData>();\n\n  //constructor\n  constructor(private logger: Logger, public activeAlertService: ActiveAlertService, public commonService: CommonServices) \n  {\n    this.dc = activeAlertService.$commonService.getDcName();\n    this.numRowPerPage = 15;\n    this.arrRowsPerPage = [15, 20, 50, 100, 200];\n    this.tablePanelHeight = (window.innerHeight - 275) + \"px\";\n  }\n\n  ngOnInit()\n  {\n    //setting class name into variable\n    this.className = \"TablePaneComponent\";\n\n    //setting alert icons path\n    this.imagePath = IMAGE_PATH;\n\n    this.tier = \"Tier\";\n    this.server = \"Server\";\n    this.instance = \"Instance\";\n    if (this.activeAlertService.$commonService.$productName === \"netvision\")\n    {\n      this.tier = CONS.COL_INDICES + \"1\";\n      this.server = CONS.COL_INDICES + \"2\";\n      this.instance = CONS.COL_INDICES + \"3\";\n    }\n    this.commonService.alertType$.subscribe(\n      res => {\n        this.alertType = res.aTypes,\n           this.dc = res.dcName,\n      this.showHideTableHeader()}\n    );\n    this.showHideTableHeader();\n  }\n  \n  showHideTableHeader()\n  {\n    this.consColHide= [];\n    this.selectedColumnHide = [];\n    this.consColHide = CONS.COL_FILTER_PROPERTY;\n    this.columnHide = [];\n    if(this.alertType == \"Behavior\")\n      this.consColHide[4].value.value = \"Behavior\";\n    else if(this.alertType == \"Capacity\")\n    {\n      this.consColHide[4].value.value = \"Capacity\";\n      this.consColHide[17].value.value = \"Capacity\";\n    }\n    if(this.dc !== \"ALL\")\n      this.consColHide[3].value.value = \"\";\n    else\n      this.consColHide[3].value.value = \"ALL\";\n    for(let i = 0; i < CONS.COL_FILTER_PROPERTY.length; i++) {\n      if(this.consColHide[i].value.value == \"status\" || this.consColHide[i].value.value == this.alertType || this.consColHide[i].value.value === \"\")\n        continue;\n      else\n      {\n        this.selectedColumnHide.push(this.consColHide[i].value);\n        this.columnHide.push(CONS.COL_FILTER_PROPERTY[i]);\n      }\n    }\n    \n    this.selectedColumnHide.splice(2,1);\n    for(let i = 0; i < this.consColHide.length; i++)\n      this.consColHide[i].value.flage = false;\n    this.consColHide[2].value.flage = true;\n  }\n\n\n  //This method is used to get graph data from server  \n  showGraph(alertData: AlertData)\n  { \n    try\n    {\n      let queryParam: string;\n      let severity: number;\n      let graphKey: string;\n      let keyFormater = \"_\";\n      let keySaparator = \";\";\n      let querySaparator = \"&\";\n      \n      let startTime: number = new Date().getTime();\n      let endTime = 0;\n\n      //If there is no record selected\n      if (alertData === undefined)\n      {\n        this.activeAlertService.showMessage('error', 'Error', 'No row is selected. Select record to show graph(s).');\n        this.logger.error(this.className, \"showGraph\", \"No row is selected. Select record to show graph(s).\");\n        return;\n      }\n      if(alertData.groupId == -1 || alertData.groupId == 0 || alertData.graphId == -1 || alertData.graphId == 0)\n      {\n        this.activeAlertService.showMessage('error', 'Error', 'Open Alert graph is not applicable for derived graph(s).');\n        this.logger.error(this.className, \"showGraph\", \"Open Alert graph is not applicable for derived graph(s).\");\n        return; \n      }\n   \n      let date = new Date(alertData.alertTime);\n      startTime = date.getTime();\n      endTime = date.getTime();\n    \n      if (alertData.severity === CONS.ALERT_SEVERITY_STRING.CRITICAL)\n        severity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n      else if (alertData.severity === CONS.ALERT_SEVERITY_STRING.MAJOR)\n        severity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n      else if (alertData.severity === CONS.ALERT_SEVERITY_STRING.MINOR)\n        severity = CONS.ALERT_SEVERITY_NUM.MINOR;\n      else if (alertData.severity === CONS.ALERT_SEVERITY_STRING.NORMAL)\n        severity = CONS.ALERT_SEVERITY_NUM.NORMAL;\n      if(this.dc == 'ALL')\n        graphKey = \"graphKey=\" + severity + keyFormater + alertData.groupId + keyFormater + alertData.graphId + keyFormater + alertData.tier + keyFormater + alertData.server + keyFormater + alertData.instance+keyFormater+alertData.dc;\n      else\n        graphKey = \"graphKey=\" + severity + keyFormater + alertData.groupId + keyFormater + alertData.graphId + keyFormater + alertData.tier + keyFormater + alertData.server + keyFormater + alertData.instance\n      \n      let fromDate = new Date(startTime - CONS.TIME_IN_MILIS.MINUTE_30);\n      let toDate = new Date(endTime + CONS.TIME_IN_MILIS.MINUTE_30);\n\n      queryParam = querySaparator + \"fromDate=\" + moment(fromDate).format('MM/DD/YYYY HH:mm:ss') + querySaparator + \"toDate=\" + moment(toDate).format('MM/DD/YYYY HH:mm:ss') + querySaparator + graphKey;\n\n      this.activeAlertService.getAlertGraphData(queryParam);\n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"showGraph\", e);\n    }\n  }\n  \n  //Custom Sorting on date and timecolumn\n  mysort(event, activeAlertData)\n  {\n    let temp = event.field;\n    if (event.order === -1)\n    {\n      event.order = 1;\n    }\n    else\n    {\n      event.order = -1;\n    }\n    \n    let value1;\n    let value2;\n    activeAlertData = activeAlertData.sort(function (a, b)\n    {\n      if (temp == \"timeAgo\")//sorting of time stamp HH:MM:SS(timeAgo)\n      {\n        let temp1 = a[temp].split(\":\");\n        let temp2 = b[temp].split(\":\");\n        value1 = 0;\n        value2 = 0;\n        for (let i = 0; i < temp1.length; i++) \n        {\n          value1 = value1 + parseInt(temp1[i]);\n          value2 = value2 + parseInt(temp2[i]);\n          if (value1 !== value2)\n            break;\n        }\n      }\n      else if (temp === \"alertTime\")//sorting of dateFormat(alertTime)\n      {\n        value1 = Date.parse(a[temp]);\n        value2 = Date.parse(b[temp]);\n      }\n      else if(temp === \"alertValue\" || temp === \"thresholdValue\")//sorting of dateFormat(alertTime)\n      {\n        let tempA = JSON.parse(JSON.stringify(a[temp]));\n        let tempB = JSON.parse(JSON.stringify(b[temp]));\n        tempA = tempA.replace(\",\", \"\").replace(\"-\",\"-2.0\").replace(\"NaN\",\"-1.0\");\n        tempB = tempB.replace(\",\", \"\").replace(\"-\",\"-2.0\").replace(\"NaN\",\"-1.0\");\n        value1 = parseFloat(tempA);\n        value2 = parseFloat(tempB);\n      }\n\n      if (event.order === -1)\n      {\n        return (value2 > value1) ? 1 : ((value2 < value1) ? -1 : 0);\n      }\n      else\n      {\n        return (value1 > value2) ? 1 : ((value1 < value2) ? -1 : 0);\n      }\n    });\n    this.alertData.arrAlertData = [] ;\n    activeAlertData.forEach(element =>\n    {\n      this.alertData.arrAlertData = this.alertData.arrAlertData.concat(element);\n    });\n  }\n\n  /** This method will holds filter data of active alert data*/\n  onFilterData(event)\n  {\n    let activeAlertFilterData: ActiveAlertData  = new ActiveAlertData();\n    activeAlertFilterData.arrAlertData = event.filteredValue;\n    this.downloadFilterEvent.emit(activeAlertFilterData);\n  }\n\n  callOnSelectedColumnHideType(event)\n  {\n    for(let i = 0; i < this.consColHide.length; i++)\n      this.consColHide[i].value.flage = true;\n    for(let j = 0; j < event.value.length; j++)\n    {\n      for(let i = 0; i < this.consColHide.length; i++)\n      {\n        if(event.value[j].value === this.consColHide[i].value.value)\n          this.consColHide[i].value.flage = false;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/table-pane/table-pane.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".inline-display{\\r\\n    display: -webkit-box;\\r\\n  }\\r\\n  .align-right{\\r\\n    float:right;\\r\\n  }\\r\\n  .display-label{\\r\\n    margin: 1.0em 1em 0em 1em;\\r\\n  }\\r\\n  .display-label-alert-type{\\r\\n    margin: 0.3em 1em 0em 1em;\\r\\n  }\\r\\n  .margin-left{\\r\\n    margin-left: 2.2em\\r\\n  }\\r\\n  .margin-left-button{\\r\\n   margin-left: 0.2em;\\r\\n  }\\r\\n  .margin-left-neg{\\r\\n    margin-left: -2.2em\\r\\n  }\\r\\n  .alert-icon{\\r\\n    color: #00ccff;\\r\\n  }\\r\\n  .alert-counter{\\r\\n    margin: -8px 0px -12px 14px;\\r\\n    padding: 3px;\\r\\n    border-radius: 15px;\\r\\n    color: #fff;\\r\\n    background: #000000;\\r\\n  }\\r\\n  [md-button], [md-fab], [md-icon-button], [md-mini-fab], [md-raised-button] {\\r\\n   min-width: 0px;\\r\\n   padding: 0px;\\r\\n   line-height: 0px;\\r\\n  }\\r\\n  .dropdown-div{\\r\\n    position: relative;\\r\\n    height: 20px;\\r\\n  }\\r\\n  .dropdown-label{\\r\\n    font-size: 15px;\\r\\n    float: left;\\r\\n    margin-left: 25px;\\r\\n  }\\r\\n  .dorpdown-icon{\\r\\n    width:15px;\\r\\n    position:absolute;\\r\\n    top:1px;\\r\\n    /*left:5px*/\\r\\n  }\\r\\n  .critical{\\r\\n    background: #FF2200;\\r\\n  }\\r\\n  .major{\\r\\n    background: #FF5500;\\r\\n  }\\r\\n  .minor{\\r\\n    background: #FFbb00;\\r\\n  }\\r\\n  .all{\\r\\n    background: #fafaff;\\r\\n    color: #000;\\r\\n  }\\r\\n  .pointer\\r\\n  {\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  .selected-alert-type{\\r\\n      border-radius: 4px;\\r\\n      padding: 1px;\\r\\n      font-size: 12px;\\r\\n      background: #f0f0f0;\\r\\n      margin: 1%;\\r\\n  }\\r\\n  .selected-alert-type:hover{\\r\\n    border-radius: 4px;\\r\\n    padding: 1px;\\r\\n    font-size: 12px;\\r\\n    background: #D5D5DB;\\r\\n    color: #000000;\\r\\n    margin: 1%;\\r\\n}\\r\\n\\r\\n  \\r\\n  \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/top-pane/top-pane.component.css\n// module id = ../../../../../src/app/modules/alert/components/active-alert/top-pane/top-pane.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"ui-g-8 ui-md-10 ui-lg-9 inline-display\\\">\\n  <div class=\\\"display-label-alert-type alrtlbl\\\">Alert Type</div>\\n  <p-dropdown [options]=\\\"alertTypes\\\" [(ngModel)]=\\\"_activeAlertService.$alertType\\\" (onChange)=\\\"getAlertData($event.value)\\\" #sAlertType [style]=\\\"{'width':'100px'}\\\">\\n    <ng-template let-type pTemplate=\\\"item\\\">\\n      <div class=\\\"ui-helper-clearfix\\\" class=\\\"dropdown-div\\\">\\n          <span class=\\\"dorpdown-icon icon alertgui-{{type.icon}}\\\"></span>\\n          <div class=\\\"dropdown-label\\\">{{type.label}}</div>\\n      </div>\\n    </ng-template>\\n  </p-dropdown>\\n\\n  <div class=\\\"margin-left inline-display pointer\\\">\\n    <div *ngIf=\\\"alertSeverity == 3\\\" class = \\\"selected-alert-type\\\" (click)=\\\"showFilteredAlert(sAlertType.selectedOption.value, 3)\\\" title=\\\"Critical : {{alertData.critical}}\\\"><div class=\\\"alert-counter critical\\\">{{alertData.critical}}</div><mat-icon class=\\\"alert-icon\\\">notifications</mat-icon></div>\\n    <div *ngIf=\\\"alertSeverity != 3\\\" (click)=\\\"showFilteredAlert(sAlertType.selectedOption.value, 3)\\\" title=\\\"Critical : {{alertData.critical}}\\\"><div class=\\\"alert-counter critical\\\">{{alertData.critical}}</div><mat-icon class=\\\"alert-icon\\\">notifications</mat-icon></div>\\n    <div *ngIf=\\\"alertSeverity == 2\\\" class = \\\"selected-alert-type\\\" (click)=\\\"showFilteredAlert(sAlertType.selectedOption.value, 2)\\\" title=\\\"Major : {{alertData.major}}\\\"><div class=\\\"alert-counter major\\\">{{alertData.major}}</div><mat-icon class=\\\"alert-icon\\\">notifications</mat-icon></div>\\n    <div *ngIf=\\\"alertSeverity != 2\\\" (click)=\\\"showFilteredAlert(sAlertType.selectedOption.value, 2)\\\" title=\\\"Major : {{alertData.major}}\\\"><div class=\\\"alert-counter major\\\">{{alertData.major}}</div><mat-icon class=\\\"alert-icon\\\">notifications</mat-icon></div>\\n    <div *ngIf=\\\"alertSeverity == 1\\\" class = \\\"selected-alert-type\\\" (click)=\\\"showFilteredAlert(sAlertType.selectedOption.value, 1)\\\" title=\\\"Minor : {{alertData.minor}}\\\" ><div class=\\\"alert-counter minor\\\">{{alertData.minor}}</div><mat-icon class=\\\"alert-icon\\\">notifications</mat-icon></div>\\n    <div *ngIf=\\\"alertSeverity != 1\\\" (click)=\\\"showFilteredAlert(sAlertType.selectedOption.value, 1)\\\" title=\\\"Minor : {{alertData.minor}}\\\"><div class=\\\"alert-counter minor\\\">{{alertData.minor}}</div><mat-icon class=\\\"alert-icon\\\">notifications</mat-icon></div>\\n    <div *ngIf=\\\"alertSeverity == 4\\\" class = \\\"selected-alert-type\\\" (click)=\\\"showFilteredAlert(sAlertType.selectedOption.value, 4)\\\" title=\\\"All : {{alertData.critical+ alertData.major + alertData.minor}}\\\"><div class=\\\"alert-counter all\\\">{{alertData.critical+ alertData.major + alertData.minor}}</div><mat-icon class=\\\"alert-icon\\\">notifications</mat-icon></div>\\n    <div *ngIf=\\\"alertSeverity != 4\\\" (click)=\\\"showFilteredAlert(sAlertType.selectedOption.value, 4)\\\" title=\\\"All : {{alertData.critical + alertData.major + alertData.minor}}\\\"><div class=\\\"alert-counter all\\\">{{alertData.critical + alertData.major + alertData.minor}}</div><mat-icon class=\\\"alert-icon\\\">notifications</mat-icon></div>\\n  </div>\\n</div>\\n<div class=\\\"ui-g-4 ui-md-2 ui-lg-3\\\">\\n  <div class=\\\"align-right inline-display pointer\\\">\\n    <div class = \\\"selected-alert-type\\\" (click)=\\\"showFilter()\\\" title=\\\"{{isShowFilter ? 'Hide' : 'Show'}} Filter\\\"><mat-icon >search</mat-icon></div>\\n    <div class = \\\"selected-alert-type\\\" (click)=\\\"resetData(sAlertType.selectedOption.value)\\\" title=\\\"Refresh\\\"><mat-icon >restore</mat-icon></div>\\n    <div class=\\\"display-label alrtlbl\\\">\\n      <label>Last Refresh Time </label>\\n      <span>{{time}}</span>\\n      <label> ago</label>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/top-pane/top-pane.component.html\n// module id = ../../../../../src/app/modules/alert/components/active-alert/top-pane/top-pane.component.html\n// module chunks = main","import { Component, OnInit, Input, EventEmitter, Output} from '@angular/core';\nimport { ALERT_TYPE } from \"../../../constants/alert-constant\";\nimport { IMAGE_PATH } from \"../../../constants/alert-constant\";\nimport { Timer } from \"../../../commons/timer\";\nimport { Observable } from 'rxjs/Rx';\nimport { Logger } from 'angular2-logger/core';\nimport { FilertProperty } from \"../../../interfaces/active-alert\";\nimport { ActiveAlertData } from '../../../commons/active-alert';\nimport { CommonServices } from '../../../services/common-services';\nimport { ActiveAlertService } from '../../../services/active-alert-services';\nimport * as CONS from '../../../constants/alert-constant';\n\n/* Used to create top panel in active alert window*/\n@Component({\n  selector: 'app-top-pane',\n  templateUrl: './top-pane.component.html',\n  styleUrls: ['./top-pane.component.css'],\n//inputs: ['alertData', 'alertSeverity'],\n})\n\n/*This calss is responsible for handling all the action performed in top panel of active alert*/  \nexport class TopPaneComponent implements OnInit\n{\n  //used to hold class name\n  className = \"TopPaneComponent\";\n\n\n  //used to hold product type\n  productType = \"netstorm\";\n  \n  //this is used to holds the alert types option available to display in alert type list\n  alertTypes: any;\n\n  //this flag is hold alert types option\n  isShowBehavior: boolean;\n\n  //this is used to store icon path\n  iconPath: string;\n\n  //This will used to get the last refresh time\n  timer: Timer;\n\n  //This will holds the last refresh time\n  time: string;\n\n  //value is used to show and hide alert filter\n  isShowFilter: boolean;\n\n  @Input()\n  alertSeverity: number;\n  \n  @Input()\n  alertData: ActiveAlertData;\n\n  //hold the flag for access controll\n  @Input()\n  isAccessPermission: boolean;\n\n\n  //this is custom event which is used to send selected alert type to parrent component  \n  @Output()\n  alertTypeChange = new EventEmitter<String>();  \n\n  //This is used to emit isShowFilter value to main panel\n  @Output()\n  showFilterEvent = new EventEmitter<boolean>();   \n\n  @Output()\n  showFilteredDataEvent = new EventEmitter<FilertProperty>();\n  \n  //constructor is ised to set default values  \n  constructor(private logger: Logger, public _commonServices: CommonServices, public _activeAlertService: ActiveAlertService) \n  { }\n  \n  ngOnInit()\n  { \n    try\n    {\n      \n      //setting product type\n      let ptype = this._commonServices.$productName;\n      if (ptype != null && ptype !== \"\")\n        this.productType = ptype;\n\n      //setting alert typs list\n      if (this.productType == 'netstorm' || this.productType == 'netcloud')\n        this.isShowBehavior = false;\n      else\n        this.isShowBehavior = true;\n\n      if (this.isShowBehavior)\n        this.alertTypes = ALERT_TYPE;\n      else\n        this.alertTypes = [{ icon: \"capacity\", label: \"Capacity\", value: 'Capacity', toolTip: \"Capacity Alert\" }];\n\n      this.logger.info(this.className, \"constructor\", \"productName = \" + this._commonServices.$productName + \", alertType = \" + this._activeAlertService.$alertType);\n\n      //setting icons paths\n      this.iconPath = IMAGE_PATH;\n\n      //this is used to get Timer class object\n      this.timer = new Timer();\n\n      //setting default value of show filter to false\n      this.isShowFilter = false;\n\n      //updating last refresh time in timer\n      Observable.interval(1000).subscribe(\n        x => this.getTime()\n      );\n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"ngOnInit\", e);\n    }\n    this._commonServices.setAlertTypeBehaviour(this._activeAlertService.$alertType, this._commonServices.getDcName());\n  }\n  //This will get time from timer class and update time in local variable\n  getTime()\n  { \n     this.time = this.timer.getTime();\n  }\n\n  //This will reset alert time and alert date after click on refresh  \n  resetData(alertType)\n  { \n    this.logger.debug(this.className, \"getAlertData\", \"going to get data for alert type = \", alertType);\n    \n    //updating selecte alert type to parent component\n    this.alertTypeChange.emit(alertType);\n    this._commonServices.setAlertTypeBehaviour(alertType, this._commonServices.getDcName());\n\n\n    //This will reset the last refresh timer value\n    this.timer.resetTime();\n  }\n  \n  //This method is used to get setAlertType to parrent component\n  getAlertData(alertType: string)\n  { \n    this.logger.debug(this.className, \"getAlertData\", \"going to get data for alert type = \", alertType);\n    \n    //updating selecte alert type to parent component\n    this.alertTypeChange.emit(alertType);\n    this._commonServices.setAlertTypeBehaviour(alertType, this._commonServices.getDcName());\n\n    //This will reset the last refresh timer value\n    this.timer.resetTime();\n  }\n\n  //Method is to set value on main component to show and hide filter in alert table  \n  showFilter()\n  {\n    this.isShowFilter = !this.isShowFilter;\n    this.showFilterEvent.emit(this.isShowFilter);\n\n    this.logger.info(this.className, \"showFilter\", \"isShowFilter = \", this.isShowFilter);\n  }\n\n  showFilteredAlert(alertType: string, severity: number)\n  { \n    let property: FilertProperty = {\n      alertType: alertType,\n      severity: severity\n    };\n\n    this.logger.info(this.className, \"showFilteredAlert\", \"alertType=\" + alertType + \",severity=\" + severity);\n    this.showFilteredDataEvent.emit(property);\n\n    //This will reset the last refresh timer value\n    this.timer.resetTime();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/active-alert/top-pane/top-pane.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".top-panel{\\r\\n  padding: 0.15em !important;\\r\\n}\\r\\n.table-body{\\r\\n  /*background-color: #4e8276;*/\\r\\n}\\r\\n.padding-left-none{\\r\\n  padding-left: 0em;\\r\\n}\\r\\n.left-panel{ \\r\\n  background: #F63;\\r\\n  overflow-y: auto;\\r\\n  height: 525px;;\\r\\n}\\r\\n\\r\\n.filter-table-pane\\r\\n{\\r\\n  width:100%;\\r\\n  height:200px;\\r\\n}\\r\\n.left-panel-width{\\r\\n  width:26%;\\r\\n}\\r\\n\\r\\n.top-panel {\\r\\n  background: rgba(19, 19, 19, 0.5);\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/alert-history-main/alert-history-main.component.css\n// module id = ../../../../../src/app/modules/alert/components/alert-history/alert-history-main/alert-history-main.component.css\n// module chunks = main","module.exports = \"<p-growl [value]=\\\"historyServices.messages\\\" [life]=5000></p-growl>\\n<p-dialog [(visible)]=\\\"historyServices.commonServices.displayDialog\\\" modal=\\\"modal\\\" width=\\\"400\\\" responsive=\\\"true\\\" draggable=\\\"false\\\" resizable=\\\"false\\\"\\n  minWidth=\\\"200\\\" minHeight=\\\"100\\\" height=\\\"auto\\\" [showHeader]=\\\"false\\\">\\n  <p>{{historyServices.commonServices.dialogMessage}}</p>\\n  <p-progressBar [value]=\\\"historyServices.commonServices.progressValue\\\"></p-progressBar>\\n</p-dialog>\\n\\n<div class=\\\"ui-g\\\">\\n    <app-history-top-pane class=\\\"ui-g-12 ui-md-12 ui-lg-12 top-panel\\\">\\n    </app-history-top-pane>\\n    <div class=\\\"ui-g-12 ui-md-12 ui-lg-12 table-body\\\">\\n      <mat-sidenav-container class=\\\"example-sidenav-fab-container\\\"  [style.height.px] =\\\"bottomPanHeight\\\">\\n        <!--<button *ngIf=\\\"filterStatus\\\" pButton icon=\\\"fa fa-filter\\\" iconPos=\\\"left\\\"  title=\\\"Show Filters\\\" tooltipPosition=\\\"right\\\" (click)=\\\"historyNavSideBar.toggle(); filterDisplayStatus()\\\"></button>-->\\n        <!--<button *ngIf=\\\"!filterStatus\\\" pButton icon=\\\"fa fa-filter\\\" iconPos=\\\"left\\\"  title=\\\"Hide Filters\\\" tooltipPosition=\\\"right\\\" (click)=\\\"historyNavSideBar.toggle(); filterDisplayStatus()\\\"></button>-->\\n        <mat-sidenav #historyNavSideBar mode=\\\"side\\\" opened=\\\"true\\\" class=\\\"left-panel-width\\\">\\n          <app-history-left-pane class = \\\"history-left-pane\\\">\\n            \\n          </app-history-left-pane>\\n        </mat-sidenav>\\n        <!--<button md-mini-fab class=\\\"example-fab\\\" (click)=\\\"sidenav.toggle()\\\">\\n          <md-icon>add</md-icon>\\n        </button>-->\\n        <app-history-table-pane>\\n          <div>dolor sit amet, pede a libero aenean phasellus, lectus metus sint ut risus,\\n              fusce vel in pellentesque. Nisl rutrum etiam morbi consectetuer tempor magna, aenean nullam\\n              nunc id, neque vivamus interdum sociis nulla scelerisque sem, dolor id wisi turpis.\\n            </div>\\n        </app-history-table-pane>\\n      </mat-sidenav-container>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/alert-history-main/alert-history-main.component.html\n// module id = ../../../../../src/app/modules/alert/components/alert-history/alert-history-main/alert-history-main.component.html\n// module chunks = main","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { HistoryServices } from '../../../services/alert-history-services';\nimport {MatSidenav} from '@angular/material';\n@Component({\n  selector: 'app-alert-history-main',\n  templateUrl: './alert-history-main.component.html',\n  styleUrls: ['./alert-history-main.component.css']\n})\nexport class AlertHistoryMainComponent implements OnInit\n{\n  filterStatus: boolean;\n  bottomPanHeight: number;\n  @ViewChild('historyNavSideBar') menuSideNav: MatSidenav;\n\n  constructor(public historyServices: HistoryServices)\n  {\n    this.filterStatus = false;\n    this.bottomPanHeight = window.innerHeight - 102;\n    historyServices.leftAndTablePanelheight = this.bottomPanHeight;\n  }\n\n  ngOnInit()\n  {\n    console.log(window.innerHeight, this.bottomPanHeight);\n    //subscribe alertHistory service to apply row grouping in history table\n    this.historyServices.showFilterPanel$.subscribe(\n      res =>\n      {\n        if(res)\n          this.menuSideNav.open();\n        else\n          this.menuSideNav.close();\n      }\n    );\n\n  }\n\n  filterDisplayStatus()\n  {\n      this.filterStatus = !this.filterStatus;  \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/alert-history-main/alert-history-main.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".actio-buttons{\\r\\n  float:right;\\r\\n  position:absolute;\\r\\n  bottom:5px;\\r\\n  right:5px;\\r\\n}\\r\\n\\r\\n.actio-buttons::after{\\r\\n  float: none\\r\\n}\\r\\n\\r\\n.filters-container\\r\\n{\\r\\n  overflow: auto;\\r\\n}\\r\\n.accordion-padding\\r\\n{\\r\\n  padding: 0.5em 0.0em 0.0em 0.5em !important; \\r\\n}\\r\\n.padding-bottom\\r\\n{\\r\\n  padding-bottom: 5px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-left-pane/history-left-pane.component.css\n// module id = ../../../../../src/app/modules/alert/components/alert-history/history-left-pane/history-left-pane.component.css\n// module chunks = main","module.exports = \"<div class=\\\"filters-container\\\" [style.height.px]=\\\"panelHeight\\\">\\n  <p-accordion [multiple]=\\\"true\\\">\\n    <p-accordionTab header=\\\"Time Filter\\\" [selected]=\\\"true\\\">\\n      <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad historyleftpane\\\">\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-6\\\">\\n            <div class=\\\"ui-grid-col-4\\\">\\n              Presets\\n            </div>\\n            <div class=\\\"ui-grid-col-8\\\">\\n              <p-dropdown [options]=\\\"presets\\\" [(ngModel)]=\\\"selectedPreset\\\" (onChange)=\\\"changePreset($event)\\\">\\n                <ng-template let-preset pTemplate=\\\"item\\\">\\n                  <!--<div title=\\\"{{preset.toolTip}}\\\">{{preset.label}}</div>-->\\n                  <div title=\\\"{{preset.value}}\\\">{{preset.value}}</div>\\n                </ng-template>\\n              </p-dropdown>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"selectedPreset == 'Custom'\\\" class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-6\\\">\\n            <div class=\\\"ui-grid-col-4\\\">\\n              From\\n            </div>\\n            <div class=\\\"ui-grid-col-8 history-calendar\\\">\\n              <p-calendar [(ngModel)]=\\\"fromDate\\\"[showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [showSeconds]=\\\"true\\\" dateFormat=\\\"mm/dd/yy\\\" showTime=\\\"true\\\" hourFormat=\\\"24\\\" [defaultDate]=\\\"fromDatecal\\\" (value)=\\\"03/16/2017\\\"></p-calendar>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"selectedPreset == 'Custom'\\\" class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-6\\\">\\n            <div class=\\\"ui-grid-col-4\\\">\\n              To\\n            </div>\\n            <div class=\\\"ui-grid-col-8 history-calendar\\\">\\n              <p-calendar [(ngModel)]=\\\"toDate\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\"  [showSeconds]=\\\"true\\\" dateFormat=\\\"mm/dd/yy\\\" showTime=\\\"true\\\" hourFormat=\\\"24\\\" [defaultDate]=\\\"fromDatecal\\\"></p-calendar>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"selectedPreset == 'Last 7 Days'|| selectedPreset == 'Last 30 Days' || selectedPreset == 'Last 90 Days'\\\" class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-toggleButton [(ngModel)]=\\\"isIncCurrData\\\" onLabel=\\\"{{lblItIncCurData}}\\\" offLabel=\\\"{{lblItIncCurData}}\\\" onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n          </div>\\n        </div>\\n      </div>\\n    </p-accordionTab>\\n    <p-accordionTab class=\\\"alertSeverity\\\" header=\\\"Alert Severity\\\">\\n      <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad\\\">\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-fieldset title=\\\"{{lblNewAlert}}\\\" legend={{lblNewAlert}}>\\n\\t\\t\\t <div class=\\\"ui-grid-row padding-bottom\\\">\\n              <p-toggleButton [(ngModel)]=\\\"isCriticalNew\\\" title={{lblCriticalNew}} onLabel={{lblCriticalNew}} offLabel={{lblCriticalNew}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              <p-toggleButton [(ngModel)]=\\\"isMajorNew\\\" title={{lblMajorNew}} onLabel={{lblMajorNew}} offLabel={{lblMajorNew}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              <p-toggleButton [(ngModel)]=\\\"isMinorNew\\\" title={{lblMinorNew}} onLabel={{lblMinorNew}} offLabel={{lblMinorNew}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n\\t\\t    </div>\\n\\t\\t    <div class=\\\"ui-grid-row padding-bottom\\\">\\n               <p-toggleButton [(ngModel)]=\\\"isNormalNew\\\" title={{lblNormalNew}} onLabel={{lblNormalNew}} offLabel={{lblNormalNew}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n            </div>\\n            </p-fieldset>\\n          </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-fieldset title={{lblContinuesAlert}} legend={{lblContinuesAlert}}>\\n              <p-toggleButton [(ngModel)]=\\\"isCriticalContinues\\\" title={{lblCriticalContinues}} onLabel={{lblCriticalContinues}} offLabel={{lblCriticalContinues}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              <p-toggleButton [(ngModel)]=\\\"isMajorContinues\\\" title={{lblMajorContinues}} onLabel={{lblMajorContinues}} offLabel={{lblMajorContinues}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              <p-toggleButton [(ngModel)]=\\\"isMinorContinues\\\" title={{lblMinorContinues}} onLabel={{lblMinorContinues}} offLabel={{lblMinorContinues}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n            </p-fieldset>\\n          </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-fieldset title={{lblEndedAlert}} legend={{lblEndedAlert}}>\\n              <p-toggleButton [(ngModel)]=\\\"isCriticalEnded\\\" title={{lblCriticalEnded}} onLabel={{lblCriticalEnded}} offLabel={{lblCriticalEnded}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              <p-toggleButton [(ngModel)]=\\\"isMajorEnded\\\" title={{lblMajorEnded}} onLabel={{lblMajorEnded}} offLabel={{lblMajorEnded}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              <p-toggleButton [(ngModel)]=\\\"isMinorEnded\\\" title={{lblMinorEnded}} onLabel={{lblMinorEnded}} offLabel={{lblMinorEnded}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n            </p-fieldset>\\n          </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-fieldset title={{lblUpgradedAlert}} legend={{lblUpgradedAlert}}>\\n              <div class=\\\"ui-grid-row padding-bottom\\\">\\n                <p-toggleButton [(ngModel)]=\\\"isMinorToMajorUp\\\" title={{lblMinorToMajorUp}} onLabel={{lblMinorToMajorUp}} offLabel={{lblMinorToMajorUp}} onIcon=\\\"fa-check-square\\\"\\n                  offIcon=\\\"fa-square\\\"></p-toggleButton>\\n                <p-toggleButton [(ngModel)]=\\\"isMinorToCriticalUp\\\" title={{lblMinorToCriticalUp}} onLabel={{lblMinorToCriticalUp}} offLabel={{lblMinorToCriticalUp}} onIcon=\\\"fa-check-square\\\"\\n                  offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              </div>\\n              <div class=\\\"ui-grid-row padding-bottom\\\">\\n                <p-toggleButton [(ngModel)]=\\\"isMajorToCriticalUp\\\" title={{lblMajorToCriticalUp}} onLabel={{lblMajorToCriticalUp}} offLabel={{lblMajorToCriticalUp}} onIcon=\\\"fa-check-square\\\"\\n                  offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              </div>\\n            </p-fieldset>\\n          </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-fieldset title={{lblDowngradedAlert}} legend={{lblDowngradedAlert}}>\\n              <div class=\\\"ui-grid-row padding-bottom\\\">\\n                <p-toggleButton [(ngModel)]=\\\"isCriticalToMajorDown\\\" title={{lblCriticalToMajorDown}} onLabel={{lblCriticalToMajorDown}} offLabel={{lblCriticalToMajorDown}} onIcon=\\\"fa-check-square\\\"\\n                  offIcon=\\\"fa-square\\\"></p-toggleButton>\\n                <p-toggleButton [(ngModel)]=\\\"isCriticalToMinorDown\\\" title={{lblCriticalToMinorDown}} onLabel={{lblCriticalToMinorDown}} offLabel={{lblCriticalToMinorDown}} onIcon=\\\"fa-check-square\\\"\\n                  offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              </div>\\n              <div class=\\\"ui-grid-row\\\">\\n                <p-toggleButton [(ngModel)]=\\\"isMajorToMinorDown\\\" title={{lblMajorToMinorDown}} onLabel={{lblMajorToMinorDown}} offLabel={{lblMajorToMinorDown}} onIcon=\\\"fa-check-square\\\"\\n                  offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              </div>\\n            </p-fieldset>\\n          </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-fieldset title={{lblClearedAlert}} legend={{lblClearedAlert}}>\\n              <div class=\\\"ui-grid-row padding-bottom\\\">\\n                <p-toggleButton [(ngModel)]=\\\"isForceClear\\\" title={{lblForceClear}} onLabel={{lblForceClear}} offLabel={{lblForceClear}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              </div>\\n              <div class=\\\"ui-grid-row\\\">\\n                <p-toggleButton [(ngModel)]=\\\"isClearDueToRuleChange\\\" title={{lblClearDueToRuleChange}} onLabel={{lblClearDueToRuleChange}} offLabel={{lblClearDueToRuleChange}}\\n                  onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n              </div>\\n            </p-fieldset>\\n          </div>\\n        </div>\\n      </div>\\n    </p-accordionTab>\\n    <p-accordionTab header=\\\"Alert Type\\\">\\n      <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad\\\">\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-toggleButton *ngIf=\\\"isShowBehavior\\\" [(ngModel)]=\\\"isAllAlertType\\\" title={{lblAllAlertType}} onLabel={{lblAllAlertType}} offLabel={{lblAllAlertType}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\" (click)=\\\"selectAllAlertType()\\\"></p-toggleButton>\\n            <p-toggleButton [(ngModel)]=\\\"isCapacityAlertType\\\" title={{lblCapacityAlertType}} onLabel={{lblCapacityAlertType}} offLabel={{lblCapacityAlertType}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"\\n              (click)=\\\"selectAlertType()\\\"></p-toggleButton>\\n            <p-toggleButton *ngIf=\\\"isShowBehavior\\\" [(ngModel)]=\\\"isBehaviorAlertType\\\" title={{lblBehaviorAlertType}} onLabel={{lblBehaviorAlertType}} offLabel={{lblBehaviorAlertType}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"\\n              (click)=\\\"selectAlertType()\\\"></p-toggleButton>\\n            <p-toggleButton [(ngModel)]=\\\"isOtherAlertType\\\" title={{lblOtherAlertType}} onLabel={{lblOtherAlertType}} offLabel={{lblOtherAlertType}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"\\n              (click)=\\\"selectAlertType()\\\"></p-toggleButton>\\n          </div>\\n        </div>\\n      </div>\\n    </p-accordionTab>\\n    <p-accordionTab header=\\\"Alert Rules\\\">\\n      <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad\\\">\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-2\\\">\\n            Rules\\n          </div>\\n          <div class=\\\"ui-grid-col-10 accordion-padding\\\">\\n            <p-multiSelect class=\\\"selectRule\\\" #rule [options]=\\\"rules\\\" [(ngModel)]=\\\"selectedRules\\\" (onChange)=\\\"onSelectAlertRule(rule)\\\">\\n              <ng-template let-rule title=\\\"item\\\" pTemplate=\\\"item\\\">\\n                <!--<div title=\\\"{{preset.toolTip}}\\\">{{preset.label}}</div>-->\\n                <div title=\\\"{{rule}}\\\">{{rule}}</div>\\n              </ng-template>\\n            </p-multiSelect>\\n          </div>\\n        </div>\\n      </div>\\n    </p-accordionTab>\\n    <p-accordionTab header=\\\"String Filter\\\">\\n      <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad\\\">\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-3\\\">\\n            Field\\n          </div>\\n          <div class=\\\"ui-grid-col-9\\\">\\n            <p-dropdown class=\\\"select-topology\\\" [options]=\\\"strFilterFieldList\\\" [(ngModel)]=\\\"selectedStrFilterField\\\">\\n              <ng-template let-field pTemplate=\\\"item\\\">\\n                <!--<div title=\\\"{{preset.toolTip}}\\\">{{preset.label}}</div>-->\\n                <div title=\\\"{{field.value}}\\\">{{field.value}}</div>\\n              </ng-template>\\n            </p-dropdown>\\n          </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\" *ngIf=\\\"selectedStrFilterField != 'Select Field'\\\">\\n          <div class=\\\"ui-grid-col-3\\\">\\n            Search String\\n          </div>\\n          <div class=\\\"ui-grid-col-9\\\">\\n            <input title=\\\"Search String\\\" type=\\\"text\\\" pInputText [(ngModel)]=\\\"stringFilter\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </p-accordionTab>\\n    <p-accordionTab header=\\\"Topology Filter\\\">\\n    <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad\\\">\\n      <div class=\\\"ui-grid-row\\\">\\n        <div class=\\\"ui-grid-col-4\\\">\\n          {{lblTierFilter}}\\n        </div>\\n        <div class=\\\"ui-grid-col-8 accordion-padding\\\">\\n          <input title=\\\"{{lblTierFilter}}\\\" type=\\\"text\\\" pInputText [(ngModel)]=\\\"tierFilter\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"ui-grid-row\\\">\\n        <div class=\\\"ui-grid-col-4\\\">\\n          {{lblServerFilter}}\\n        </div>\\n        <div class=\\\"ui-grid-col-8 accordion-padding\\\">\\n          <input title=\\\"{{lblServerFilter}}\\\" type=\\\"text\\\" pInputText [(ngModel)]=\\\"serverFilter\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"ui-grid-row\\\">\\n        <div class=\\\"ui-grid-col-4\\\">\\n          {{lblInstanceFilter}}\\n        </div>\\n        <div class=\\\"ui-grid-col-8 accordion-padding\\\">\\n          <input title=\\\"{{lblInstanceFilter}}\\\" type=\\\"text\\\" pInputText [(ngModel)]=\\\"instanceFilter\\\" />\\n        </div>\\n      </div>\\n    </div>\\n  </p-accordionTab>\\n  <p-accordionTab header=\\\"Other\\\">\\n      <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad\\\">\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-toggleButton [(ngModel)]=\\\"isRuleChanges\\\" title={{lblRuleChanges}} onLabel={{lblRuleChanges}} offLabel={{lblRuleChanges}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n          </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\" *ngIf=\\\"isShowBehavior\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-toggleButton [(ngModel)]=\\\"isBaselineChanges\\\" title={{lblBaselineChanges}} onLabel={{lblBaselineChanges}} offLabel={{lblBaselineChanges}} onIcon=\\\"fa-check-square\\\"\\n              offIcon=\\\"fa-square\\\"></p-toggleButton>\\n          </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-toggleButton [(ngModel)]=\\\"isAlertSettingChanges\\\" title={{lblAlertSettingChanges}} onLabel={{lblAlertSettingChanges}} offLabel={{lblAlertSettingChanges}} onIcon=\\\"fa-check-square\\\"\\n              offIcon=\\\"fa-square\\\"></p-toggleButton>\\n          </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\" *ngIf=\\\"isShowBehavior\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-toggleButton [(ngModel)]=\\\"isAlertMaintenanceWindowChanges\\\" title={{lblAlertMaintenanceWindowChanges}} onLabel={{lblAlertMaintenanceWindowChanges}} offLabel={{lblAlertMaintenanceWindowChanges}} onIcon=\\\"fa-check-square\\\"\\n              offIcon=\\\"fa-square\\\"></p-toggleButton>\\n          </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n          <div class=\\\"ui-grid-col-12 accordion-padding\\\">\\n            <p-toggleButton [(ngModel)]=\\\"isTomcatRestart\\\" title={{lblTomcatRestart}} onLabel={{lblTomcatRestart}} offLabel={{lblTomcatRestart}} onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\"></p-toggleButton>\\n          </div>\\n        </div>\\n      </div>\\n    </p-accordionTab>\\n  </p-accordion>\\n</div>\\n<div class=\\\"actio-buttons\\\">\\n  <button pButton icon=\\\"fa fa-check\\\" iconPos=\\\"left\\\" title=\\\"Apply Filters\\\" label=\\\"Apply\\\" (click)=\\\"applyFilters(false)\\\"></button>\\n  <button pButton icon=\\\"fa fa-undo\\\" iconPos=\\\"left\\\" title=\\\"Reset Filters\\\" label=\\\"Reset\\\" (click)=\\\"resetFilter()\\\"></button>\\n  <button pButton icon=\\\"fa fa-filter\\\" iconPos=\\\"left\\\" title=\\\"Clear All Filters\\\" label=\\\"Clear All\\\" (click)=\\\"setAllFilter(false)\\\"></button>\\n  <button pButton icon=\\\"fa fa-filter\\\" iconPos=\\\"left\\\" title=\\\"Select All Filters\\\" label=\\\"Select All\\\" (click)=\\\"setAllFilter(true)\\\"></button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-left-pane/history-left-pane.component.html\n// module id = ../../../../../src/app/modules/alert/components/alert-history/history-left-pane/history-left-pane.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { SelectItem } from 'primeng/primeng';\nimport * as CONS from \"../../../constants/alert-constant\";\nimport { AlertPreset } from \"../../../interfaces/active-alert\";\nimport { HistoryServices } from '../../../services/alert-history-services';\nimport { CommonServices } from '../../../services/common-services';\nimport { HistoryFilters } from \"../../../commons/history-filters\";\nimport { AlertSeverityFilter } from \"../../../commons/history-filters\";\nimport { AlertHistoryData } from \"../../../commons/history-data\";\nimport { Logger } from \"angular2-logger/core\";\nimport * as moment from 'moment'\n@Component({\n  selector: 'app-history-left-pane',\n  templateUrl: './history-left-pane.component.html',\n  styleUrls: ['./history-left-pane.component.css']\n})\nexport class HistoryLeftPaneComponent implements OnInit\n{\n  className = \"HistoryLeftPaneComponent\";\n   \n  //this is used to store all the presets for dropdown\n  presets: AlertPreset[];\n\n  //this flag use for netstorm and netcloud\n  isShowBehavior: boolean;\n  \n  //used to store time zone\n  timeZone: string;\n\n  //used to access image icons\n  imagePath: string;\n  \n  //AlertRules \n  rules: SelectItem[];\n\n  //this is used to check all rules are selected or not\n  isAllRuleSelected: boolean;\n\n  //this is used to store producttype\n  productType: string;\n\n  //this stores the panel height of left and table panel\n  panelHeight: number;\n\n  /*These are used to store filter filterData*/\n  //this is used to hold selected time period to apply filter\n  selectedPreset: any;\n  \n  //this will store start date if custom filter is selected\n  fromDate: Date = null;\n  fromDatecal: Date=new Date();\n  //this will store end date if custom filter is selected\n  toDate: Date = null;\n\n  //These are used to handle current day data is included or not  \n  currDayData: boolean;\n  isIncCurrData: boolean;\n  /* Filters header */\n  lblNewAlert: string;\n  lblContinuesAlert: string;\n  lblEndedAlert: string;\n  lblUpgradedAlert: string;\n  lblDowngradedAlert: string;\n  lblClearedAlert: string;\n  \n  /* New Alerts */\n  lblCriticalNew: string;\n  lblMajorNew: string;\n  lblMinorNew: string;\n  lblNormalNew: string;\n  isCriticalNew: boolean;\n  isMajorNew: boolean;\n  isMinorNew: boolean;\n  isNormalNew: boolean;\n\n  /* Continuous Alert */\n  lblCriticalContinues: string;\n  lblMajorContinues: string;\n  lblMinorContinues: string;\n  isCriticalContinues: boolean;\n  isMajorContinues: boolean;\n  isMinorContinues: boolean;\n\n  /* Ended Alert */\n  lblCriticalEnded: string;\n  lblMajorEnded: string;\n  lblMinorEnded: string;\n  isCriticalEnded: boolean;\n  isMajorEnded: boolean;\n  isMinorEnded: boolean;\n\n  /* Upgraded Alert*/\n  lblMinorToMajorUp: string;\n  lblMinorToCriticalUp: string;\n  lblMajorToCriticalUp: string;\n  isMinorToMajorUp: boolean;\n  isMinorToCriticalUp: boolean;\n  isMajorToCriticalUp: boolean;\n\n  /* Downgraded Alert */\n  lblCriticalToMajorDown: string;\n  lblCriticalToMinorDown: string;\n  lblMajorToMinorDown: string;\n  isCriticalToMajorDown: boolean;\n  isCriticalToMinorDown: boolean;\n  isMajorToMinorDown: boolean;\n\n  /* Force Clear Alert*/\n  lblForceClear: string;\n  isForceClear: boolean;\n\n  /* Clear Alert Due to rule changes */\n  lblClearDueToRuleChange: string;\n  isClearDueToRuleChange: boolean;\n\n  /* Alert Type */\n  lblAllAlertType: string;\n  lblCapacityAlertType: string;\n  lblBehaviorAlertType: string;\n  lblOtherAlertType:string;\n  isAllAlertType = false;\n  isCapacityAlertType: boolean;\n  isBehaviorAlertType: boolean;\n  isOtherAlertType: boolean;\n\n  /* Selected Rules */\n  selectedRules: string[];\n  \n  /* Advance Filter */\n  lblRuleChanges: string;\n  lblBaselineChanges: string;\n  lblAlertSettingChanges: string;\n  lblAlertMaintenanceWindowChanges: string;\n  lblTomcatRestart: string;\n  isRuleChanges: boolean;\n  isBaselineChanges: boolean;\n  isAlertSettingChanges: boolean;\n  isAlertMaintenanceWindowChanges: boolean;\n  isTomcatRestart: boolean;\n\n  /* Topology Filters */\n  lblTierFilter: string;\n  lblServerFilter: string;\n  lblInstanceFilter: string;\n\n  tierFilter: string;\n  serverFilter: string;\n  instanceFilter: string;\n\n  /* String Filter */\n  //this is used to store selected Field name\n  strFilterFieldList: SelectItem[];\n  selectedStrFilterField: string;\n  stringFilter: string;\n  lblItIncCurData = \"include Current Data\";\n  \n /*used to select preset default applied preset*/\n  defaultPresetIdx = 4;  \n  constructor(private logger: Logger, private historyServices: HistoryServices, private _commonServices: CommonServices)\n  { \n    try\n    {\n      this.historyServices.getTimeZoneAndRuleNames();\n      //setting product type    \n      this.productType = historyServices.$commonServices.$productName;\n      \n  \n      if (this.productType == 'netstorm' || this.productType == 'netcloud')\n        this.isShowBehavior = false;\n      else\n        this.isShowBehavior = true;\n\n      if (this.isShowBehavior)\n      {\n        this.presets = CONS.ALERT_PRESETS; \n        this.defaultPresetIdx = this.getPresetIndex();\n      }\n      else\n      {\n        this.presets = CONS.ALERT_PRESETS_NS;  \n        this.defaultPresetIdx = this.getPresetIndex();\n      }\n\n      /*Initializing filtered filterData*/\n      this.selectedPreset = this.presets[this.defaultPresetIdx].value;\n      this.logger.info(this.className, \" constructor \", \" selectedPreset = \" + this.selectedPreset, \" toDate = \", this.toDate, \" fromDate = \" + this.fromDate);\n      this.fromDatecal = new Date();\n      this.currDayData = false;\n      this.isIncCurrData = false;\n\n      //setting alert icons path\n      this.imagePath = CONS.IMAGE_PATH;\n      this.rules = [];\n      this.selectedRules = [];\n\n      //setting string search field list to show in selectBox    \n      this.getStringSearchFieldLists();\n      this.selectedStrFilterField = this.strFilterFieldList[0].label;\n\n      this.panelHeight = historyServices.leftAndTablePanelheight - 32;\n\n      //setting topology lebel on the basis of product type\n      this.lblTierFilter = \"Tier\";\n      this.lblServerFilter = \"Server\";\n      this.lblInstanceFilter = \"Instance\";\n\n      if (this.productType === \"netvision\")\n      {\n        this.lblTierFilter = CONS.COL_INDICES + \" 1\";\n        this.lblServerFilter = CONS.COL_INDICES + \" 2\";\n        this.lblInstanceFilter = CONS.COL_INDICES + \" 3\";\n      }\n    }\n    catch(e)\n    { \n      this.logger.error(this.className, \"constructor\", \"Exception - \", e)\n    }\n  }\n\n  /*This method will return the preset index in list*/\n  getPresetIndex(): number\n  {\n    let idx;\n    this.presets.forEach((element, index) =>\n    {\n      if (element.value === this._commonServices.$graphTimeLabel)\n      {\n        if (element.value ==  CONS.PRESET.LAST_4_HOURS && (this._commonServices.$productName.toLowerCase() === \"netstorm\" || this._commonServices.$productName.toLowerCase() === \"netcloud\"))\n          idx = 8; \n        else\n          idx = index;\n      }\n    });\n    return idx;\n  }\n\n  ngOnInit()\n  {\n    try\n    {\n      \n      let historyData: AlertHistoryData = new AlertHistoryData();\n\n      //this is used to reset UI buttons label. This is only needed at first time loading.\n      this.setFilterCounter(historyData);\n\n      this.historyServices.historyData$.subscribe(\n        res =>\n        {\n          historyData = res;\n          this.setFilterCounter(historyData);\n        }\n      );\n    \n      this.getRuleNames();\n\n      //subscribe for call from download\n      this.historyServices.callFromDownload$.subscribe(\n        res =>\n        {\n          this.applyFilters(res);\n        }\n      );\n      \n      /* Setting timezone */\n      this.historyServices.serverTimeZone$.subscribe(\n        response =>\n        {\n          this.timeZone = response;\n          console.log(\"timeZone == \" + this.timeZone);\n        });\n      \n      /* Setting default filters*/\n      this.setDefaultFilter();\n      \n      if(this._commonServices.selectedAlertIds != undefined && this._commonServices.selectedAlertIds != \"\")\n      {\n        this.openHistoryFromActive(this._commonServices.selectedAlertIds)\n        this._commonServices.selectedAlertIds = \"\";\n      }\n      else\n      {\n        /* Applying default filters to populate data in table */\n        this.applyFilters(false);\n      }\n\n    }\n    catch(e)\n    {\n      this.logger.error(this.className, \"ngOnInit\", \"Exception - \", e);\n    }\n  }\n  \n  /** This method is used to set filterdata to open alert history wrt alert Id's from active alert */\n  openHistoryFromActive(selectedAlertIds: string)\n  {\n    this.logger.info(this.className, \" openHistoryFromActive \", \" selectedAlertIds = \" ,selectedAlertIds, \" selectedPreset = \" + this.selectedPreset);\n    /* Continuous Alert */\n    this.isCriticalContinues = true;\n    this.isMajorContinues = true;\n    this.isMinorContinues = true;\n\n    /* Upgraded Alert*/\n    this.isMinorToMajorUp = true;\n    this.isMinorToCriticalUp = true;\n    this.isMajorToCriticalUp = true;\n\n    /* Downgraded Alert */\n    this.isCriticalToMajorDown = true;\n    this.isCriticalToMinorDown = true;\n    this.isMajorToMinorDown = true;\n\n    let filterData: HistoryFilters = new HistoryFilters();\n    filterData.testRun = this.historyServices.$commonServices.$testRunNum+\"\";\n    filterData.selectedAlertId = selectedAlertIds;\n    if(this.selectedPreset == CONS.PRESET.CUSTOM)\n    {\n      filterData.preset = this.selectedPreset;\n      filterData.lastTimeStamp = 2;\n      filterData.fromTimeStamp = moment(this.fromDate).format('MM/DD/YYYY HH:mm:ss');\n      filterData.toTimeStamp = moment(this.toDate).format('MM/DD/YYYY HH:mm:ss');\n    }\n    else\n    {\n      filterData.preset = this.selectedPreset;\n      filterData.lastTimeStamp = 1;  \n    }\n    this.historyServices.$commonServices.showProgressBar(\"Getting data from server, Please wait...\"); \n    this.historyServices.getHistoryfilterData(filterData);\n  }\n\n  /** This method is used to set all the field list for string filter */\n  getStringSearchFieldLists()\n  { \n    try\n    {\n      this.strFilterFieldList = [];\n      this.strFilterFieldList.push({ label: 'Select Field', value: 'Select Field' });\n      this.strFilterFieldList.push({ label: CONS.HISTORY_STRING_FILTERS.RULE_NAME, value: CONS.HISTORY_STRING_FILTERS.RULE_NAME });\n      if(this.isShowBehavior)\n        this.strFilterFieldList.push({ label: CONS.HISTORY_STRING_FILTERS.BASELINE_NAME, value: CONS.HISTORY_STRING_FILTERS.BASELINE_NAME });\n      this.strFilterFieldList.push({ label: CONS.HISTORY_STRING_FILTERS.MESSAGE, value: CONS.HISTORY_STRING_FILTERS.MESSAGE });\n    }\n    catch (e)\n    {\n      this.logger.error(this.className, \"getStringSearchFieldLists\", \"Exception - \", e);\n    }\n  }\n\n  setFilterCounter(historyData: AlertHistoryData)\n  { \n    try\n    {\n      if (this.isCriticalNew || this.isMajorNew || this.isMinorNew)\n        this.lblNewAlert = \"New Alerts (\" + (historyData.newCriCtr + historyData.newMajCtr + historyData.newMinCtr + historyData.newNorCtr) + \")\";\n      else\n        this.lblNewAlert = \"New Alerts\";\n      \n      if (this.isCriticalContinues || this.isMajorContinues || this.isMinorContinues)\n        this.lblContinuesAlert = \"Continues Alerts (\" + (historyData.contiCriCtr + historyData.contiMajorCtr + historyData.contiMinorCtr) + \")\";\n      else\n        this.lblContinuesAlert = \"Continues Alerts\";\n      \n      if (this.isCriticalEnded || this.isMajorEnded || this.isMinorEnded)\n        this.lblEndedAlert = \"Ended Alerts (\" + (historyData.endCriCtr + historyData.endMajCtr + historyData.endMinCtr) + \")\";\n      else\n        this.lblEndedAlert = \"Ended Alerts\";\n      \n      if (this.isMinorToMajorUp || this.isMinorToCriticalUp || this.isMajorToCriticalUp)\n        this.lblUpgradedAlert = \"Upgraded Alerts (\" + (historyData.upMinMajCtr + historyData.upMinCriCtr + historyData.upMajCriCtr) + \")\";\n      else\n        this.lblUpgradedAlert = \"Upgraded Alerts\";\n      \n      if (this.isCriticalToMajorDown || this.isCriticalToMinorDown || this.isMajorToMinorDown)\n        this.lblDowngradedAlert = \"Downgraded Alerts (\" + (historyData.downCriMajCtr + historyData.downCriMinCtr + historyData.downMajMinCtr) + \")\";\n      else\n        this.lblDowngradedAlert = \"Downgraded Alerts\";\n      \n      if (this.isForceClear || this.isClearDueToRuleChange)\n        this.lblClearedAlert = \"Cleared Alerts (\" + (historyData.forceClearCtr + historyData.clearRuleChCtr) + \")\";\n      else\n        this.lblClearedAlert = \"Cleared Alerts\";\n      \n      if(this.isCriticalNew)\n        this.lblCriticalNew = \"Critical (\" + historyData.newCriCtr + \")\";\n      else\n        this.lblCriticalNew = \"Critical\";\n      \n      if (this.isMajorNew)\n        this.lblMajorNew = \"Major (\" + historyData.newMajCtr + \")\";\n      else\n        this.lblMajorNew = \"Major\";\n      \n      if (this.isMinorNew)\n        this.lblMinorNew = \"Minor (\" + historyData.newMinCtr + \")\";\n      else\n        this.lblMinorNew = \"Minor\";\n\t\n\t  if (this.isNormalNew)\n        this.lblNormalNew = \"Normal (\" + historyData.newNorCtr + \")\";\n      else\n        this.lblNormalNew = \"Normal\";\n      \n      if (this.isCriticalContinues)\n        this.lblCriticalContinues = \"Critical (\" + historyData.contiCriCtr + \")\";\n      else\n        this.lblCriticalContinues = \"Critical\"; \n      \n      if (this.isMajorContinues)\n        this.lblMajorContinues = \"Major (\" + historyData.contiMajorCtr + \")\";\n      else\n        this.lblMajorContinues = \"Major\";\n      \n      if (this.isMinorContinues)\n        this.lblMinorContinues = \"Minor (\" + historyData.contiMinorCtr + \")\";\n      else\n        this.lblMinorContinues = \"Minor\";\n      \n      if (this.isCriticalEnded)\n        this.lblCriticalEnded = \"Critical (\" + historyData.endCriCtr + \")\";\n      else\n        this.lblCriticalEnded = \"Critical\";\n      \n      if (this.isMajorEnded)\n        this.lblMajorEnded = \"Major (\" + historyData.endMajCtr + \")\";\n      else\n        this.lblMajorEnded = \"Major\";\n      \n      if (this.isMinorEnded)\n        this.lblMinorEnded = \"Minor (\" + historyData.endMinCtr + \")\";\n      else\n        this.lblMinorEnded = \"Minor\";\n      \n      if (this.isMinorToMajorUp)\n        this.lblMinorToMajorUp = \"Minor to Major (\" + historyData.upMinMajCtr + \")\";\n      else\n        this.lblMinorToMajorUp = \"Minor to Major\";\n      \n      if (this.isMinorToCriticalUp)\n        this.lblMinorToCriticalUp = \"Minor to Critical (\" + historyData.upMinCriCtr + \")\";\n      else\n        this.lblMinorToCriticalUp = \"Minor to Critical\";\n      \n      if (this.isMajorToCriticalUp)\n        this.lblMajorToCriticalUp = \"Major to Critical (\" + historyData.upMajCriCtr + \")\";\n      else\n        this.lblMajorToCriticalUp = \"Major to Critical\";\n      \n      if (this.isCriticalToMajorDown)\n        this.lblCriticalToMajorDown = \"Critical to Major (\" + historyData.downCriMajCtr + \")\";\n      else\n        this.lblCriticalToMajorDown = \"Critical to Major\";\n      \n      if (this.isCriticalToMinorDown)\n        this.lblCriticalToMinorDown = \"Critical to Minor (\" + historyData.downCriMinCtr + \")\";\n      else\n        this.lblCriticalToMinorDown = \"Critical to Minor\";\n      \n      if (this.isMajorToMinorDown)\n        this.lblMajorToMinorDown = \"Major to Minor (\" + historyData.downMajMinCtr + \")\";\n      else\n        this.lblMajorToMinorDown = \"Major to Minor\";\n      \n      if (this.isForceClear)\n        this.lblForceClear = \"Force Clear (\" + historyData.forceClearCtr + \")\";\n      else\n        this.lblForceClear = \"Force Clear\";\n      \n      if (this.isClearDueToRuleChange)\n        this.lblClearDueToRuleChange = \"Cleared alerts due to rule changes (\" + historyData.clearRuleChCtr + \")\";\n      else\n        this.lblClearDueToRuleChange = \"Cleared alerts due to rule changes\";\n      \n      if (this.isAllAlertType)\n        this.lblAllAlertType = \"All (\" + historyData.allAlertCtr + \")\";\n      else\n        this.lblAllAlertType = \"All\";\n      \n      if (this.isCapacityAlertType)\n        this.lblCapacityAlertType = \"Capacity (\" + historyData.capacityCtr + \")\";\n      else\n        this.lblCapacityAlertType = \"Capacity\";\n      \n      if (this.isBehaviorAlertType)\n        this.lblBehaviorAlertType = \"Behavior (\" + historyData.behaviorCtr + \")\";\n      else\n        this.lblBehaviorAlertType = \"Behavior\"; \n      \n      if (this.isOtherAlertType)\n        this.lblOtherAlertType = \"Other (\" + historyData.otherCtr + \")\";\n      else\n        this.lblOtherAlertType = \"Other\";\n\n      if (this.isRuleChanges)\n        this.lblRuleChanges = \"Rule Changes (\" + historyData.ruleChCtr + \")\";\n      else\n        this.lblRuleChanges = \"Rule Changes\";\n      \n      if (this.isBaselineChanges)\n        this.lblBaselineChanges = \"Baseline Changes (\" + historyData.baselineChCtr + \")\";\n      else\n        this.lblBaselineChanges = \"Baseline Changes\";\n      \n      if (this.isAlertSettingChanges)\n        this.lblAlertSettingChanges = \"Alert Setting Changes (\" + historyData.settingChCtr + \")\";\n      else\n        this.lblAlertSettingChanges = \"Alert Setting Changes\";\n      \n      if (this.isAlertMaintenanceWindowChanges)\n        this.lblAlertMaintenanceWindowChanges = \"Maintenance Window Changes (\" + historyData.maintenanceChCtr + \")\";\n      else\n        this.lblAlertMaintenanceWindowChanges = \"Maintenance Window Changes\";  \n\n      if (this.isTomcatRestart)\n        this.lblTomcatRestart = \"Tomcat Changes (\" + historyData.tomcatChCtr + \")\";\n      else\n        this.lblTomcatRestart = \"Tomcat Changes\";  \n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"setFilterCounter\", \"Exception - \", e);\n    }\n  }\n\n  getRuleNames()\n  { \n    this.historyServices.ruleNames$.subscribe(\n      response =>\n      {\n        let ruleList = response;\n\n        ruleList.forEach(ruleNmae =>\n        {\n          let itemList = {\n            label: ruleNmae,\n            value: ruleNmae\n          }\n          this.rules.push(itemList);\n        });\n      }\n    );\n    \n  }\n  onSelectAlertRule(dt)\n  { \n    this.isAllRuleSelected = dt.isAllChecked();\n  }\n\n  setDefaultFilter()\n  { \n    /* Setting default filters*/\n    this.isCriticalNew = true;\n    this.isMajorNew = true;\n    this.isMinorNew = true;\n\tthis.isNormalNew = true;\n\n    this.isCriticalEnded = true;\n    this.isMajorEnded = true;\n    this.isMinorEnded = true;\n\n    this.isForceClear = true;\n    this.isClearDueToRuleChange = true;\n\n    this.isCapacityAlertType = true;\n    this.isBehaviorAlertType = true;\n    this.setBehaviorFalseInNS();\n  }\n\n  /* Method is used to reset filters */  \n  resetFilter()\n  {\n    if (this.productType == 'netstorm' || this.productType == 'netcloud')\n      this.selectedPreset = this.presets[8].value;\n    else\n      this.selectedPreset = this.presets[4].value;\n\n    //this is used to clear all filter\n    this.setAllFilter(false);\n    \n    //this is used to set default filter\n    this.setDefaultFilter();\n  }\n\n  /* This method is used to clear or select all filters*/  \n  setAllFilter(isSelect: boolean)\n  { \n    try\n    {\n      //this.selectedPreset = this.presets[this.defaultPresetIdx].value;\n      let date = new Date();\n      let lastHrTime = date.getMilliseconds() - CONS.TIME_IN_MILIS.HOUR;\n      //this will store start date if custom filter is selected\n      //this.fromDate = moment(lastHrTime).format('MM/dd/yyyy HH:mm:ss');\n\n      //this will store end date if custom filter is selected\n//      this.toDate = moment(date.getMilliseconds()).format('MM/dd/yyyy HH:mm:ss');\n\n      /* New Alerts */\n      this.isCriticalNew = isSelect;\n      this.isMajorNew = isSelect;\n      this.isMinorNew = isSelect;\n\t  this.isNormalNew = isSelect;\n\n      /* Continuous Alert */\n      this.isCriticalContinues = isSelect;\n      this.isMajorContinues = isSelect;\n      this.isMinorContinues = isSelect;\n\n      /* Ended Alert */\n      this.isCriticalEnded = isSelect;\n      this.isMajorEnded = isSelect;\n      this.isMinorEnded = isSelect;\n\n      /* Upgraded Alert*/\n      this.isMinorToMajorUp = isSelect;\n      this.isMinorToCriticalUp = isSelect;\n      this.isMajorToCriticalUp = isSelect;\n\n      /* Downgraded Alert */\n      this.isCriticalToMajorDown = isSelect;\n      this.isCriticalToMinorDown = isSelect;\n      this.isMajorToMinorDown = isSelect;\n\n      /* Force Clear Alert*/\n      this.isForceClear = isSelect;\n\n      /* Clear Alert Due to rule changes */\n      this.isClearDueToRuleChange = isSelect;\n\n      /* Alert Type */\n      this.isAllAlertType = isSelect;\n      this.isCapacityAlertType = isSelect;\n      this.isBehaviorAlertType = isSelect;\n      this.isOtherAlertType = isSelect;\n      \n      /* Selected Rules */\n      this.selectedRules = [];\n\n      /* Advance Filter */\n      this.isRuleChanges = isSelect;\n      this.isBaselineChanges = isSelect;\n      this.isAlertSettingChanges = isSelect;\n      this.isTomcatRestart = isSelect;\n      this.isAlertMaintenanceWindowChanges = isSelect;\n\n      this.setBehaviorFalseInNS();\n\n      /* Topology Filters */\n      this.tierFilter = null;\n      this.serverFilter = null;\n      this.instanceFilter = null;\n\n      /* String Filter */\n      //this is used to store selected Topology name\n      this.selectedStrFilterField = \"\";\n      this.stringFilter = null;\n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"setAllFilter\", \"Exceprion - \", e);\n    }\n  }\n\n  /* Method is used to set capacity and behaviour alert type if all alert is selected */  \n  selectAllAlertType()\n  { \n    if (this.isAllAlertType)\n    {\n      this.isCapacityAlertType = true;\n      this.isBehaviorAlertType = true;\n      this.isOtherAlertType = true;\n    }\n    else\n    { \n      this.isCapacityAlertType = false;\n      this.isBehaviorAlertType = false;\n      this.isOtherAlertType = false;\n    }  \n    this.setBehaviorFalseInNS();\n  }\n\n  /* Method is used to handle alert type selection */\n  selectAlertType()\n  { \n    if (this.isCapacityAlertType && this.isBehaviorAlertType && this.isOtherAlertType)\n      this.isAllAlertType = true;\n    else\n      this.isAllAlertType = false;\n  }\n\n  /* Method is used to handle behavior type selection in netstrom product*/  \n  setBehaviorFalseInNS()\n  {\n    if (!this.isShowBehavior)\n    {\n      this.isAllAlertType = false;\n      this.isBehaviorAlertType = false; \n      this.isBaselineChanges = false;\n    }    \n  }\n\n  /* Method is used to apply all filters ang get all filterData */\n  applyFilters(isFromDownload: boolean)\n  {\n    try\n    {\n      if (!this.isAnyFilterApplied())\n      {\n        this.historyServices.showMessage(\"error\", \"Error\", \"Please select at least one filter type to apply.\");\n        return;\n      }\n      if(this.isRuleChanges || this.isBaselineChanges || this.isAlertSettingChanges || this.isTomcatRestart || this.isAlertMaintenanceWindowChanges)\n      {\n        if(!this.isOtherAlertType)\n        {\n          this.historyServices.showMessage(\"error\", \"Error\", \"Please select Other from Alert Type to apply.\");\n          return;\n        }\n      } \n      else \n      {\n        if(this.isOtherAlertType)\n        {\n          this.historyServices.showMessage(\"error\", \"Error\", \"Please select at least one filter from Other to apply.\");\n          return;\n        }\n      }\n      if(this.isCriticalNew || this.isMajorNew || this.isMinorNew || this.isNormalNew || this.isCriticalContinues || this.isMajorContinues || this.isMinorContinues || this.isCriticalEnded || this.isMajorEnded || this.isMinorEnded || this.isMinorToMajorUp || this.isMinorToCriticalUp || this.isMajorToCriticalUp || this.isCriticalToMajorDown || this.isCriticalToMinorDown || this.isMajorToMinorDown || this.isForceClear || this.isClearDueToRuleChange)\n      {\n        if(!this.isCapacityAlertType && !this.isBehaviorAlertType)\n        {\n          this.historyServices.showMessage(\"error\", \"Error\", \"Please select Capacity or Behavior from Alert Type to apply.\");\n          return;\n        }\n      }\n      else\n      {\n        if(this.isCapacityAlertType || this.isBehaviorAlertType)\n        {\n          this.historyServices.showMessage(\"error\", \"Error\", \"Please select at least one filter from Alert Severity to apply.\");\n          return;\n        } \n      }\n      let filterData: HistoryFilters = new HistoryFilters();\n\n      //setting opertaion in HistoryFilters\n      filterData.operation = CONS.GET_ALERT_DATA;\n\n      //setting state in HistoryFilters\n      filterData.state = CONS.OPENED;\n\n      //strAlertType string contains selected information for Alert Type Filter\n      let strAlertType = \"\";\n      //setting alertType from Alert Type in HistoryFilters\n      if (this.isAllAlertType)\n      {\n        filterData.alertType = CONS.ALL_ALERT;\n        strAlertType = \"Alert Type: \" + this.lblAllAlertType;\n      }\n      else if(this.isCapacityAlertType && this.isBehaviorAlertType)\n      {\n        filterData.alertType = CONS.ALL_ALERT;\n       strAlertType = \"Alert Type: \" + this.lblCapacityAlertType + \", \" + this.lblBehaviorAlertType;\n      }\n      else\n      {\n        if (this.isCapacityAlertType)\n        {\n          filterData.alertType = CONS.CAPACITY_ALERT;\n          if (strAlertType == \"\")\n            strAlertType = \"Alert Type: \" + this.lblCapacityAlertType;\n          else\n            strAlertType += \", \" + this.lblCapacityAlertType;\n        }\n        if (this.isBehaviorAlertType)\n        {\n          filterData.alertType = CONS.BEHAVIORAL_ALERT;\n          if (strAlertType == \"\")\n            strAlertType = \"Alert Type: \" + this.lblBehaviorAlertType;\n          else\n            strAlertType += \", \" + this.lblBehaviorAlertType;\n        }\n        if(this.isOtherAlertType)\n        {\n          if (strAlertType == \"\")\n            strAlertType = \"Alert Type: \" + this.lblOtherAlertType;\n          else\n            strAlertType += \", \" + this.lblOtherAlertType;\n        }\n      }\n\n      //strAlertRules string contains selected information for Alert Rules Filter\n      let strAlertRules = \"\";\n      //setting selected ruleNames lists in HistoryFilters \n      if (this.selectedRules.toString() === \"\" || this.selectedRules.toString() === undefined)\n      {\n        filterData.ruleName = \"ALL\";\n        strAlertRules = \"Rule Names: All\"\n      }\n      else\n      {\n        filterData.ruleName = this.getSelectedRuleNameList();\n        strAlertRules = \"Rule Names: \" + filterData.ruleName;\n      }\n\n      //strTopology string contains selected information for Topology Filter\n      let strTopology = \"\";\n      //setting Topology filter in HistoryFilters like tier, server and instance ...\n      if (this.tierFilter != undefined && this.tierFilter != \"\")\n      {\n        filterData.tier = this.tierFilter;\n\n        if (strTopology == \"\")\n          strTopology = \"Topology: \" + this.lblTierFilter + \": \" + filterData.tier;\n        else\n          strTopology += \", \" + this.lblTierFilter + \": \" + filterData.tier;\n      }\n      if (this.serverFilter != undefined && this.serverFilter != \"\")\n      {\n        filterData.server = this.serverFilter;\n\n        if (strTopology == \"\")\n          strTopology = \"Topology: \" + this.lblServerFilter + \": \" +  filterData.server;\n        else\n          strTopology += \", \" + this.lblServerFilter + \": \" + filterData.server;\n      }\n      if (this.instanceFilter != undefined && this.instanceFilter != \"\")\n      {\n        filterData.instance = this.instanceFilter;\n\n        if (strTopology == \"\")\n          strTopology = \"Topology: \" + this.lblInstanceFilter + \": \" + filterData.instance;\n        else\n          strTopology += \", \"+ this.lblInstanceFilter + \": \" + filterData.instance;\n      }\n\n      //setting tesRun from service in HistoryFilters\n      filterData.testRun = this.historyServices.$commonServices.$testRunNum+\"\";\n\n      //setting limit in HistoryFilters\n      filterData.limit = -1;\n\n      //setting offset in HistoryFilters\n      filterData.offset = 0;\n\n      //setting preset of Time filter in HistoryFilters\n      filterData.preset = this.selectedPreset;\n  \n      //Including current day data or not    \n      if (this.isIncCurrData != undefined && this.isIncCurrData)\n        filterData.incCurData = 1;\n      else\n        filterData.incCurData = 0;\n\n      //this array will holds all applied filters information to show details in downloaded report\n      let arrAppliedFilters: String[] = new Array<String>();\n      arrAppliedFilters.push(\"Filters Applied\");\n\n      //setting lastTimeStamp in HistoryFilters\n      if (filterData.preset == CONS.PRESET.CUSTOM)\n      {\n        filterData.lastTimeStamp = 2;\n\n        //validating and setting start and end date and time in HistoryFilters for specified preset\n        if (this.fromDate === undefined || this.fromDate === null)\n        {\n          this.historyServices.showMessage(\"error\", \"Error\", \"From date and time cannot be blank. Please provide from date and time.\");\n          return;\n        }\n\n        if (this.toDate === undefined || this.toDate === null)\n        {\n          this.historyServices.showMessage(\"error\", \"Error\", \"To date and time cannot be blank. Please provide to date and time.\");\n          return;\n        }\n\n        let fromDateObj: Date = new Date(this.fromDate);\n        let toDateObj: Date = new Date(this.toDate);\n        console.log(fromDateObj.getTime(), toDateObj.getTime());\n        if (fromDateObj.getTime() >= toDateObj.getTime())\n        {\n          this.historyServices.showMessage(\"error\", \"Error\", \"To date and time should be greater than from date and time.\");\n          return;\n        }\n\n        filterData.fromTimeStamp = moment(this.fromDate).format('MM/DD/YYYY HH:mm:ss');\n\n        filterData.toTimeStamp = moment(this.toDate).format('MM/DD/YYYY HH:mm:ss');\n\n        //setting applied presets to update in top panel      \n        this.historyServices.announcePreset(filterData.preset, filterData.fromTimeStamp, filterData.toTimeStamp, filterData.incCurData);\n\n        //filling Time Filter information in to arrAppliedFilters for custom or specified preset\n        arrAppliedFilters.push(\"Applied Time: \" + filterData.fromTimeStamp + \" to \" + filterData.toTimeStamp);\n      }\n      else\n      {\n        filterData.lastTimeStamp = 1;\n\n        //setting applied presets to update in top panel\n        this.historyServices.announcePreset(filterData.preset, filterData.fromTimeStamp, filterData.toTimeStamp, filterData.incCurData);\n\n        //filling Time Filter information in to arrAppliedFilters for other than custom or specified prset\n        arrAppliedFilters.push(\"Applied Time: \" + filterData.preset);\n      }\n\n\n      //creating inner map object or alert severity filter object. This object will holdes all the filters information of Alert Severity type.\n      let mapStatusWithSeverity: any = {};\n\n      //this array will holds all the list of one type of filter with previousSeverity and currentSeverity\n      let arrSeverityFilter: AlertSeverityFilter[] = new Array<AlertSeverityFilter>();\n\n      //string strNewAlert contains selected new filters info   \n      let strNewAlert = \"\";\n      //applied filters for New or started alerts\n      if (this.isCriticalNew)\n      {\n        //console.log(\"*************this.lblCriticalNew= ********\" + this.lblCriticalNew);\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strNewAlert === \"\")\n          strNewAlert = \"New Alerts : \" + this.lblCriticalNew;\n        else\n          strNewAlert += \", \" + this.lblCriticalNew;\n      }\n      if (this.isMajorNew)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strNewAlert === \"\")\n          strNewAlert = \"New Alerts : \" + this.lblMajorNew;\n        else\n          strNewAlert += \", \" + this.lblMajorNew;\n      }\n      if (this.isMinorNew)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.MINOR;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strNewAlert === \"\")\n          strNewAlert = \"New Alerts : \" + this.lblMinorNew;\n        else\n          strNewAlert += \", \" + this.lblMinorNew;\n      }\n\t  if (this.isNormalNew)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.NORMAL;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strNewAlert === \"\")\n          strNewAlert = \"New Alerts : \" + this.lblNormalNew;\n        else\n          strNewAlert += \", \" + this.lblNormalNew;\n      }\n      if (arrSeverityFilter.length != 0)\n        mapStatusWithSeverity[CONS.STATUS.STARTED] = arrSeverityFilter;\n\n      //string strConAlert contains selected continues alerts filters info   \n      let strConAlert = \"\";\n      //applied filters for Continues alerts\n      arrSeverityFilter = new Array<AlertSeverityFilter>();\n      if (this.isCriticalContinues)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strConAlert === \"\")\n          strConAlert = \"Continues Alert : \" + this.lblCriticalContinues;\n        else\n          strConAlert += \", \" + this.lblCriticalContinues;\n      }\n      if (this.isMajorContinues)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strConAlert === \"\")\n          strConAlert = \"Continues Alert : \" + this.lblMajorContinues;\n        else\n          strConAlert += \", \" + this.lblMajorContinues;\n      }\n      if (this.isMinorContinues)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.MINOR;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strConAlert === \"\")\n          strConAlert = \"Continues Alert : \" + this.lblMinorContinues;\n        else\n          strConAlert += \", \" + this.lblMinorContinues;\n      }\n      if (arrSeverityFilter.length != 0)\n        mapStatusWithSeverity[CONS.STATUS.CONTINUES] = arrSeverityFilter;\n\n      //string strEndAlert contains selected ended alerts filters info   \n      let strEndAlert = \"\";\n      //Applied filters for Ended alerts\n      arrSeverityFilter = new Array<AlertSeverityFilter>();\n      if (this.isCriticalEnded)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.NORMAL;\n        severityFilter.prevSeverity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strEndAlert === \"\")\n          strEndAlert = \"Ended Alerts : \" + this.lblCriticalEnded;\n        else\n          strEndAlert += \", \" + this.lblCriticalEnded;\n      }\n      if (this.isMajorEnded)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.NORMAL;\n        severityFilter.prevSeverity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strEndAlert === \"\")\n          strEndAlert = \"Ended Alerts : \" + this.lblMajorEnded;\n        else\n          strEndAlert += \", \" + this.lblMajorEnded;\n      }\n      if (this.isMinorEnded)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.NORMAL;\n        severityFilter.prevSeverity = CONS.ALERT_SEVERITY_NUM.MINOR;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strEndAlert === \"\")\n          strEndAlert = \"Ended Alerts : \" + this.lblMinorEnded;\n        else\n          strEndAlert += \", \" + this.lblMinorEnded;\n      }\n      if (arrSeverityFilter.length != 0)\n        mapStatusWithSeverity[CONS.STATUS.ENDED] = arrSeverityFilter;\n      //console.log(\" map for Ended \", JSON.stringify(mapStatusWithSeverity));\n\n      //string strUpAlert contains selected upgraded alerts filters info   \n      let strUpAlert = \"\";\n      //filling for Upgraded alerts\n      arrSeverityFilter = new Array<AlertSeverityFilter>();\n      if (this.isMinorToMajorUp)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.prevSeverity = CONS.ALERT_SEVERITY_NUM.MINOR;\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strUpAlert === \"\")\n          strUpAlert = \"Upgraded Alerts : \" + this.lblMinorToMajorUp;\n        else\n          strUpAlert += \", \" + this.lblMinorToMajorUp;\n      }\n      if (this.isMinorToCriticalUp)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.prevSeverity = CONS.ALERT_SEVERITY_NUM.MINOR;\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strUpAlert === \"\")\n          strUpAlert = \"Upgraded Alerts : \" + this.lblMinorToCriticalUp;\n        else\n          strUpAlert += \", \" + this.lblMinorToCriticalUp;\n      }\n      if (this.isMajorToCriticalUp)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.prevSeverity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strUpAlert === \"\")\n          strUpAlert = \"Upgraded Alerts : \" + this.lblMajorToCriticalUp;\n        else\n          strUpAlert += \", \" + this.lblMajorToCriticalUp;\n      }\n      if (arrSeverityFilter.length != 0)\n        mapStatusWithSeverity[CONS.STATUS.UPGRADED] = arrSeverityFilter;\n      //console.log(\" map for Upgraded \" + JSON.stringify(mapStatusWithSeverity));\n\n      //string strDoAlert contains selected downgraded alerts filters info   \n      let strDoAlert = \"\";\n      //filling for downgraded alerts\n      arrSeverityFilter = new Array<AlertSeverityFilter>();\n      if (this.isCriticalToMajorDown)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.prevSeverity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strDoAlert === \"\")\n          strDoAlert = \"Downgraded Alerts : \" + this.lblCriticalToMajorDown;\n        else\n          strDoAlert += \", \" + this.lblCriticalToMajorDown;\n      }\n      if (this.isCriticalToMinorDown)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.prevSeverity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.MINOR;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strDoAlert === \"\")\n          strDoAlert = \"Downgraded Alerts : \" + this.lblCriticalToMinorDown;\n        else\n          strDoAlert += \", \" + this.lblCriticalToMinorDown;\n      }\n\n      if (this.isMajorToMinorDown)\n      {\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        severityFilter.prevSeverity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n        severityFilter.severity = CONS.ALERT_SEVERITY_NUM.MINOR;\n        arrSeverityFilter.push(severityFilter);\n\n        if (strDoAlert === \"\")\n          strDoAlert = \"Downgraded Alerts : \" + this.lblMajorToMinorDown;\n        else\n          strDoAlert += \", \" + this.lblMajorToMinorDown;\n      }\n      if (arrSeverityFilter.length != 0)\n        mapStatusWithSeverity[CONS.STATUS.DOWNGRADED] = arrSeverityFilter;\n\n      //string strForceClrAlert contains selected Force cleared alerts filters info   \n      let strForceClrAlert = \"\";\n      //filling for ForceCleared alerts\n      if (this.isForceClear)\n      {\n        arrSeverityFilter = new Array<AlertSeverityFilter>();\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        arrSeverityFilter.push(severityFilter);\n        mapStatusWithSeverity[CONS.STATUS.FORCECLEAR] = arrSeverityFilter;\n\n        strForceClrAlert = this.lblForceClear;\n      }\n\n      //string strClrDueRuleChAlert contains selected Cleared due to rule changes alerts filters info   \n      let strClrDueRuleChAlert = \"\";\n      //filling for Clear due to rule changes alerts\n      if (this.isClearDueToRuleChange)\n      {\n        arrSeverityFilter = new Array<AlertSeverityFilter>();\n        let severityFilter: AlertSeverityFilter = new AlertSeverityFilter();\n        arrSeverityFilter.push(severityFilter);\n        mapStatusWithSeverity[CONS.STATUS.CLEARDUETORULECHANGES] = arrSeverityFilter;\n\n        strClrDueRuleChAlert = this.lblClearDueToRuleChange;\n      }\n\n      //strSeverityFilter contains all Alert severity Filter strings  \n      let strSeverityFilter = \"\";\n      if (strNewAlert != \"\")\n        strSeverityFilter = strNewAlert + \" \";\n      if (strConAlert != \"\")\n        strSeverityFilter += strConAlert + \" \";\n      if (strEndAlert != \"\")\n        strSeverityFilter += strEndAlert + \" \";\n      if (strUpAlert != \"\")\n        strSeverityFilter += strUpAlert + \" \";\n      if (strDoAlert != \"\")\n        strSeverityFilter += strDoAlert + \" \";\n      if (strForceClrAlert != \"\")\n        strSeverityFilter += strForceClrAlert + \" \";\n      if (strClrDueRuleChAlert != \"\")\n        strSeverityFilter += strClrDueRuleChAlert + \" \";\n\n      //filling selected Alert Severity Filter information into arrAppliedFilters \n      //if (strSeverityFilter != \"\")\n        arrAppliedFilters.push(\"Alert Severity: \" + strSeverityFilter);\n\n      //filling selected Alert Type Filter information into arrAppliedFilters\n    \n      arrAppliedFilters.push(strAlertType);\n\n      //filling selected Alert Rules Filter information into arrAppliedFilters \n      arrAppliedFilters.push(strAlertRules);\n\n      //this is the main map that contains all the filters applied from filter panel\n      let mapTypeStatusWithFilter: any = {};\n\n      //string strAdvance contains selected Advance filters info   \n      let strAdvance = \"\";\n      //for Advance filter\n      if (this.isRuleChanges)\n      {\n        mapTypeStatusWithFilter[CONS.TYPE.RULE] = {};\n        if (strAdvance == \"\")\n          strAdvance = \"Advance Filter: \" + this.lblRuleChanges;\n        else\n          strAdvance += \", \" + this.lblRuleChanges;\n      }\n      if (this.isBaselineChanges)\n      {\n        mapTypeStatusWithFilter[CONS.TYPE.BASELINE] = {};\n        if (strAdvance == \"\")\n          strAdvance = \"Advance Filter: \" + this.lblBaselineChanges;\n        else\n          strAdvance += \", \" + this.lblBaselineChanges;\n      }\n      if (this.isAlertSettingChanges)\n      {\n        mapTypeStatusWithFilter[CONS.TYPE.ALERT_SETTING] = {};\n        if (strAdvance == \"\")\n          strAdvance = \"Advance Filter: \" + this.lblAlertSettingChanges;\n        else\n          strAdvance += \", \" + this.lblAlertSettingChanges;\n      }\n      if (this.isAlertMaintenanceWindowChanges)\n      {\n        mapTypeStatusWithFilter[CONS.TYPE.MAINTENANCE] = {};\n        if (strAdvance == \"\")\n          strAdvance = \"Advance Filter: \" + this.lblAlertMaintenanceWindowChanges;\n        else\n          strAdvance += \", \" + this.lblAlertMaintenanceWindowChanges;\n      }\n      if (this.isTomcatRestart)\n      {\n        mapTypeStatusWithFilter[CONS.TYPE.TOMCAT] = {};\n        if (strAdvance == \"\")\n          strAdvance = \"Advance Filter: \" + this.lblTomcatRestart;\n        else\n          strAdvance += \", \" + this.lblTomcatRestart;\n      }\n      //filling selected Advance Filter information into arrAppliedFilters \n      //if (strAdvance != \"\")\n        arrAppliedFilters.push(\"Advance Filter:\" + strAdvance);\n\n      mapTypeStatusWithFilter[CONS.TYPE.ALERT] = mapStatusWithSeverity;\n      \n      //Adding all the applied filter in Filter Data Object\n      filterData.mapTypeStatusWithFilter = mapTypeStatusWithFilter;\n      //filling selected Topolgy Filter information into arrAppliedFilters \n      if (strTopology != \"\")\n        arrAppliedFilters.push(strTopology);\n\n      if (this.selectedStrFilterField != undefined && this.selectedStrFilterField != \"\" && this.selectedStrFilterField != \"Select Field\")\n      {\n        filterData.strFilterFieldNum = -1;\n        console.log(\"filter = \", this.selectedStrFilterField, \"stringFilter = \", this.stringFilter);\n        if (this.selectedStrFilterField === CONS.HISTORY_STRING_FILTERS.RULE_NAME)\n          filterData.strFilterFieldNum = CONS.HISTORY_STRING_FILTERS_NUM.RULE_NAME;\n        else if (this.selectedStrFilterField === CONS.HISTORY_STRING_FILTERS.BASELINE_NAME)\n          filterData.strFilterFieldNum = CONS.HISTORY_STRING_FILTERS_NUM.BASELINE_NAME;\n        else if (this.selectedStrFilterField === CONS.HISTORY_STRING_FILTERS.MESSAGE)\n          filterData.strFilterFieldNum = CONS.HISTORY_STRING_FILTERS_NUM.MESSAGE;\n      \n        if (this.stringFilter === undefined || this.stringFilter === null || this.stringFilter === \"\")\n        {\n          this.historyServices.showMessage(\"error\", \"Error\", \"Please provide the search string in string filre.\");\n          return;\n        }\n\n        filterData.appliedStrFilter = this.stringFilter;\n\n        //string strStringFilter contains all selected information of String Filter\n        let strStringFilter = \"\";\n\n        //filling selected String Filter information into arrAppliedFilters \n        if (strStringFilter != \"\")\n          arrAppliedFilters.push(strStringFilter);\n      }\n      //filling blank string at last index of arrAppliedFilters for proper formatting in report \n      arrAppliedFilters.push(\"\");\n\n      //Setting arrAppliedFilters in history service to send its information at the time of downloading\n      this.historyServices.setArrAppliedFilters(arrAppliedFilters);\n     \n      //Sending request to get data for applied filters\n      if (!isFromDownload)\n      {\n        //showing progressbar\n        this.historyServices.$commonServices.showProgressBar(\"Getting data from server, Please wait...\"); \n        this.historyServices.getHistoryfilterData(filterData);\n      }\n    }\n    catch (e)\n    {\n      //to close progressBar if any error occured during getting data \n      this.historyServices.$commonServices.progressValue = 100;\n      this.historyServices.$commonServices.isHideProgress == true;\n      \n      this.logger.error(this.className, \"applyFilters\", \"Exception - \", e)\n    }\n  }\n\n  /*method is used to get the rule names for querry*/\n  getSelectedRuleNameList(): string\n  { \n    let ruleName = \"ALL\";\n\n    if (this.rules != undefined && this.selectedRules != undefined && (this.rules.length == this.selectedRules.length))\n      return ruleName;\n    \n    this.selectedRules.forEach(name => {\n      if (ruleName == \"ALL\")\n        ruleName = \"'\" + this.getReplacesCharsByASCII(name) + \"'\";\n      else\n        ruleName = ruleName + \",'\" + this.getReplacesCharsByASCII(name) + \"'\";  \n    });\n    \n    return ruleName;\n  }\n\n  /*this method is used to replace all special character by its ASCII code*/\n  getReplacesCharsByASCII(text: string): string\n  {\n    if(text.indexOf(\",\") > -1)\n    {\n      text = text.replace(new RegExp(\",\", 'g'), \"%2C\");\n    }\n    if(text.indexOf(\"\\\"\") > -1)\n    {\n      text = text.replace(new RegExp(\"\\\"\", 'g'), \"%22\");\n    }\n    if(text.indexOf(\"\\'\") > -1)\n    {\n      text = text.replace(new RegExp(\"\\'\", 'g'), \"%27\");\n    }\n\n    return text;\n  }\n\n  /*This is to validate whether any filter is applied or not*/  \n  isAnyFilterApplied(): boolean\n  { \n    if (this.isCriticalNew || this.isMajorNew || this.isMinorNew || this.isCriticalContinues || this.isMajorContinues || this.isMinorContinues || this.isCriticalEnded || this.isMajorEnded || this.isMinorEnded || this.isMinorToMajorUp || this.isMinorToCriticalUp || this.isMajorToCriticalUp || this.isCriticalToMajorDown || this.isCriticalToMinorDown || this.isMajorToMinorDown || this.isForceClear || this.isClearDueToRuleChange || this.isAllAlertType || this.isCapacityAlertType || this.isBehaviorAlertType || this.isOtherAlertType || this.selectedRules.length > 0 || this.isRuleChanges || this.isBaselineChanges || this.isAlertSettingChanges || this.isAlertMaintenanceWindowChanges || this.isTomcatRestart || this.selectedStrFilterField != \"\" || this.stringFilter != undefined || this.stringFilter != null || this.tierFilter != undefined || this.tierFilter != null || this.serverFilter != undefined || this.serverFilter != null || this.instanceFilter != undefined || this.instanceFilter != null )\n      return true;\n    \n    return false;\n  }\n\n  /*this is onChange event of preset dropdown*/\n  changePreset(event)\n  {\n    if (event.value == \"Custom\")\n    {\n      let curDate = new Date();\n      this.toDate = curDate;\n\n      let curDate1 = new Date();\n      curDate1.setTime(curDate1.getTime() - CONS.TIME_IN_MILIS.DAY);\n      this.fromDate = curDate1;\n     \n      this.logger.info(this.className, \"changePreset\", \"fromDate - \", this.fromDate, \", toDate =\" , this.toDate);\n    }  \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-left-pane/history-left-pane.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".download-panel\\n{\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    padding: 6px;\\n    width: 98%;\\n    margin: 1px 8px;\\n    background: rgba(255, 255, 255, 0.8);\\n}\\n.download-icon{\\n  margin-bottom: -3px;\\n  cursor:pointer;\\n  font-size: 1.9em;\\n}\\n.detailTable span\\n{\\n  float: left;\\n}\\n.align-left{\\n  float: left;\\n}\\n.align-label{\\n  margin-top: 2px;\\n}\\nhr.detailTable-upper-border{\\n height: 2px;\\n border: 0;\\n  margin: 0px;\\n  padding: 0px;\\n box-shadow: 0 10px 8px -10px #191919 inset;\\n}\\n\\n.global-filter\\n{\\n  padding:4px 10px;\\n  border-bottom: 0 none\\n}\\n\\n.lbl-margin\\n{\\n  margin:4px 4px 0 0;\\n}\\n\\n.total-recors\\n{\\n  float: right;\\n  font-weight: 600;\\n}\\n\\n.apply-group\\n{\\n  float: right;\\n  color: #000;\\n  font-weight: 500;\\n}\\n.main-box-alert {\\n  background-color: rgba(255, 255, 255, 0.8);\\n  margin: 1px 8px;\\n  min-height: 80vh;\\n  padding: 2px 4px;\\n  box-shadow: 0 0 4px 1px #565656;\\n  border-radius: 4px;\\n}\\n\\n.alertgui-word {\\n  color: #0055cc !important;\\n}\\n\\n.alertgui-excel {\\n  color: #00aa77 !important;\\n}\\n\\n.alertgui-pdf {\\n  color: #ff4040 !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-table-pane/history-table-pane.component.css\n// module id = ../../../../../src/app/modules/alert/components/alert-history/history-table-pane/history-table-pane.component.css\n// module chunks = main","module.exports = \"<div class=\\\"main-box-alert\\\">\\n<div style=\\\"overflow: hidden\\\">\\n  <!--Main table-->\\n  <div class=\\\"ui-widget-header global-filter\\\">\\n    <i class=\\\"fa fa-search lbl-margin\\\"></i>\\n    <input #gb type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\">\\n    <span *ngIf=\\\"isRowGrouping\\\" class=\\\"apply-group\\\">\\n     <span class=\\\"lbl-margin\\\">Applied Grouping on</span>\\n     <p-dropdown [options]=\\\"rowGroupOptions\\\" [(ngModel)]=\\\"selectedGroupingOn\\\" placeholder=\\\"Select a City\\\" (onChange)=\\\"changeGrouping($event)\\\"></p-dropdown>\\n    </span>\\n  </div>\\n  <!--<div style=\\\"padding: 5px; margin: 0px; overflow: auto;\\\" [style.height.px]=\\\"heightOnDblClick\\\">-->\\n  <div *ngIf=\\\"isRowGrouping; else rowGroupingTable\\\" id=\\\"scroll-s\\\" [style.height.px]=\\\"heightOnDblClick\\\" style=\\\"padding: 5px; margin: 0px; overflow: auto;\\\">\\n    <p-dataTable class=\\\"historyTable\\\" #dt [globalFilter]=\\\"gb\\\" [value]=\\\"alertHistoryData\\\" dataKey=\\\"id\\\" [resizableColumns]=\\\"true\\\" [paginator]=\\\"true\\\" scrollable=\\\"true\\\" scrollHeight=\\\"{{heightOnDblClickPx}}\\\"\\n      [rows]=numRowPerPage [rowsPerPageOptions]=arrRowsPerPage [(sortField)]=\\\"selectedGroupingOn\\\" [sortOrder]=\\\"1\\\" rowGroupMode=\\\"subheader\\\" [(groupField)]=\\\"selectedGroupingOn\\\"\\n      (onRowDblclick)=\\\"rowDoubleClick($event, dt)\\\" [sortableRowGroup]=\\\"false\\\" [responsive]=\\\"true\\\" [(selection)]=\\\"alertHistoryService.selectedRecords\\\"\\n      [rowStyleClass]=changeColorOnDblAndCheckBoxClick (selectionChange)=\\\"selectionChange($event)\\\" [pageLinks]=\\\"pageLinks\\\" (onFilter)=\\\"onFilterData($event)\\\">\\n      <ng-template pTemplate=\\\"rowgroupheader\\\" let-rowData>\\n        <span *ngIf=\\\"selectedGroupingOn=='alertID' \\\"title=\\\"{{rowData.alertID}}\\\">{{rowData.alertID}}</span>\\n        <span *ngIf=\\\"selectedGroupingOn=='ruleId' \\\" title=\\\"{{rowData.ruleId}}\\\">{{rowData.ruleId}}</span>\\n        <span *ngIf=\\\"selectedGroupingOn=='ruleName' \\\" title=\\\"{{rowData.ruleName}}\\\">{{rowData.ruleName}}</span>\\n        <span *ngIf=\\\"selectedGroupingOn=='status' \\\" title=\\\"{{rowData.status}}\\\">{{rowData.status}}</span>\\n        <span *ngIf=\\\"selectedGroupingOn=='tier' \\\" title=\\\"{{rowData.tier}}\\\">{{rowData.tier}}</span>\\n        <span *ngIf=\\\"selectedGroupingOn=='server' \\\" title=\\\"{{rowData.server}}\\\">{{rowData.server}}</span>\\n        <span *ngIf=\\\"selectedGroupingOn=='instance' \\\" title=\\\"{{rowData.instance}}\\\">{{rowData.instance}}</span>\\n      </ng-template>\\n     <!-- <ng-template *ngIf=\\\"selectedGroupingOn=='ruleId'\\\" pTemplate=\\\"rowgroupheader\\\" let-rowData>{{rowData.ruleId}}</ng-template>\\n      <ng-template *ngIf=\\\"selectedGroupingOn=='ruleName'\\\" pTemplate=\\\"rowgroupheader\\\" let-rowData>{{rowData.ruleName}}</ng-template>-->\\n      <!--<p-column [style]=\\\"{'width':'3%'}\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span title=\\\"Serial Number\\\">#</span>\\n        </ng-template>\\n        <ng-template pTemplate=\\\"body\\\" let-i=\\\"rowIndex\\\">\\n          <span>{{i+1}}</span>\\n        </ng-template>\\n      </p-column>-->\\n      <p-column [style]=\\\"{'width':'3%'}\\\" header=\\\"cBox\\\" selectionMode=\\\"multiple\\\"></p-column>\\n      <!--<p-column [style]=\\\"{'width':'9%', 'text-align':'left'}\\\" field=\\\"sourceIpPort\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\" responsive=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"Source\\\">Source</span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span title=\\\"{{data.sourceIp}}:{{data.sourcePort}}\\\">{{data.sourceIp}}:{{data.sourcePort}}</span>\\n          </ng-template>\\n        </p-column>-->\\n      <p-column [style]=\\\"{'width':'4%', 'text-align':'left'}\\\" field=\\\"dc\\\" *ngIf=\\\"dc=='ALL'\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\" responsive=\\\"true\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span title=\\\"DC\\\">DC</span>\\n        </ng-template>\\n        <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <span title=\\\"{{data.dc}}\\\">{{data.dc}}</span>\\n        </ng-template>\\n      </p-column>\\n      <p-column field=\\\"alertType\\\" [style]=\\\"{'width':'4%'}\\\" sortable=\\\"true\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span><img class=\\\"table-header-icon\\\" border='0' title=\\\"Alert Type\\\" src='{{imagePath}}type.png'></span>\\n        </ng-template>\\n        <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <span *ngIf=\\\"data[col.field]=='Capacity'\\\" title=\\\"Capacity\\\" class=\\\"icon alertgui-capacity\\\"></span>\\n          <span *ngIf=\\\"data[col.field]=='Behavior'\\\" title=\\\"Behavior\\\" class=\\\"icon alertgui-behavior\\\"></span>\\n          <span *ngIf=\\\"data.status=='Tomcat'\\\" title=\\\"{{data.status}}\\\" class=\\\"icon alertgui-tomcat\\\"></span>\\n        </ng-template>\\n      </p-column>\\n      <p-column [style]=\\\"{'width':'4%'}\\\" field=\\\"severity\\\" sortable=\\\"true\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span><img class=\\\"table-header-icon\\\" border='0' title=\\\"Alert Severity\\\" src='{{imagePath}}severity.png'></span>\\n        </ng-template>\\n        <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <span *ngIf=\\\"data[col.field]=='Normal'||data[col.field]==''\\\" class=\\\"icon normal alertgui-major-event\\\" title=\\\"Normal\\\"></span>\\n          <span *ngIf=\\\"data[col.field]=='Critical'\\\" class=\\\"icon alertgui-critical-event\\\" title='Critical'></span>\\n          <span *ngIf=\\\"data[col.field]=='Major'\\\" class=\\\"icon alertgui-major-event\\\" title=\\\"Major\\\"></span>\\n          <span *ngIf=\\\"data[col.field]=='Minor'\\\" class=\\\"icon alertgui-minor-event\\\" title=\\\"Minor\\\"></span>\\n        </ng-template>\\n      </p-column>\\n      <p-column [style]=\\\"{'width':'8%'}\\\" field=\\\"status\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span title=\\\"Status\\\">Status</span>\\n        </ng-template>\\n        <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <span title=\\\"{{data.status}}\\\">{{data.status}}</span>\\n        </ng-template>\\n      </p-column>\\n      <p-column [style]=\\\"{'width':'13%'}\\\" field=\\\"tier\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span title=\\\"{{lblTier}}\\\">{{lblTier}}</span>\\n        </ng-template>\\n        <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <span title=\\\"{{data.tier}}\\\">{{data.tier}}</span>\\n        </ng-template>\\n      </p-column>\\n      <p-column [style]=\\\"{'width':'13%'}\\\" field=\\\"server\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span title=\\\"{{lblServer}}\\\">{{lblServer}}</span>\\n        </ng-template>\\n        <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <span title=\\\"{{data.server}}\\\">{{data.server}}</span>\\n        </ng-template>\\n      </p-column>\\n      <p-column [style]=\\\"{'width':'13%'}\\\" field=\\\"instance\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span title=\\\"{{lblInstance}}\\\">{{lblInstance}}</span>\\n        </ng-template>\\n        <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <span title=\\\"{{data.instance}}\\\">{{data.instance}}</span>\\n        </ng-template>\\n      </p-column>\\n      <p-column [style]=\\\"{'width':'8%', 'text-align':'right'}\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" field=\\\"alertValue\\\" filterPlaceholder=\\\"Search\\\"\\n        sortable=\\\"custom\\\" (sortFunction)=\\\"customTblSort($event)\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span class=\\\"table-header-icon\\\" title=\\\"Alert Value\\\">Alert Value</span>\\n        </ng-template>\\n        <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <span title=\\\"{{data.alertValue}}\\\">{{data.alertValue}}</span>\\n        </ng-template>\\n      </p-column>\\n      <p-column [style]=\\\"{'width':'8%', 'text-align':'right'}\\\" field=\\\"thresholdValue\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\"\\n        sortable=\\\"custom\\\" (sortFunction)=\\\"customTblSort($event)\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span title=\\\"Threshold\\\">Threshold</span>\\n        </ng-template>\\n        <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <span title=\\\"{{data.thresholdValue}}\\\">{{data.thresholdValue}}</span>\\n        </ng-template>\\n      </p-column>\\n      <p-column [style]=\\\"{'width':'13%', 'text-align':'right'}\\\" header=\\\"Time\\\" field=\\\"alertTime\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span title=\\\"Alert Time\\\">Time</span>\\n        </ng-template>\\n        <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <span title=\\\"{{data.alertTime}}\\\">{{data.alertTime}}</span>\\n        </ng-template>\\n      </p-column>\\n      <p-column field=\\\"alertMsg\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <span title=\\\"Message\\\">Message</span>\\n        </ng-template>\\n        <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <span title=\\\"{{data.alertMsg}}\\\">{{data.alertMsg}}</span>\\n        </ng-template>\\n      </p-column>\\n      <p-column [style]=\\\"{'width':'4%'}\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"Action\\\" class=\\\"fa fa-line-chart\\\"></span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <button type=\\\"button\\\" pButton (click)=\\\"showGraph(data)\\\" icon=\\\"fa fa-line-chart\\\" title=\\\"Show Graph\\\"></button>\\n          </ng-template> \\n        </p-column>\\n    </p-dataTable>\\n  </div>\\n\\n  <!--Defining history table when row grouping is off-->\\n  <ng-template #rowGroupingTable>\\n    <div style=\\\"padding: 5px; margin: 0px; margin-top:-30px\\\">\\n      <p-dataTable id=\\\"scroll-s\\\" class=\\\"historyTable\\\" #dt [globalFilter]=\\\"gb\\\" [value]=\\\"alertHistoryData\\\" dataKey=\\\"serialNum\\\" sortField=\\\"alertTime\\\"\\n        [sortOrder]=\\\"-1\\\" [resizableColumns]=\\\"true\\\" [paginator]=\\\"true\\\" [rows]=numScrollRowPerPage [rowsPerPageOptions]=arrScrollRowsPerPage\\n        (onRowDblclick)=\\\"rowDoubleClick($event, dt)\\\" [responsive]=\\\"true\\\" scrollable=\\\"true\\\" scrollHeight=\\\"{{heightOnDblClickPx}}\\\"\\n        [style]=\\\"{'margin-top':'30px'}\\\" [(selection)]=\\\"alertHistoryService.selectedRecords\\\" [rowStyleClass]=changeColorOnDblAndCheckBoxClick\\n        (selectionChange)=\\\"selectionChange($event)\\\" [pageLinks]=\\\"pageLinks\\\" (onFilter)=\\\"onFilterData($event)\\\">\\n        <ng-template pTemplate=\\\"rowgroupheader\\\" let-rowData>{{rowData.ruleName}}</ng-template>\\n      <!--  <p-column [style]=\\\"{'width':'4%'}\\\" sortable=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"Serial Number\\\" class=\\\"table-header-icon\\\">#</span>\\n          </ng-template>\\n          <ng-template pTemplate=\\\"body\\\" let-i=\\\"rowIndex\\\">\\n            <span>{{i+1}}</span>\\n          </ng-template>\\n        </p-column>-->\\n        <p-column [style]=\\\"{'width':'3%'}\\\" header=\\\"cBox\\\" selectionMode=\\\"multiple\\\"></p-column>\\n        <!--<p-column [style]=\\\"{'width':'9%', 'text-align':'left'}\\\" field=\\\"sourceIpPort\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\" responsive=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"Source\\\">Source</span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span title=\\\"{{data.sourceIp}}:{{data.sourcePort}}\\\">{{data.sourceIp}}:{{data.sourcePort}}</span>\\n          </ng-template>\\n        </p-column>-->\\n        <p-column [style]=\\\"{'width':'4%', 'text-align':'left'}\\\" field=\\\"dc\\\" *ngIf=\\\"dc=='ALL'\\\" [filter]=isShowFilter filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\" responsive=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"DC\\\">DC</span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span title=\\\"{{data.dc}}\\\">{{data.dc}}</span>\\n          </ng-template>\\n        </p-column>\\n        <p-column field=\\\"alertType\\\" [style]=\\\"{'width':'4%'}\\\" sortable=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span><img class=\\\"table-header-icon\\\" border='0' title=\\\"Alert Type\\\" src='{{imagePath}}type.png'></span>\\n          </ng-template>\\n          <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span *ngIf=\\\"data[col.field]=='Capacity'\\\" title=\\\"Capacity\\\" class=\\\"icon alertgui-capacity\\\"></span>\\n            <span *ngIf=\\\"data[col.field]=='Behavior'\\\" title=\\\"Behavior\\\" class=\\\"icon alertgui-behavior\\\"></span>\\n            <span *ngIf=\\\"data.status=='Tomcat'\\\" title=\\\"{{data.status}}\\\" class=\\\"icon alertgui-tomcat\\\"></span>\\n          </ng-template>\\n        </p-column>\\n        <p-column [style]=\\\"{'width':'4%'}\\\" field=\\\"severity\\\" sortable=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span><img class=\\\"table-header-icon\\\" border='0' title=\\\"Alert Severity\\\" src='{{imagePath}}severity.png'></span>\\n          </ng-template>\\n          <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span *ngIf=\\\"data[col.field]=='Normal'||data[col.field]==''\\\" class=\\\"icon normal alertgui-major-event\\\" title=\\\"Normal\\\"></span>\\n            <span *ngIf=\\\"data[col.field]=='Critical'\\\" class=\\\"icon alertgui-critical-event\\\" title='Critical'></span>\\n            <span *ngIf=\\\"data[col.field]=='Major'\\\" class=\\\"icon alertgui-major-event\\\" title=\\\"Major\\\"></span>\\n            <span *ngIf=\\\"data[col.field]=='Minor'\\\" class=\\\"icon alertgui-minor-event\\\" title=\\\"Minor\\\"></span>\\n          </ng-template>\\n        </p-column>\\n        <p-column [style]=\\\"{'width':'8%'}\\\" field=\\\"status\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"Status\\\">Status</span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span title=\\\"{{data.status}}\\\">{{data.status}}</span>\\n          </ng-template>\\n        </p-column>\\n        <p-column [style]=\\\"{'width':'12%'}\\\" field=\\\"tier\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"{{lblTier}}\\\">{{lblTier}}</span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span title=\\\"{{data.tier}}\\\">{{data.tier}}</span>\\n          </ng-template>\\n        </p-column>\\n        <p-column [style]=\\\"{'width':'12%'}\\\" field=\\\"server\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"{{lblServer}}\\\">{{lblServer}}</span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span title=\\\"{{data.server}}\\\">{{data.server}}</span>\\n          </ng-template>\\n        </p-column>\\n        <p-column [style]=\\\"{'width':'12%'}\\\" field=\\\"instance\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"{{lblInstance}}\\\">{{lblInstance}}</span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span title=\\\"{{data.instance}}\\\">{{data.instance}}</span>\\n          </ng-template>\\n        </p-column>\\n        <p-column [style]=\\\"{'width':'8%', 'text-align':'right'}\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" field=\\\"alertValue\\\" filterPlaceholder=\\\"Search\\\"\\n          sortable=\\\"custom\\\" (sortFunction)=\\\"customTblSort($event)\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span class=\\\"table-header-icon\\\" title=\\\"Alert Value\\\">Alert Value</span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span title=\\\"{{data.alertValue}}\\\">{{data.alertValue}}</span>\\n          </ng-template>\\n        </p-column>\\n        <p-column [style]=\\\"{'width':'8%', 'text-align':'right'}\\\" field=\\\"thresholdValue\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\"\\n          sortable=\\\"custom\\\" (sortFunction)=\\\"customTblSort($event)\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span class=\\\"table-header-icon\\\" title=\\\"Threshold\\\">Threshold</span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span title=\\\"{{data.thresholdValue}}\\\">{{data.thresholdValue}}</span>\\n          </ng-template>\\n        </p-column>\\n        <p-column [style]=\\\"{'width':'13%', 'text-align':'right'}\\\" header=\\\"Time\\\" field=\\\"alertTime\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"Alert Time\\\">Time</span>\\n          </ng-template>\\n          <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span title=\\\"{{data.alertTime}}\\\">{{data.alertTime}}</span>\\n          </ng-template>\\n        </p-column>\\n        <p-column field=\\\"alertMsg\\\" [filter]=isShowFilter filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\" sortable=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"Message\\\">Message</span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span title=\\\"{{data.alertMsg}}\\\">{{data.alertMsg}}</span>\\n          </ng-template>\\n        </p-column>\\n        <p-column [style]=\\\"{'width':'4%'}\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <span title=\\\"Action\\\" class=\\\"fa fa-line-chart\\\"></span>\\n          </ng-template>\\n          <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <button type=\\\"button\\\" pButton (click)=\\\"showGraph(data)\\\" icon=\\\"fa fa-line-chart\\\" title=\\\"Show Graph\\\"></button>\\n          </ng-template> \\n        </p-column>\\n      </p-dataTable>\\n    </div>\\n  </ng-template>\\n\\n  <hr class=\\\"detailTable-upper-border\\\">\\n  <!--Detail Table on row click of main table-->\\n  <div class='detailTable' *ngIf=\\\"isShowDetailTable\\\" style=\\\"padding: 5px;\\\">\\n    <p-dataTable [value]=\\\"rowDetailData\\\">\\n      <p-headerColumnGroup>\\n        <p-row>\\n          <p-column colspan=\\\"1\\\" [style]=\\\"{'width':'11%'}\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Rule Name</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column [style]=\\\"{'overflow':'hidden'}\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span title=\\\"{{rowDetailData[0].ruleName}}\\\">{{rowDetailData[0].ruleName}}</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column [style]=\\\"{'width':'11%'}\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Alert Condition</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span title=\\\"{{rowDetailData[0].alertCondition}}\\\">{{rowDetailData[0].alertCondition}}</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column [style]=\\\"{'width':'11%'}\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Type</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span title=\\\"{{rowDetailData[0].alertType}}\\\">{{rowDetailData[0].alertType}}</span>\\n            </ng-template>\\n          </p-column>\\n        </p-row>\\n        <p-row>\\n          <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Severity</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span title=\\\"{{rowDetailData[0].severity}}\\\">{{rowDetailData[0].severity}}</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column [style]=\\\"{'width':'8%'}\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Alert Value</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span title=\\\"{{rowDetailData[0].alertValue}}\\\">{{rowDetailData[0].alertValue}}</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Threshold Value</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span title=\\\"{{rowDetailData[0].thresholdValue}}\\\">{{rowDetailData[0].thresholdValue}}</span>\\n            </ng-template>\\n          </p-column>\\n        </p-row>\\n        <p-row>\\n          <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Alert Time</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span title=\\\"{{rowDetailData[0].alertTime}}\\\">{{rowDetailData[0].alertTime}}</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column [style]=\\\"{'width':'8%'}\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Baseline </span>\\n            </ng-template>\\n          </p-column>\\n          <p-column [style]=\\\"{'overflow':'hidden'}\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span title=\\\"{{rowDetailData[0].baselineName}}\\\">{{rowDetailData[0].baselineName}}</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Load Value</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span title=\\\"{{rowDetailData[0].loadAvgValue}}\\\">{{rowDetailData[0].loadAvgValue}}</span>\\n            </ng-template>\\n          </p-column>\\n        </p-row>\\n        <p-row>\\n          <p-column colspan=\\\"1\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Graph Type</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column colspan=\\\"1\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span *ngIf=\\\"!isDerivedGraph\\\" title=\\\"Simple Graph\\\">Simple Graph</span>\\n              <span *ngIf=\\\"isDerivedGraph\\\" title=\\\"Derived Graph\\\">Derived Graph</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column colspan=\\\"1\\\" >\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Derived Vectors</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column colspan=\\\"3\\\" [style]=\\\"{'overflow':'hidden'}\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span title=\\\"{{rowDetailData[0].derivedVectors}}\\\">{{rowDetailData[0].derivedVectors}}</span>\\n            </ng-template>\\n          </p-column>\\n        </p-row>\\n        <p-row>\\n          <p-column colspan=\\\"1\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span style=\\\"font-weight: bold\\\">Message</span>\\n            </ng-template>\\n          </p-column>\\n          <p-column colspan=\\\"5\\\" [style]=\\\"{'overflow':'hidden'}\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n              <span title=\\\"{{rowDetailData[0].alertMsg}}\\\">{{rowDetailData[0].alertMsg}}</span>\\n            </ng-template>\\n          </p-column>\\n        </p-row>\\n      </p-headerColumnGroup>\\n\\n    </p-dataTable>\\n  </div>\\n\\n  <!--download panel-->\\n  <div class=\\\"download-panel\\\">\\n    <span>\\n    <label class=\\\"align-left align-label\\\">Download As :</label>\\n    <span title=\\\"Word\\\" class=\\\"icon alertgui-word download-icon\\\" (click)='downloadHistoryData(\\\"WordFile\\\")'></span>\\n    <span title=\\\"Excel\\\" class=\\\"icon alertgui-excel download-icon\\\" (click)='downloadHistoryData(\\\"ExcelFile\\\")'></span>\\n    <span title=\\\"PDF\\\" class=\\\"icon alertgui-pdf download-icon\\\" (click)='downloadHistoryData(\\\"PDFFile\\\")'></span>\\n    </span>\\n    <span class=\\\"total-recors\\\">Total {{alertHistoryService.totalAvailableRecords}} records found</span>\\n  </div>\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-table-pane/history-table-pane.component.html\n// module id = ../../../../../src/app/modules/alert/components/alert-history/history-table-pane/history-table-pane.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { IMAGE_PATH } from \"../../../constants/alert-constant\";\nimport { AlertData } from '../../../commons/active-alert';\n// import { deserialize, JsonProperty } from 'json-typescript-mapper';\nimport { HistoryServices } from '../../../services/alert-history-services';\nimport { Subscription }   from 'rxjs/Subscription';\nimport { DataTable, LazyLoadEvent } from 'primeng/primeng';\nimport { Logger } from \"angular2-logger/core\";\nimport * as CONS from \"../../../constants/alert-constant\";\n\n@Component({\n  selector: 'app-history-table-pane',\n  templateUrl: './history-table-pane.component.html',\n  styleUrls: ['./history-table-pane.component.css']\n})\n  \nexport class HistoryTablePaneComponent implements OnInit\n{\n  imagePath: string;\n  className = \"HistoryTablePaneComponent\";\n  /*main table variables\n  main table data*/\n  alertHistoryData: AlertData[];\n  histoyFilterData: AlertData[];\n  dataSource: AlertData[];\n  //this stores the panel height of height and table panel\n  mainTableHeight: number;\n\n  /*to show hide filters in table*/\n  isShowFilter: boolean;\n\n  /*Detail table variables\n  Detail table data as pdatatable take sobject array*/\n  rowDetailData: any[];\n\n  isDerivedGraph: boolean;\n\n  //on dbl click previous row data \n  prevData: any;\n  \n  //this is Show MultiDc in Case of ALL\n  dc: string;\n\n  heightOnDblClick: number;\n  heightOnDblClickPx: string;\n  /*Flag to show and hide detail table */\n  isShowDetailTable: boolean;\n  subscription: Subscription;\n  isRowGrouping = false;\n  numRowPerPage: number;\n  arrRowsPerPage: number[];\n  numScrollRowPerPage: number;\n  arrScrollRowsPerPage: number[];\n  selectedPrevRowsData: AlertData[];\n  rowGroupOptions = [];\n  selectedGroupingOn: string;\n  pageLinks: number;\n  lblTier: string;\n  lblServer: string;\n  lblInstance: string;\n\n  constructor(private logger: Logger, public alertHistoryService: HistoryServices)\n  {\n    this.dc = alertHistoryService.$commonServices.getDcName();\n    this.imagePath = IMAGE_PATH;\n    this.numRowPerPage = 15;\n    this.arrRowsPerPage = [15, 20, 50, 100, 200];\n    this.numScrollRowPerPage = 20;\n    this.arrScrollRowsPerPage = [20, 50, 100, 200];\n    this.resetDetailTableProperty();\n    this.selectedPrevRowsData = new Array<AlertData>();\n\n    //adding grouping options for row group\n    this.rowGroupOptions.push({ label: 'Alert Id', value: 'alertID' });\n    this.rowGroupOptions.push({ label: 'Rule Id', value: 'ruleId' });\n    this.rowGroupOptions.push({ label: 'Rule Name', value: 'ruleName' });\n    this.rowGroupOptions.push({ label: 'Alert Status', value: 'status' });\n    this.rowGroupOptions.push({ label: 'Tier', value: 'tier' });\n    this.rowGroupOptions.push({ label: 'Server', value: 'server' });\n    this.rowGroupOptions.push({ label: 'Instance', value: 'instance' });\n\n    this.lblTier = \"Tier\";\n    this.lblServer = \"Server\";\n    this.lblInstance = \"Instance\";\n    if (alertHistoryService.$commonServices.$productName.toLowerCase() === \"netvision\")\n    {\n      this.lblTier = CONS.COL_INDICES + \"1\";\n      this.lblServer = CONS.COL_INDICES + \"2\";\n      this.lblInstance = CONS.COL_INDICES + \"3\";\n    }\n    \n    this.selectedGroupingOn = \"ruleName\";\n    this.pageLinks = 10;\n  }\n\n  /*initiate history table component*/\n  ngOnInit()\n  {\n    //subscribe alertHistory service to get show or hide the main table the filter\n    this.alertHistoryService.showTableFilter$.subscribe(\n      res => {\n        this.isShowFilter = res;\n      }\n    );\n\n    //subscribe alertHistory service to apply row grouping in history table\n    this.alertHistoryService.applyRowGrouping$.subscribe(\n      res =>\n      {\n        //hide detail table if there is a change in row grouping\n        this.resetDetailTableProperty();\n\n        this.isRowGrouping = res;\n\n        if (this.isRowGrouping)\n          this.customSort(this.selectedGroupingOn, 1, \"string\");\n        \n        console.log(this.isRowGrouping);\n      }\n    );\n\n    /*Subscribe alertHistory service to get history data on applying filter to show data in main table\n      Setting alert history data from history service*/\n    this.alertHistoryService.historyData$.subscribe(\n      res =>\n      {\n        //hide detail table if filter is applied\n        this.resetDetailTableProperty();\n\n        this.alertHistoryData = res.arrHistoryData;\n        this.histoyFilterData = res.arrHistoryData;\n        if (this.alertHistoryData != undefined)\n          this.alertHistoryService.totalAvailableRecords = this.alertHistoryData.length;\n        \n       /* if (this.isRowGrouping)\n          this.dataSource = this.alertHistoryData.slice(0, this.arrScrollRowsPerPage[1]);\n        else\n          this.dataSource = this.alertHistoryData.slice(0, this.arrRowsPerPage[2]); */ \n      }\n    );\n\n    this.alertHistoryService.delSelectedRecord$.subscribe(\n        res =>\n        {\n          this.deleteRecords(res);\n        }\n      );\n  }\n\n  /*method is used to reset detail table property*/   \n  resetDetailTableProperty()\n  { \n    try\n    {\n      this.isShowDetailTable = false;\n      this.mainTableHeight = this.alertHistoryService.leftAndTablePanelheight - 87;\n      this.heightOnDblClick = this.mainTableHeight;\n      this.heightOnDblClickPx = (this.heightOnDblClick - 72) + \"px\";\n\n      //to avoid css change on changing table  \n      this.alertHistoryService.selectedRecords = [];\n      this.selectedPrevRowsData = [];\n      if (this.alertHistoryData != undefined)\n      {\n        for (let i = 0; i < this.alertHistoryData.length; i++)\n        {\n          this.alertHistoryData[i].isRowSelected = false;\n        }\n      }\n    }\n    catch (e)\n    {\n      this.logger.error(this.className, \"resetDetailTableProperty\", \"Exception -\" + e);\n    }\n  }\n\n  /*method is used to perform action on double click in rows*/\n  rowDoubleClick(event, dt: DataTable)\n  {\n    try\n    {\n      this.rowDetailData = [];\n\n      let eventData = event.data;\n      if (this.prevData != eventData)\n        this.isShowDetailTable = true;\n      else\n      {\n        this.isShowDetailTable = !this.isShowDetailTable;\n      }\n      //to avoid css changing corresponding to checkbox    \n      this.alertHistoryService.selectedRecords = [];\n      this.selectedPrevRowsData = [];\n      for (let i = 0; i < this.alertHistoryData.length; i++)\n      {\n        if (eventData == this.alertHistoryData[i])\n        {\n          eventData.isRowSelected = this.isShowDetailTable;\n        }\n        else\n          this.alertHistoryData[i].isRowSelected = false;\n      }\n      if(eventData.graphType == 2)\n        this.isDerivedGraph  = true;\n        \n      this.rowDetailData.push(eventData);\n      /*if (this.isShowDetailTable)\n        dt.selection = this.rowDetailData;\n      else\n        dt.selection = undefined; */\n\n      this.prevData = eventData;\n\n      this.heightOnDblClick = this.mainTableHeight;\n      if (this.isShowDetailTable)\n        this.heightOnDblClick = this.mainTableHeight - 126;\n\n      this.heightOnDblClickPx = (this.heightOnDblClick - 75) + \"px\";\n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"rowDoubleClick\", \"Exception - \", e);\n    }\n  }\n\n  //method called on click on header checkbox and or checkbox in all rows then change css for highlight and unhighlight the selected rows\n  selectionChange(arrAlertData: AlertData[])\n  {\n    if (arrAlertData.length > 0 && arrAlertData.length >= this.selectedPrevRowsData.length)\n    {\n      this.selectedPrevRowsData = [];\n      for (let j = 0; j < arrAlertData.length; j++)\n      {\n        arrAlertData[j].isRowSelected = true;\n        this.selectedPrevRowsData.push(arrAlertData[j]);\n      }\n    }\n    else\n    {\n      for (let i = 0; i < this.selectedPrevRowsData.length; i++)\n      {\n        if (arrAlertData.length > 0)\n        {\n          if (arrAlertData.indexOf(this.selectedPrevRowsData[i]) == -1)\n          {\n            this.selectedPrevRowsData[i].isRowSelected = false;\n            this.selectedPrevRowsData.splice(i, 1);\n            return;\n          }\n        }\n        else//if deselect all rows\n          this.selectedPrevRowsData[i].isRowSelected = false;\n      }\n      this.selectedPrevRowsData = [];\n    }\n  }\n\n  /*This method is used to highlight the history table row on double click and on selectionChange */\n  changeColorOnDblAndCheckBoxClick(rowData, rowIndex): string\n  {\n    try\n    {\n      let rowHiglightClass = \"history-table-row-odd\";\n\n      if (rowIndex % 2 == 0)\n        rowHiglightClass = \"history-table-row-even\";\n\n      return rowData.isRowSelected ? \"history-table-double-selected-row\" : rowHiglightClass;\n    }\n    catch (e)\n    {\n      console.log('Error in changeColorOnDblClick method.', e);\n    }\n  }\n  \n  /*this method is used to download alert history data in word, excel and pdf format*/\n  downloadHistoryData(fileFormat: string)\n  {\n    this.alertHistoryService.callFromDownload(true);\n    this.alertHistoryService.$commonServices.showProgressBar(\"Going to download data, Please wait...\");\n    if(this.histoyFilterData != undefined)\n      this.alertHistoryService.downloadHistoryData(fileFormat, this.histoyFilterData);\n    else\n      this.alertHistoryService.downloadHistoryData(fileFormat, this.alertHistoryData);\n  }\n\n  /*method is used for lazy loading data when needed*/  \n  loadCarsLazy(event: LazyLoadEvent)\n  {\n    setTimeout(() =>\n    {\n      this.dataSource = this.alertHistoryData.slice(event.first, (event.first + event.rows));\n    }, 250);\n  }\n\n  changeGrouping(event)\n  { \n    console.log(event);\n    this.selectedGroupingOn = event.value;\n    this.customSort(event.value, 1, \"string\");\n  }\n\n  //custom table sorting for numeric values\n  customTblSort(event)\n  {\n    this.customSort(event.field, event.order, \"float\");\n  }\n\n  //Apply Custom Sorting on history data\n  customSort(field, order: number , type: string)\n  {\n    \n    let alertHistoryData: AlertData[] = this.alertHistoryData.sort(function (a, b) {\n      let value1;\n      let value2;\n      if (type == \"string\") {\n        value1 = a[field];\n        value2 = b[field];\n      }\n      else if (type == \"float\") {\n        var tempA = JSON.parse(JSON.stringify(a[field]));\n        var tempB = JSON.parse(JSON.stringify(b[field]));\n        tempA = tempA.replace(\",\", \"\").replace(\"-\",\"-2.0\").replace(\"NaN\",\"-1.0\");\n        tempB = tempB.replace(\",\", \"\").replace(\"-\",\"-2.0\").replace(\"NaN\",\"-1.0\");\n        value1 = parseFloat(tempA);\n        value2 = parseFloat(tempB);\n      }\n      \n      if (order == -1) {\n        return (value2 > value1) ? 1 : ((value2 < value1) ? -1 : 0);\n      }\n      else {\n        return (value1 > value2) ? 1 : ((value1 < value2) ? -1 : 0);\n      }\n    });\n    this.alertHistoryData = [] ;\n    alertHistoryData.forEach(element =>\n    {\n      this.alertHistoryData =this.alertHistoryData.concat(element);\n    });\n  }\n\n  /*method used to delete records from table if delete operation is succesfully perform on server*/  \n  deleteRecords(response)\n  {\n    if (response.eMsg != undefined)\n    {\n      this.alertHistoryService.showMessage(\"error\", \"Error\", \"Records are unable to delete from server\");\n      this.alertHistoryService.$commonServices.isHideProgress = true;\n      this.logger.error(this.className, \"deleteRecords\", \"error: \", response.eMsg);\n      return;\n    }\n    let recordsToDelete = this.alertHistoryService.selectedRecords;\n    for (let j = 0; j < recordsToDelete.length; j++)\n    {\n       for (let i = 0; i < this.alertHistoryData.length; i++)\n       {\n         if (recordsToDelete[j].primarykey == this.alertHistoryData[i].primarykey)\n         {\n           this.alertHistoryData.splice(i, 1); \n           break;\n         }   \n       } \n    }\n    let historyData: AlertData[] = this.alertHistoryData;\n    this.alertHistoryData = [] ;\n    historyData.forEach(element =>\n    {\n      this.alertHistoryData =this.alertHistoryData.concat(element);\n    }); \n    this.alertHistoryService.totalAvailableRecords = this.alertHistoryData.length;\n    this.alertHistoryService.selectedRecords = [];\n    this.alertHistoryService.$commonServices.isHideProgress = true;\n    this.alertHistoryService.showMessage('success', 'Success', 'Records deleted successfully.');\n    \n  }\n\n  /** This method is used to create graphkey for show Graph in DashBoard */\n  showGraph(data)\n  {\n    if(data.groupId == -1 || data.groupId == 0 || data.graphId == -1 || data.graphId == 0)\n    {\n      this.alertHistoryService.showMessage('error', 'Error', 'Open Alert graph is not applicable for derived graph(s) or ended alert(s).');\n      this.logger.error(this.className, \"showGraph\", \"Open Alert graph is not applicable for derived graph(s) or ended alert(s).\");\n      return; \n    }\n    let graphKey: string= \"\";\n    let alertseverity: number;\n    if(data[\"severity\"] == \"Noraml\")\n      alertseverity = CONS.ALERT_SEVERITY_NUM.NORMAL;\n    else if(data[\"severity\"] == \"Minor\")\n      alertseverity = CONS.ALERT_SEVERITY_NUM.MINOR;\n    else if(data[\"severity\"] == \"Major\")\n      alertseverity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n    else if(data[\"severity\"] == \"Critcal\")\n      alertseverity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n    else\n        alertseverity = CONS.ALERT_SEVERITY_NUM.ALL_SEVERITY;\n    if(this.dc == 'ALL')\n    {\n      if(graphKey != \"\")\n        graphKey = graphKey + \";\" +alertseverity+\"_\"+data[\"groupId\"]+\"_\"+data[\"graphId\"]+\"_\"+data[\"tier\"]+\"_\"+data[\"server\"]+\"_\"+data[\"instance\"]+\"_\"+data[\"dc\"];\n      else\n        graphKey = alertseverity+\"_\"+data[\"groupId\"]+\"_\"+data[\"graphId\"]+\"_\"+data[\"tier\"]+\"_\"+data[\"server\"]+\"_\"+data[\"instance\"]+\"_\"+data[\"dc\"];\n    }\n    else\n    {\n      if(graphKey != \"\")\n        graphKey = graphKey + \";\" +alertseverity+\"_\"+data[\"groupId\"]+\"_\"+data[\"graphId\"]+\"_\"+data[\"tier\"]+\"_\"+data[\"server\"]+\"_\"+data[\"instance\"];\n      else\n        graphKey = alertseverity+\"_\"+data[\"groupId\"]+\"_\"+data[\"graphId\"]+\"_\"+data[\"tier\"]+\"_\"+data[\"server\"]+\"_\"+data[\"instance\"];\n    }    \n    this.alertHistoryService.getAlertHistoryGraphData(graphKey);\n  }\n\n  /** This method is used to hold filter history alert data */\n  onFilterData(event)\n  {\n    this.histoyFilterData = event.filteredValue;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-table-pane/history-table-pane.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".align-right{\\r\\n    float: right;\\r\\n}\\r\\n.align-left{\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.margin-right-20{\\r\\n    margin-right:20px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-top-pane/history-top-pane.component.css\n// module id = ../../../../../src/app/modules/alert/components/alert-history/history-top-pane/history-top-pane.component.css\n// module chunks = main","module.exports = \"<div class=\\\"ui-g-12 ui-md-12 ui-lg-12\\\">\\n  <div class=\\\"align-left\\\">\\n    <button pButton *ngIf=\\\"!isShowFilterPanel\\\" (click)=\\\"showFilterPanel()\\\" title=\\\"Show Filters\\\" type=\\\"text\\\" icon=\\\"fa fa-filter\\\"></button>\\n    <button pButton *ngIf=\\\"isShowFilterPanel\\\" (click)=\\\"showFilterPanel()\\\" title=\\\"Hide Filters\\\" type=\\\"text\\\" icon=\\\"fa fa-filter\\\"></button>\\n  </div>\\n  <div class=\\\"align-right\\\">\\n    <label class=\\\"margin-right-20\\\">{{presetString}}</label>\\n    <!--<button pButton *ngIf=\\\"!historyService.isShowGlobalFilter\\\" (click)=\\\"showGlobalFilter()\\\" title=\\\"Show Global Filter\\\" icon=\\\"fa fa-search\\\"></button>\\n    <button pButton *ngIf=\\\"historyService.isShowGlobalFilter\\\"  (click)=\\\"showGlobalFilter()\\\" title=\\\"Hide Global Filter\\\" icon=\\\"fa fa-search\\\"></button>-->\\n    <button pButton *ngIf=\\\"!isShowTableFilter\\\" (click)=\\\"showTableFilter()\\\" title=\\\"Show Filter\\\" icon=\\\"fa fa-search\\\"></button>\\n    <button pButton *ngIf=\\\"isShowTableFilter\\\" (click)=\\\"showTableFilter()\\\" title=\\\"Hide Filter\\\" icon=\\\"fa fa-search\\\"></button>\\n    <button pButton (click)=\\\"deletSelectedRecord()\\\" title=\\\"Delete Record(s)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\n    <button pButton *ngIf=\\\"!isRowGrouping\\\" (click)=\\\"applyRowGrouping()\\\" title=\\\"Apply Row Grouping\\\" icon=\\\"fa fa-indent\\\"></button>\\n    <button pButton *ngIf=\\\"isRowGrouping\\\" (click)=\\\"applyRowGrouping()\\\" title=\\\"Remove Row Grouping\\\" icon=\\\"fa fa-indent\\\"></button>\\n    <button pButton (click)=\\\"showGraph()\\\" title=\\\"Show Graphs\\\" icon=\\\"fa fa-line-chart\\\"></button>\\n    <!--<button *ngIf=\\\"!isShowFilter\\\" md-button class=\\\"md-raised md-primary\\\" (click)=\\\"showTableFilter()\\\" title=\\\"Show Filter\\\"><md-icon>search</md-icon></button>\\n    <button *ngIf=\\\"isShowFilter\\\" md-button class=\\\"md-raised md-primary\\\" (click)=\\\"showTableFilter()\\\" title=\\\"Hide Filter\\\"><md-icon>search</md-icon></button>\\n    <button *ngIf=\\\"isRowGrouping\\\" md-button class=\\\"md-raised md-primary\\\" (click)=\\\"applyRowGrouping()\\\" title=\\\"Row Grouping\\\"><md-icon>search</md-icon></button>\\n    <button *ngIf=\\\"!isRowGrouping\\\" md-button class=\\\"md-raised md-primary\\\" (click)=\\\"applyRowGrouping()\\\" title=\\\"Rrmove Row Grouping\\\"><md-icon>search</md-icon></button>-->\\n  </div>\\n  <p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\"></p-confirmDialog>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-top-pane/history-top-pane.component.html\n// module id = ../../../../../src/app/modules/alert/components/alert-history/history-top-pane/history-top-pane.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HistoryServices } from '../../../services/alert-history-services';\nimport { Logger } from 'angular2-logger/core';\nimport { ConfirmationService } from 'primeng/primeng';\nimport { HistoryFilters } from \"../../../commons/history-filters\";\nimport * as CONS from \"../../../constants/alert-constant\";\n\n@Component({\n  selector: 'app-history-top-pane',\n  templateUrl: './history-top-pane.component.html',\n  styleUrls: ['./history-top-pane.component.css'],\n  providers: [ConfirmationService]\n})\nexport class HistoryTopPaneComponent implements OnInit {\n  presetString: string;\n  className = \"HistoryTopPaneComponent\";\n  /*used to show hide filters of main history table*/\n  isShowTableFilter = false;\n  isRowGrouping = false;\n  isShowFilterPanel = true;\n\n  //this is Show MultiDc in Case of ALL\n  dc: string;\n\n  constructor(private logger: Logger, private historyService: HistoryServices, private confirmationService: ConfirmationService) {\n    this.dc = historyService.$commonServices.getDcName();\n   }\n\n  ngOnInit()\n  {\n    this.historyService.strAppliedPreset$.subscribe(\n      res =>\n      {\n        this.presetString = res;\n      }\n    );\n  }\n\n  showTableFilter()\n  {\n    this.isShowTableFilter = !this.isShowTableFilter;\n    this.historyService.setShowTableFilter(this.isShowTableFilter);\n  }\n\n /* showGlobalFilter()\n  {\n    this.historyService.isShowGlobalFilter = !this.historyService.isShowGlobalFilter;\n    //this.historyService.setShowTableFilter(this.isShowTableFilter);\n  }*/\n  \n  applyRowGrouping()\n  { \n    this.isRowGrouping = !this.isRowGrouping;\n    this.historyService.setRowGroupingFlag(this.isRowGrouping);\n  }\n\n  showFilterPanel()\n  { \n    this.isShowFilterPanel = !this.isShowFilterPanel;\n    this.historyService.setFilterPanelFlag(this.isShowFilterPanel);\n  }\n\n  deletSelectedRecord()\n  { \n    if (this.historyService.selectedRecords != undefined && this.historyService.selectedRecords.length > 0 && this.historyService.selectedRecords[0].isRowSelected == false)\n      this.historyService.selectedRecords = undefined;\n\n    if (this.historyService.selectedRecords.length == 0)\n    {\n      this.historyService.showMessage(\"error\", \"Error\", \"Please select at least one Record to delete\");\n      return;\n    }\n\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to perform this action?',\n      accept: () =>\n      {\n        this.logger.info(this.className, \"deletSelectedRecord\", \"this.historyService.selectedRecords = \", this.historyService.selectedRecords);\n\n        let filterData: HistoryFilters = new HistoryFilters();\n\n        //setting opertaion in HistoryFilters\n        filterData.operation = CONS.DELETE_HISTORY;\n        filterData.testRun = this.historyService.$commonServices.$testRunNum +'';\n        filterData.selectedKeyToDelete = \"\";\n      \n        this.historyService.selectedRecords.forEach(alertData =>\n        {\n          if (filterData.selectedKeyToDelete == \"\")\n            filterData.selectedKeyToDelete = alertData.primarykey + \"\";\n          else\n            filterData.selectedKeyToDelete = filterData.selectedKeyToDelete + \",\" + alertData.primarykey;\n        });\n      \n        this.historyService.$commonServices.showProgressBar(\"Going to delete data, Please wait...\");\n\n        //request for deleting records from db    \n        this.historyService.deleteHistoryRecords(filterData);    \n      }\n    });\n    \n  }\n\n  /** This method is used to create graphkey for show Graph in DashBoard */\n  showGraph()\n  {\n    try\n    {\n      var graphKey: string;\n      var alertseverity: number;\n      this.logger.info(this.className, \" showGraph \", \" Method calld.\");\n      let selectedRowData = this.historyService.selectedRecords\n\n      if (selectedRowData === undefined || selectedRowData.length === 0)\n      {\n        this.historyService.showMessage('error', 'Error', 'No row is selected. Please select row(s) to show graph(s).');\n        this.logger.error(this.className, \"showSelectedGraphs\", \"No row is selected. Please select row(s) to show graph(s).\", this.historyService.messages);\n        return;\n      }\n      for(var i=0; i< selectedRowData.length ; i++)\n      {\n        if(selectedRowData[i].groupId == -1 || selectedRowData[i].groupId == 0 || selectedRowData[i].graphId == -1 || selectedRowData[i].graphId == 0)\n          continue;\n        if(CONS.ALERT_SEVERITY_STRING.NORMAL == selectedRowData[i][\"severity\"])\n          alertseverity = CONS.ALERT_SEVERITY_NUM.NORMAL;\n        else if(CONS.ALERT_SEVERITY_STRING.MINOR == selectedRowData[i][\"severity\"])\n          alertseverity = CONS.ALERT_SEVERITY_NUM.MINOR;\n        else if(CONS.ALERT_SEVERITY_STRING.MAJOR == selectedRowData[i][\"severity\"])\n          alertseverity = CONS.ALERT_SEVERITY_NUM.MAJOR;\n        else if(CONS.ALERT_SEVERITY_STRING.CRITICAL == selectedRowData[i][\"severity\"])\n          alertseverity = CONS.ALERT_SEVERITY_NUM.CRITICAL;\n        else\n            alertseverity = CONS.ALERT_SEVERITY_NUM.ALL_SEVERITY;\n        if(this.dc == 'ALL')  {\n          if(graphKey != undefined)\n            graphKey = graphKey + \";\" +alertseverity+\"_\"+selectedRowData[i][\"groupId\"]+\"_\"+selectedRowData[i][\"graphId\"]+\"_\"+selectedRowData[i][\"tier\"]+\"_\"+selectedRowData[i][\"server\"]+\"_\"+selectedRowData[i][\"instance\"]+\"_\"+selectedRowData[i][\"dc\"];\n          else\n            graphKey = alertseverity+\"_\"+selectedRowData[i][\"groupId\"]+\"_\"+selectedRowData[i][\"graphId\"]+\"_\"+selectedRowData[i][\"tier\"]+\"_\"+selectedRowData[i][\"server\"]+\"_\"+selectedRowData[i][\"instance\"]+\"_\"+selectedRowData[i][\"dc\"];\n        }\n        else{\n          if(graphKey != undefined)\n            graphKey = graphKey + \";\" +alertseverity+\"_\"+selectedRowData[i][\"groupId\"]+\"_\"+selectedRowData[i][\"graphId\"]+\"_\"+selectedRowData[i][\"tier\"]+\"_\"+selectedRowData[i][\"server\"]+\"_\"+selectedRowData[i][\"instance\"];\n          else\n            graphKey = alertseverity+\"_\"+selectedRowData[i][\"groupId\"]+\"_\"+selectedRowData[i][\"graphId\"]+\"_\"+selectedRowData[i][\"tier\"]+\"_\"+selectedRowData[i][\"server\"]+\"_\"+selectedRowData[i][\"instance\"];\n        }         \n      }\n      if(graphKey == null || graphKey == undefined)\n      {\n        this.historyService.showMessage('error', 'Error', 'Open Alert graph is not applicable for derived graph(s) or ended alert(s).');\n        this.logger.error(this.className, \"showGraph\", \"Open Alert graph is not applicable for derived graph(s) or ended alert(s).\");\n        return;\n      }\n      this.historyService.getAlertHistoryGraphData(graphKey);\n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"showGraph\", e);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-history/history-top-pane/history-top-pane.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mat-button-toggle-group, .mat-button-toggle-standalone {\\r\\n      margin: 0px;\\r\\n}\\r\\n.mat-button-toggle{\\r\\n      padding: 11px;\\r\\n      color: #f0f0f0;\\r\\n}\\r\\n.mat-button-toggle-checked{\\r\\n      padding: 11px;\\r\\n      color:#000000\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-home/alert-home.component.css\n// module id = ../../../../../src/app/modules/alert/components/alert-home/alert-home.component.css\n// module chunks = main","module.exports = \"<mat-button-toggle-group>\\n  <span *ngFor='let menue of _commonServices.$menueItem'>\\n    <mat-button-toggle (click)=\\\"navigateClicked(menue.redirectTo)\\\" *ngIf=\\\"!menue.display\\\" value={{menue.value}} [checked]=menue.active>\\n      <mat-icon class=\\\"icon-sm\\\">{{menue.icon}}</mat-icon>\\n      {{menue.name}}\\n    </mat-button-toggle>\\n  </span>\\n    <!--<mat-button-toggle *ngIf=\\\"!menue.active\\\" (click)=\\\"navigateClicked(menue.redirectTo)\\\" value={{menue.value}}>\\n      <mat-icon class=\\\"icon-sm\\\">{{menue.icon}}</mat-icon>\\n      {{menue.name}}\\n    </mat-button-toggle>-->\\n</mat-button-toggle-group>\\n<div >\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-home/alert-home.component.html\n// module id = ../../../../../src/app/modules/alert/components/alert-home/alert-home.component.html\n// module chunks = main","import { Component} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ALERT_NAV_COMPONENT } from './../../constants/alert-nav-constant';\nimport { Logger } from 'angular2-logger/core';\nimport { CommonServices } from '../../services/common-services';\nimport { ActiveAlertService } from '../../services/active-alert-services';\nimport { AlertConfigService } from '../../../../main/services/alert-config-service';\nimport * as CONS from \"../../constants/alert-constant\";\n@Component({\n  selector: 'app-alert-home',\n  templateUrl: './alert-home.component.html',\n  styleUrls: ['./alert-home.component.css']\n})\n  \nexport class AlertHomeComponent{\n   \n   className = \"AlertHomeComponent\";\n   menueItem: any;\n  constructor(public _commonServices: CommonServices, private _alertConfigService: AlertConfigService, private _activeAlertService: ActiveAlertService, private router: Router, private logger: Logger) \n  {\n    this.menueItem =ALERT_NAV_COMPONENT;\n  }\n\n  ngOnInit()\n  {\n    this._commonServices.$loginUser = this._commonServices.$_cavConfigService.$userName;\n    this._commonServices.$productName = this._commonServices.$_cavConfigService.$productName.toLowerCase();\n    if(this._commonServices.$loginUser == null || this._commonServices.$loginUser == \"\" || this._commonServices.$loginUser == undefined)\n      this._commonServices.$loginUser = sessionStorage.getItem('sesLoginName');\n    if(this._commonServices.$productName == \"netstorm\" || this._commonServices.$productName == \"NetStorm\")\n      this._commonServices.$productName = sessionStorage.getItem('sessServerTitle');\n\n    this._commonServices.$testRunNum = this._alertConfigService.$runningTestRunNum;\n    if(this._commonServices.$testRunNum == -1)\n      this._commonServices.$testRunNum = Number.parseInt(sessionStorage.getItem('runningtest'));\n    \n    this._commonServices.$clientConnectionKey = this._alertConfigService.$clientConnectionKey;\n    if(this._commonServices.$clientConnectionKey == \"\")\n      this._commonServices.$clientConnectionKey = sessionStorage.getItem(\"clientConnKey\");\n    \n    this._commonServices.$graphTimeLabel = this._alertConfigService.$graphTimeLabel;\n    this._activeAlertService.$alertType = this._alertConfigService.$activeAlertType;\n    this._activeAlertService.$activeSeverityType = this._alertConfigService.$activeSeverityType;\n    if (sessionStorage.getItem(\"moduleName\") == null || sessionStorage.getItem(\"moduleName\") == undefined) \n      this._commonServices.$moduleName = this._alertConfigService.$moduleName;\n    else \n      this._commonServices.$moduleName = sessionStorage.getItem(\"moduleName\");\n    \n    this._commonServices.$alertAclData = this._alertConfigService.$alertACLData;\n    if(this._commonServices.$alertAclData === undefined)\n    {\n      this._alertConfigService.getAclParam$.subscribe(\n        res => \n        {\n          this._commonServices.$alertAclData = res;\n          this.navigateClicked(this._commonServices.$moduleName);\n        },\n        error => this.logger.error(this.className, \"ngOnInit\", \"Error in getting data from server.\"),\n      );\n    }\n\n    this.navigateClicked(this._commonServices.$moduleName);\n    console.log(\"hostName =\" + this._commonServices.getHostUrl() + \", this.testRunNum =\" + this._commonServices.$testRunNum + \", this.loginUser =\" + this._commonServices.$loginUser + \", this.productName =\" + this._commonServices.$productName +\n      \", clientConnectionKey=\" + this._commonServices.$clientConnectionKey + \", moduleName =\" + this._commonServices.$moduleName + \", graphTimeLabel=\" + this._commonServices.$graphTimeLabel);\n  }\n  \n   /**This is used to set alert access privilages setting data after deserialize the original data got from server and set it to alertAccessPrivilages variable for future use*/ \n  setACLParam(res) \n  {\n    try\n    {\n      this.menueItem.forEach(element =>\n      {\n        if( res[element.name] != undefined)\n        {\n          if(res[element.name] <= 0)\n            element.display = true; \n          else\n            element.display = false; \n        }\n        else\n          element.display = false;  \n      })   \n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"setAccessData\", e);\n    }\n  }\n\n  navigateClicked(path)\n  {\n    this.logger.info(\"AlertHomeComponent\", \"navigateClicked\", \"path - \" + path);\n    if(this._commonServices.$alertAclData !== undefined)\n      this.setACLParam(this._commonServices.$alertAclData);\n    if (path === 'active')\n    {\n      this.router.navigate(['home/alert/active']);\n      this._commonServices.changeRoutingItemActiveState(path);\n      sessionStorage.setItem(\"moduleName\", \"active\");\n    }\n    else if (path === 'history')\n    {\n      this.router.navigate(['home/alert/history']);\n      this._commonServices.changeRoutingItemActiveState(path);\n      sessionStorage.setItem(\"moduleName\", \"history\");\n    }\n    else if (path === 'maintenance')\n    {\n      this.router.navigate(['home/alert/maintenance']);\n      this._commonServices.changeRoutingItemActiveState(path);\n      sessionStorage.setItem(\"moduleName\", \"maintenance\");\n    }\n    else if (path === 'setting')\n    {\n      this.router.navigate(['home/alert/setting']);\n      this._commonServices.changeRoutingItemActiveState(path);\n      sessionStorage.setItem(\"moduleName\", \"setting\");\n    }\n    else if (path === 'rule')\n    {\n      this.router.navigate(['home/alert/rule']);\n      this._commonServices.changeRoutingItemActiveState(path);\n      sessionStorage.setItem(\"moduleName\", \"rule\");\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-home/alert-home.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*.main-box-alert {\\r\\n    background-color: rgba(255, 255, 255, 0.36);\\r\\n    margin: 5px 8px;\\r\\n    box-shadow: 0 0 4px 4px #0F059E;\\r\\n    border-radius: 4px;\\r\\n    font-size: 11px;\\r\\n    padding: 10px 4px 10px 4px;\\r\\n  }*/\\r\\n.alert-maintenance-wrapper{\\r\\n    overflow: auto;\\r\\n  }\\r\\n.maintenace-box-alert{\\r\\n    padding: 0px 4px 10px 4px;\\r\\n  }\\r\\n.indices-levels{\\r\\n    margin: 0.2em 0em 0em 1em ;\\r\\n}\\r\\n.indices-levels-item{\\r\\n    margin: 0.2em 0em 0em 1em ;\\r\\n}\\r\\n.indicies-levels-counter{\\r\\n    margin:0.5em 0em 0em 0em;\\r\\n    position: absolute;\\r\\n    width: initial;\\r\\n}\\r\\n.indicies-levels-counter-menu{\\r\\n    margin:-0.3em 0em 0em 1em;\\r\\n}\\r\\n.select-indicies-levels-pattern{\\r\\n    margin:1em 0em 0em 7.7em\\r\\n}\\r\\n.indices-levels-item-description{\\r\\n    margin: 0.2em 0em -0.5em 1em;\\r\\n}\\r\\n\\r\\n.mainScheduleType{\\r\\n    margin: 0em 0em 0em 0.5em ;\\r\\n}\\r\\n.schedule-panel-margin{\\r\\n  margin-left: -5em;\\r\\n}\\r\\n.description{\\r\\n    margin: 0em 0em 0em -2.7em ;\\r\\n    width: 100%\\r\\n}\\r\\n.calendar-class{\\r\\n    padding: 0em 2.5em 0em 0.5em;\\r\\n}\\r\\n\\r\\n.inline-display{\\r\\n    display: block;\\r\\n  }\\r\\n  .align-right{\\r\\n    float:right;\\r\\n  }\\r\\n  .align-left{\\r\\n    float:left;\\r\\n  }\\r\\n  \\r\\n  .label-padding{\\r\\n    padding: 4px;\\r\\n  }\\r\\n  div .icon\\r\\n  {\\r\\n    font-size: 1.9em;\\r\\n  }\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-maintenance/alert-maintenance.component.css\n// module id = ../../../../../src/app/modules/alert/components/alert-maintenance/alert-maintenance.component.css\n// module chunks = main","module.exports = \"<p-growl [value]=\\\"msg\\\" [life]=5000></p-growl>\\r\\n<p-dialog [(visible)]=\\\"commonServices.displayDialog\\\" modal=\\\"modal\\\" width=\\\"400\\\" responsive=\\\"true\\\" draggable=\\\"false\\\" resizable=\\\"false\\\" minWidth=\\\"200\\\" minHeight=\\\"100\\\" height=\\\"auto\\\" [showHeader]=\\\"false\\\">\\r\\n  <p>{{commonServices.dialogMessage}}</p>\\r\\n  <p-progressBar [value]=\\\"commonServices.progressValue\\\"></p-progressBar>\\r\\n  </p-dialog>\\r\\n<p-confirmDialog class=\\\"scenmodal\\\" header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"450\\\"></p-confirmDialog>\\r\\n<div class=\\\"alert-maintenance-wrapper\\\">\\r\\n  <div class=\\\"main-box-alert \\\">\\r\\n    <p-accordion [multiple]=\\\"true\\\" (onOpen)=\\\"onTabOpen($event)\\\" (onClose)=\\\"onTabOpen($event)\\\">\\r\\n      <p-accordionTab header=\\\"Configure Maintenance Schedule\\\"  [selected]=\\\"openFirstAccordian\\\">\\r\\n        <!--<div class=\\\" ui-g indices-levels-item\\\">\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-12\\\"><p-checkbox [(ngModel)]=\\\"isExcludeTestMetrics\\\" binary=\\\"true\\\" label=\\\"Exclude Test Metrics\\\" title=\\\"use this component enable/disable for Exclude Test Metrices\\\" (onChange)=\\\"onChangeExcludeTestMetric()\\\"></p-checkbox></div>\\r\\n        </div>-->\\r\\n        <h3 class=\\\"indices-levels\\\">Indices Level(s)</h3>\\r\\n        <hr width = \\\"98%\\\">\\r\\n        <div class=\\\" ui-g indices-levels-item\\\">\\r\\n          <span style=\\\"padding: 1em 2em 0em 0em;\\\" *ngFor='let selectedIndiciesLevel of indiciesMultiLevels let i = index'>\\r\\n            <div style=\\\"display: inline-flex;\\\">\\r\\n              <div>{{indicesLevel}}  {{i+1}} </div>\\r\\n              <p-dropdown  class=\\\"indicies-levels-counter-menu\\\" [options]=\\\"selectedIndiciesLevel\\\" [(ngModel)]=\\\"selectedIndiciesLevelItem[i]\\\"  [style]=\\\"{'width':'16em'}\\\" placeholder=\\\"--Select Level--\\\" title=\\\"{{selectedIndiciesLevelItem[i]}}\\\" (onChange)=\\\"onChangeIndicies(i, selectedIndiciesLevelItem[i])\\\">\\r\\n                <ng-template let-selectedIndiciesLevel pTemplate=\\\"item\\\">\\r\\n                  <div title=\\\"{{selectedIndiciesLevel.toolTip}}\\\">{{selectedIndiciesLevel.label}}</div>\\r\\n                </ng-template>\\r\\n              </p-dropdown>\\r\\n            </div>\\r\\n            <div class=\\\"select-indicies-levels-pattern\\\" *ngIf= \\\"selectedIndiciesLevelItem[i] == 'Select Pattern' ? true : false\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input type=\\\"text\\\" pInputText placeholder=\\\"Search Pattern\\\" [(ngModel)]= \\\"selectPattenText[i]\\\" style=\\\"width: 11em\\\">\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Apply\\\" (click)=\\\"applySelectPattern(selectPattenText[i], i)\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </span>\\r\\n        </div>\\r\\n        <hr width = \\\"98%\\\">\\r\\n\\r\\n        <div class=\\\" ui-g indices-levels-item\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\">Schedule Type\\r\\n            <p-dropdown class=\\\"mainScheduleType\\\" [options]=\\\"maintenanceScheduleType\\\" [(ngModel)]=\\\"maintenanceScheduleTypeItem\\\"  [style]=\\\"{'width':'16em'}\\\" placeholder=\\\"--Select Schedule Type--\\\" title=\\\"{{maintenanceScheduleTypeItem.scheduleTitle}}\\\" (onChange)=\\\"onChangeScheduleType($event)\\\">\\r\\n              <ng-template let-maintenanceScheduleType pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleType.toolTip}}\\\">{{maintenanceScheduleType.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-9 schedule-panel-margin\\\" *ngIf=\\\"isEveryDayofEveryMonth\\\">Every day from\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleFromHour\\\" [(ngModel)]=\\\"maintenanceScheduleFromHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--Start--\\\" title=\\\"{{maintenanceScheduleFromHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleFromHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleFromHour.toolTip}}\\\">{{maintenanceScheduleFromHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour to\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleToHour\\\" [(ngModel)]=\\\"maintenanceScheduleToHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--End--\\\" title=\\\"{{maintenanceScheduleToHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleToHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleToHour.toolTip}}\\\">{{maintenanceScheduleToHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour of every month\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-9 schedule-panel-margin\\\" *ngIf=\\\"isDayofEveryMonth\\\">\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleDay\\\" [(ngModel)]=\\\"maintenanceScheduleDayItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--Day--\\\" title=\\\"{{maintenanceScheduleDayItem.dayTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleDay pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleDay.toolTip}}\\\">{{maintenanceScheduleDay.toolTip}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> day from\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleFromHour\\\" [(ngModel)]=\\\"maintenanceScheduleFromHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--Start--\\\" title=\\\"{{maintenanceScheduleFromHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleFromHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleFromHour.toolTip}}\\\">{{maintenanceScheduleFromHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour to\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleToHour\\\" [(ngModel)]=\\\"maintenanceScheduleToHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--End--\\\" title=\\\"{{maintenanceScheduleToHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleToHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleToHour.toolTip}}\\\">{{maintenanceScheduleToHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour of every month\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-9 schedule-panel-margin\\\" *ngIf=\\\"isLastDayofEveryMonth\\\">Last day from\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleFromHour\\\" [(ngModel)]=\\\"maintenanceScheduleFromHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--Start--\\\" title=\\\"{{maintenanceScheduleFromHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleFromHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleFromHour.toolTip}}\\\">{{maintenanceScheduleFromHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour to\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleToHour\\\" [(ngModel)]=\\\"maintenanceScheduleToHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--End--\\\" title=\\\"{{maintenanceScheduleToHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleToHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleToHour.toolTip}}\\\">{{maintenanceScheduleToHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour of every month\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-9 schedule-panel-margin\\\" *ngIf=\\\"isWeekDayofEveryMonth\\\">\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleWeek\\\" [(ngModel)]=\\\"maintenanceScheduleWeekItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--Week--\\\" title=\\\"{{maintenanceScheduleWeekItem.weekTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleWeek pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleWeek.toolTip}}\\\">{{maintenanceScheduleWeek.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown>\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleWeekDay\\\" [(ngModel)]=\\\"maintenanceScheduleWeekDayItem\\\"  [style]=\\\"{'width':'10em'}\\\" placeholder=\\\"--Day--\\\" title=\\\"{{maintenanceScheduleWeekDayItem.weekDayTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleWeekDay pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleWeekDay.toolTip}}\\\">{{maintenanceScheduleWeekDay.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> from\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleFromHour\\\" [(ngModel)]=\\\"maintenanceScheduleFromHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--Start--\\\" title=\\\"{{maintenanceScheduleFromHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleFromHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleFromHour.toolTip}}\\\">{{maintenanceScheduleFromHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour to\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleToHour\\\" [(ngModel)]=\\\"maintenanceScheduleToHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--End--\\\" title=\\\"{{maintenanceScheduleToHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleToHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleToHour.toolTip}}\\\">{{maintenanceScheduleToHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour of every month\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-9 schedule-panel-margin\\\" *ngIf=\\\"isDayofEveryYear\\\">\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleMonth\\\" [(ngModel)]=\\\"maintenanceScheduleMonthItem\\\"  [style]=\\\"{'width':'10em'}\\\" placeholder=\\\"--Month--\\\" title=\\\"{{maintenanceScheduleMonthItem.monthTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleMonth pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleMonth.toolTip}}\\\">{{maintenanceScheduleMonth.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown>\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleDay\\\" [(ngModel)]=\\\"maintenanceScheduleDayItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--Day--\\\" title=\\\"{{maintenanceScheduleDayItem.dayTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleDay pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleDay.toolTip}}\\\">{{maintenanceScheduleDay.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> from\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleFromHour\\\" [(ngModel)]=\\\"maintenanceScheduleFromHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--Start--\\\" title=\\\"{{maintenanceScheduleFromHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleFromHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleFromHour.toolTip}}\\\">{{maintenanceScheduleFromHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour to\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleToHour\\\" [(ngModel)]=\\\"maintenanceScheduleToHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--End--\\\" title=\\\"{{maintenanceScheduleToHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleToHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleToHour.toolTip}}\\\">{{maintenanceScheduleToHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour of every year\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-9 schedule-panel-margin\\\" *ngIf=\\\"isWeekDayofEveryYear\\\" >\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleWeek\\\" [(ngModel)]=\\\"maintenanceScheduleWeekItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--Week--\\\" title=\\\"{{maintenanceScheduleWeekItem.weekTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleWeek pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleWeek.toolTip}}\\\">{{maintenanceScheduleWeek.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown>\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleWeekDay\\\" [(ngModel)]=\\\"maintenanceScheduleWeekDayItem\\\"  [style]=\\\"{'width':'10em'}\\\" placeholder=\\\"--Day--\\\" title=\\\"{{maintenanceScheduleWeekDayItem.weekDayTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleWeekDay pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleWeekDay.toolTip}}\\\">{{maintenanceScheduleWeekDay.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown>of\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleMonth\\\" [(ngModel)]=\\\"maintenanceScheduleMonthItem\\\"  [style]=\\\"{'width':'10em'}\\\" placeholder=\\\"--Month--\\\" title=\\\"{{maintenanceScheduleMonthItem.monthTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleMonth pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleMonth.toolTip}}\\\">{{maintenanceScheduleMonth.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> from\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleFromHour\\\" [(ngModel)]=\\\"maintenanceScheduleFromHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--Start--\\\" title=\\\"{{maintenanceScheduleFromHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleFromHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleFromHour.toolTip}}\\\">{{maintenanceScheduleFromHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour to\\r\\n            <p-dropdown [options]=\\\"maintenanceScheduleToHour\\\" [(ngModel)]=\\\"maintenanceScheduleToHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--End--\\\" title=\\\"{{maintenanceScheduleToHourItem.hourTitle}}\\\">\\r\\n              <ng-template let-maintenanceScheduleToHour pTemplate=\\\"item\\\">\\r\\n                <div title=\\\"{{maintenanceScheduleToHour.toolTip}}\\\">{{maintenanceScheduleToHour.label}}</div>\\r\\n              </ng-template>\\r\\n            </p-dropdown> hour of every year\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-9 schedule-panel-margin\\\" *ngIf=\\\"isCustom\\\">Start Date\\r\\n              <p-calendar  class=\\\"calendar-class\\\" [(ngModel)]=\\\"fromDate\\\" [showIcon]=\\\"true\\\" dateFormat=\\\"mm/dd/yy\\\" [defaultDate]=\\\"defaultfromDate\\\"></p-calendar>\\r\\n              <p-dropdown [options]=\\\"maintenanceScheduleFromHour\\\" [(ngModel)]=\\\"maintenanceScheduleFromHourItem\\\"  [style]=\\\"{'width':'7em'}\\\" placeholder=\\\"--Start--\\\" title=\\\"{{maintenanceScheduleFromHourItem.hourTitle}}\\\">\\r\\n                <ng-template let-maintenanceScheduleFromHour pTemplate=\\\"item\\\">\\r\\n                  <div title=\\\"{{maintenanceScheduleFromHour.toolTip}}\\\">{{maintenanceScheduleFromHour.label}}</div>\\r\\n                </ng-template>\\r\\n              </p-dropdown>\\r\\n              hour <span style=\\\"padding:5px\\\"></span>End Date\\r\\n              <p-calendar [(ngModel)]=\\\"toDate\\\" [showIcon]=\\\"true\\\" dateFormat=\\\"mm/dd/yy\\\"  [defaultDate]=\\\"defaultfromDate\\\"></p-calendar>\\r\\n              <p-dropdown style=\\\"padding-left:2.5em\\\" [options]=\\\"maintenanceScheduleFromHour\\\" [(ngModel)]=\\\"maintenanceScheduleToHourItem\\\" [style]=\\\"{'width':'7em'}\\\"\\r\\n                placeholder=\\\"--End--\\\" title=\\\"{{maintenanceScheduleToHourItem.hourTitle}}\\\">\\r\\n                <ng-template let-maintenanceScheduleToHour pTemplate=\\\"item\\\">\\r\\n                  <div title=\\\"{{maintenanceScheduleToHour.toolTip}}\\\">{{maintenanceScheduleToHour.label}}</div>\\r\\n                </ng-template>\\r\\n              </p-dropdown>hour\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\" ui-g indices-levels-item-description\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-1\\\"> Description </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-10\\\"> <input pInputText type=\\\"text\\\" class=\\\"description\\\" [(ngModel)]=\\\"description\\\" /></div>\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-1\\\"> <button  pButton type=\\\"button\\\" icon=\\\"fa fa-plus\\\" iconPos=\\\"left\\\" title=\\\"Add Maintenance\\\" label=\\\"Add\\\"  (click)='addMaintenanceData(isAccessPermission)'></button></div>\\r\\n        </div>\\r\\n      </p-accordionTab>\\r\\n      <p-accordionTab header=\\\"Applied Maintenance Schedule\\\" [selected]=\\\"openSecondAccordian\\\" >\\r\\n        <div class=\\\"ui-widget-header\\\" style=\\\"padding:0em; display: inline-flex; width: 100%;\\\">\\r\\n          <div style=\\\"width: 75%;\\\">\\r\\n            <i class=\\\"fa fa-search\\\" style=\\\"margin:8px 10px 0px 10px\\\"></i>\\r\\n            <input #gb type=\\\"text\\\" pInputText size=\\\"45\\\" placeholder=\\\"Global Filter\\\">\\r\\n          </div>\\r\\n          <div>\\r\\n\\t          <mat-slide-toggle [(ngModel)]=\\\"isShowHistoricWindow\\\" (change)=\\\"showHistoricWindow($event)\\\">Show Maintenance Window History</mat-slide-toggle>\\r\\n            <button pButton class=\\\"p-m-action\\\" style=\\\"margin:5px\\\" type=\\\"button\\\" (click) = \\\"showFilter()\\\" title=\\\"Advance Filter\\\"><i class=\\\"material-icons\\\">find_in_page</i></button>\\r\\n            <button pButton class=\\\"p-m-action\\\" type=\\\"button\\\" (click) = \\\"deleteAndCreatMultipleMData(isAccessPermission)\\\" title=\\\"Delete selected maintenance schedule and make the schedule in-effective.\\\"><i class=\\\"material-icons\\\">delete</i></button>\\r\\n            <button pButton class=\\\"p-m-action\\\" style=\\\"margin:5px\\\" type=\\\"button\\\" (click) = \\\"deleteWithoutCreatMultipleMData(isAccessPermission)\\\" title=\\\"Delete selected maintenance schedule but keep the schedule effective.\\\"><i class=\\\"material-icons\\\">delete_forever</i></button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <p-dataTable class=\\\"active-alert\\\" [value]=\\\"maintenanceSettings.arrMSetting\\\"  dataKey=\\\"id\\\" [responsive]=\\\"true\\\" [globalFilter]=\\\"gb\\\" #dt [rows]=\\\"numRows\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [resizableColumns]=\\\"true\\\" [(selection)]=\\\"selectedRowData\\\" (onFilter)=\\\"onFilterData($event)\\\">\\r\\n          <p-column [style]=\\\"{'width':'3%','text-align':'left'}\\\" field=\\\"id\\\" sortable=\\\"true\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n              <span title=\\\"Serial Number\\\">#</span>\\r\\n            </ng-template>\\r\\n            <ng-template let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\r\\n              {{ri + 1}}\\r\\n            </ng-template>\\r\\n          </p-column>\\r\\n          <p-column [style]=\\\"{'width':'2%'}\\\" selectionMode=\\\"multiple\\\"></p-column>\\r\\n          <p-column [style]=\\\"{'width':'11%'}\\\" field=\\\"schTypeStr\\\" [filter]=\\\"isShowFilter\\\" filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"true\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n              <span title=\\\"Schedule\\\">Schedule Type</span>\\r\\n            </ng-template>\\r\\n            <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n              <span title=\\\"{{data.schTypeStr}}\\\" #spanEle>{{getColor(spanEle, data)}}{{data.schTypeStr}}</span>\\r\\n            </ng-template>\\r\\n          </p-column>\\r\\n          <p-column [style]=\\\"{'width':'22%'}\\\" field=\\\"schStr\\\" [filter]=\\\"isShowFilter\\\" filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"true\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n              <span title=\\\"Schedule\\\">Schedule</span>\\r\\n            </ng-template>\\r\\n            <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n              <span title=\\\"{{data.schStr}}\\\">{{data.schStr}}</span>\\r\\n            </ng-template>\\r\\n          </p-column>\\r\\n          <p-column [style]=\\\"{'width':'20%'}\\\" field=\\\"tierName\\\" [filter]=\\\"isShowFilter\\\" filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"true\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n              <span title=\\\"Rule Name\\\">Vector Name</span>\\r\\n            </ng-template>\\r\\n             <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n               <span title=\\\"{{data.tierName === '*'? 'All': data.tierName.replace('PATTERN#','') === '*>*' ? 'All>All' : data.tierName.replace('PATTERN#','') === '*>*>*' ? 'All>All>All' : data.tierName.replace('PATTERN#','') === '*>*>*>*' ? 'All>All>All>All' : data.tierName.replace('PATTERN#','') === '*>*>*>*>*' ? 'All>All>All>All>All' : data.tierName.replace('PATTERN#','')}}\\\">{{data.tierName === '*'? 'All': data.tierName.replace('PATTERN#','') === '*>*' ? 'All>All' : data.tierName.replace('PATTERN#','') === '*>*>*' ? 'All>All>All' : data.tierName.replace('PATTERN#','') === '*>*>*>*' ? 'All>All>All>All' : data.tierName.replace('PATTERN#','') === '*>*>*>*>*' ? 'All>All>All>All>All' : data.tierName.replace('PATTERN#','')}}</span>\\r\\n             </ng-template>\\r\\n          </p-column>\\r\\n          <p-column [style]=\\\"{'width':'24%'}\\\" field=\\\"description\\\" [filter]=\\\"isShowFilter\\\" filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"true\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n              <span title=\\\"Description\\\">Description</span>\\r\\n            </ng-template>\\r\\n             <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n               <span title=\\\"{{data.description}}\\\">{{data.description}}</span>\\r\\n             </ng-template>\\r\\n          </p-column>\\r\\n          <p-column [style]=\\\"{'width':'18%'}\\\" field=\\\"upcomingTS\\\" [filter]=\\\"isShowFilter\\\" filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"mysort($event.field,$event.order,maintenanceSettings.arrMSetting)\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n              <span title=\\\"Upcoming Window\\\">Upcoming Maintenance Window</span>\\r\\n            </ng-template>\\r\\n             <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n               <span title=\\\"{{data.upcomingTS}}\\\">{{data.upcomingTS}}</span>\\r\\n             </ng-template>\\r\\n          </p-column>\\r\\n             <!--<p-column [style]=\\\"{'width':'4%'}\\\" field=\\\"action\\\" filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\">\\r\\n              <ng-template pTemplate=\\\"header\\\">\\r\\n                <span title=\\\"Action\\\">Action</span>\\r\\n              </ng-template>\\r\\n              <ng-template let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                  <button pButton [disabled]=\\\"data.deleteStatus == 3 ? true : false\\\" class=\\\"p-m-action\\\" type=\\\"button\\\" (click) = \\\"deleteAndCreatMData(data)\\\" title=\\\"Delete maintenance schedule and make the schedule in-effective.\\\"><i class=\\\"material-icons\\\">delete</i></button>\\r\\n                  <button pButton [disabled]=\\\"data.deleteStatus == 3 ? true : false\\\" class=\\\"p-m-action\\\" type=\\\"button\\\" (click) = \\\"deleteWithoutCreatMData(data)\\\" title=\\\"Delete maintenance schedule but keep the schedule effective.\\\"><i class=\\\"material-icons\\\">delete_forever</i></button>\\r\\n              </ng-template>\\r\\n            </p-column>-->\\r\\n        </p-dataTable>\\r\\n      </p-accordionTab>\\r\\n    </p-accordion>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"ui-g-12 ui-md-12 ui-lg-12 bottom-panel\\\" style=\\\"padding: 0px;\\\">\\r\\n  <div class=\\\"ui-g-4 ui-md-4 ui-lg-5\\\">\\r\\n    <label class=\\\"align-left label-padding\\\">Download As :</label>\\r\\n    <span title=\\\"Word\\\" class=\\\"icon alertgui-word\\\" style='margin-bottom: -3px; cursor:pointer' (click)='downloadMaintenanceData(\\\"WordFile\\\")'></span>\\r\\n    <span title=\\\"Excel\\\" class=\\\"icon alertgui-excel\\\" style='margin-bottom: -3px; cursor:pointer' (click)='downloadMaintenanceData(\\\"ExcelFile\\\")'></span>\\r\\n    <span title=\\\"PDF\\\" class=\\\"icon alertgui-pdf\\\" style='margin-bottom: -3px; cursor:pointer' (click)='downloadMaintenanceData(\\\"PDFFile\\\")'></span>\\r\\n  </div>\\r\\n  <div class=\\\"ui-g-8 ui-md-8 ui-lg-7\\\">\\r\\n    <label class=\\\"align-right label-padding\\\">Total {{alertMaintenanceService.totalAvailableRecords}} records found</label>\\r\\n  </div>\\r\\n</div>\\r\\n  \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-maintenance/alert-maintenance.component.html\n// module id = ../../../../../src/app/modules/alert/components/alert-maintenance/alert-maintenance.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Logger } from 'angular2-logger/core';\r\nimport { AlertMaintenanceService } from '../../services/alert-maintenance-services';\r\nimport { CommonServices } from '../../services/common-services';\r\nimport { MaintenanceSettings, MaintenanceSettingsData} from '../../commons/maintenance-data';\r\nimport { MaintenanceScheduleType, MaintenanceScheduleMonth, MaintenanceScheduleWeek, MaintenanceScheduleWeekDay, MaintenanceScheduleDay, MaintenanceScheduleHour} from \"../../interfaces/alert-maintenance-interface\";\r\nimport * as CONS from \"../../constants/alert-constant\";\r\nimport * as moment from 'moment'\r\nimport { SelectItem,ConfirmationService } from 'primeng/primeng';\r\n@Component({\r\n    selector: 'app-alert-maintenance',\r\n    templateUrl: './alert-maintenance.component.html',\r\n    styleUrls: ['./alert-maintenance.component.css'],\r\n    providers:[ConfirmationService]\r\n  })\r\n\r\nexport class AlertMaintenanceComponent implements OnInit\r\n{\r\n\r\n  /** this is used to store class Name */\r\n  className = \"AlertMaintenanceComponent\";\r\n\r\n  /** used to display message in gui */\r\n  msg: any;\r\n\r\n  /** this stores the panel height of left and table panel */\r\n  panelHeight: string;\r\n\r\n  counter: number[] =  [];\r\n\r\n  indiciesArrays: any[];\r\n\r\n  /** this is used to store  indicesLevel name to show in html*/\r\n  indicesLevel: string = \"\";\r\n\r\n  /** contains the  rules in the array to be selected  */\r\n  selectedIndiciesLevels = new Array();\r\n\r\n  /** this is used to store select pattern for get next indicies*/\r\n  selectPattenText: string[] = [];\r\n\r\n  vectorSaperator: string = \">\";\r\n\r\n  /** */\r\n  indiciesMultiLevels = new Array();\r\n\r\n  selectedIndiciesLevelItem: string[] = [];\r\n\r\n  /** this is used to store all alert miantenace data object */\r\n  maintenanceSettings: MaintenanceSettings;\r\n  \r\n  /** This is used to store filter data from data-table for download */\r\n  downloadMFilterData: MaintenanceSettings;\r\n\r\n  /** this is used to store arrays of alert maintenance data*/\r\n  maintenanceSettingsData: MaintenanceSettingsData;\r\n\r\n  /** this is used to store all maintenance schedule type for dropdown */\r\n  maintenanceScheduleType: MaintenanceScheduleType[];\r\n\r\n  /** this is used to store select maintenance schedule type*/\r\n  maintenanceScheduleTypeItem: any = \"\";\r\n\r\n  scheduleType: string[] = [];\r\n\r\n  /** this is used to store maintenance schedule hours for dropdown */\r\n  maintenanceScheduleFromHour: MaintenanceScheduleHour[];\r\n\r\n   /** this is used to store maintenance schedule hours for dropdown */\r\n   maintenanceScheduleToHour: MaintenanceScheduleHour[];\r\n\r\n  /** this is used to store miantenance schedule fromhour*/\r\n  maintenanceScheduleFromHourItem: any = \"\";\r\n\r\n  /** this is used to store miantenance schedule tohour*/\r\n  maintenanceScheduleToHourItem: any = \"\";\r\n\r\n  /** this is used to store all maintenance schedule day for dropdown */\r\n  maintenanceScheduleDay: MaintenanceScheduleDay[];\r\n\r\n  /**  this is used to store miantenance schedule day */\r\n  maintenanceScheduleDayItem: any = \"\";\r\n\r\n  /** this is used to store all maintenance schedule week for dropdown */\r\n  maintenanceScheduleWeek: MaintenanceScheduleWeek[];\r\n\r\n  /** this is used to store maintenance schedule week */\r\n  maintenanceScheduleWeekItem: any = \"\";\r\n\r\n  /** this is used to store all maintenance schedule week day for dropdown */\r\n  maintenanceScheduleWeekDay: MaintenanceScheduleWeekDay[];\r\n\r\n  /** this is used to store maintenance schedule week day */\r\n  maintenanceScheduleWeekDayItem: any = \"\";\r\n\r\n  /** this is used to store all maintenance schedule month*/\r\n  maintenanceScheduleMonth: MaintenanceScheduleMonth[];\r\n\r\n  /** this is used to store maintenance schedule month */\r\n  maintenanceScheduleMonthItem: any = \"\";\r\n\r\n  isExcludeTestMetrics: boolean;\r\n\r\n  isEveryDayofEveryMonth: boolean;\r\n  isDayofEveryMonth: boolean;\r\n  isLastDayofEveryMonth: boolean;\r\n  isWeekDayofEveryMonth: boolean;\r\n  isDayofEveryYear: boolean;\r\n  isWeekDayofEveryYear:boolean;\r\n  isCustom: boolean;\r\n\r\n  //this will store start date if custom filter is selected\r\n  fromDate: Date = null;\r\n  defaultfromDate: Date=new Date();\r\n  toDate: Date = null;\r\n\r\n  /**  this is used to store description of maintenance*/\r\n  description: string = \"\";\r\n\r\n  /** this is used to enable/disable table filter */\r\n  isShowFilter: boolean;\r\n\r\n  /** this is used show history of maintenace */\r\n  isShowHistoricWindow: boolean = false;\r\n\r\n  /**flags is used to inform tab is open or closed*/\r\n  openFirstAccordian: boolean = true;\r\n  openSecondAccordian: boolean = true;\r\n\r\n  /**Used to set the number of rows that to display in table*/\r\n  numRows: number = 9;\r\n\r\n  /**  this is used to hold access permission flage*/\r\n  isAccessPermission: boolean;\r\n  \r\n\r\n  /**Used to store selected records from table */\r\n  selectedRowData: MaintenanceSettingsData[] =[];\r\n\r\n  constructor(private logger: Logger, public alertMaintenanceService: AlertMaintenanceService, public commonServices: CommonServices,private confirmationService:ConfirmationService)\r\n  {\r\n    this.msg = this.alertMaintenanceService.messages;\r\n    this.defaultfromDate = new Date();\r\n    this.panelHeight = window.innerHeight - 400 + \"px\";\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.alertMaintenanceService.showMessage(\"\", \"\", \"\").then(messages => this.msg = messages);\r\n    this.setScheduleTypeFlag();\r\n    this.indicesLevel= CONS.MAINTAINANCE_WINDOW_CONSTANT.COL_INDICES;\r\n    this.maintenanceScheduleType = CONS.MAINTENANCE_SCHEDULE_TYPE;\r\n    this.maintenanceScheduleTypeItem = this.maintenanceScheduleType[6].value;\r\n    this.maintenanceScheduleMonth = CONS.MAINTENANCE_SCHEDULE_MONTH;\r\n    this.maintenanceScheduleToHour = CONS.MAINTENANCE_SCHEDULE_TO_HOUR;\r\n    this.maintenanceScheduleFromHour = CONS.MAINTENANCE_SCHEDULE_FROM_HOUR;\r\n    this.maintenanceScheduleDay = CONS.MAINTENANCE_SCHEDULE_DAY;\r\n    this.maintenanceScheduleWeek = CONS.MAINTENANCE_SCHEDULE_WEEK;\r\n    this.maintenanceScheduleWeekDay = CONS.MAINTENANCE_SCHEDULE_WEEK_DAY;\r\n    if(this.maintenanceScheduleTypeItem.scheduleTitle === CONS.SCHEDULE_TYPE_CONST.CUSTOM)\r\n       this.setScheduleCustomTime();\r\n    this.maintenanceSettings = new MaintenanceSettings();\r\n    this.maintenanceSettingsData = new MaintenanceSettingsData();\r\n    this.maintenanceSettings.user = this.commonServices.$loginUser;\r\n    this.maintenanceSettings.reqType = CONS.MAINTAINANCE_WINDOW_CONSTANT.GET_ACTIVE_MAINTENANCE_WITH_INDICES;\r\n    let accessControl = this.alertMaintenanceService.getAccessControlData(CONS.ALERT_ACCESS_CONTROL.MODULE, CONS.ALERT_ACCESS_CONTROL.ALERT_MIANTENANCE_WINDOW).subscribe(\r\n      res=>\r\n      {\r\n        this.setAccessData(res);\r\n      },\r\n      ()=>\r\n      {\r\n        accessControl.unsubscribe();\r\n      }\r\n    )\r\n    this.getAllMaintenanceData(this.maintenanceSettings);\r\n  }\r\n\r\n  /**This is used to set alert access privilages setting data after deserialize the original data got from server and set it to alertAccessPrivilages variable for future use*/ \r\n  setAccessData(res) \r\n  {\r\n    try\r\n    {\r\n      this.logger.info(this.className, \"setAccessData\", \" response = \" + JSON.stringify(res));\r\n      if(res === null || res.All === undefined ||res.All === CONS.ACCESS_CONTROL_MODE.NO_PERMISSION || res.All === CONS.ACCESS_CONTROL_MODE.READ_MODE)\r\n        this.isAccessPermission = true;\r\n      else\r\n        this.isAccessPermission = false; \r\n    }\r\n    catch (e)\r\n    { \r\n      this.logger.error(this.className, \"setAccessData\", e);\r\n    }\r\n  }\r\n\r\n  /** this method is used to set default flage */\r\n  setScheduleTypeFlag()\r\n  {\r\n    this.isExcludeTestMetrics =  false;\r\n    this.isEveryDayofEveryMonth = false;\r\n    this.isDayofEveryMonth = false;\r\n    this.isLastDayofEveryMonth = false;\r\n    this.isWeekDayofEveryMonth = false;\r\n    this.isDayofEveryYear = false;\r\n    this.isWeekDayofEveryYear = false;\r\n    this.isCustom = false;\r\n    this.isShowFilter = false;\r\n  }\r\n\r\n  /** this method is used to get all maintenance data */\r\n  getAllMaintenanceData(maintenanceSettings: MaintenanceSettings)\r\n  {\r\n    //This is used to form schedule type array used in table\r\n    for(let i = 1; i < CONS.MAINTENANCE_SCHEDULE_TYPE.length; i++)\r\n    {\r\n      if(i<=5)\r\n        this.scheduleType[i-1] = CONS.MAINTENANCE_SCHEDULE_TYPE[i].label;\r\n      else\r\n        this.scheduleType[i] = CONS.MAINTENANCE_SCHEDULE_TYPE[i].label;\r\n\r\n      if(i==5)\r\n        this.scheduleType[5] = \"\";\r\n    }\r\n    this.scheduleType.push(CONS.MAINTENANCE_SCHEDULE_TYPE[0].label);\r\n    this.commonServices.showProgressBar(\"Getting data from server, Please wait...\");\r\n    this.alertMaintenanceService.getMaintenanceAlertData(maintenanceSettings).subscribe(\r\n    res =>\r\n    {\r\n      this.setMaintenanceAlertData(res);\r\n    },\r\n    error =>\r\n    {\r\n      this.commonServices.isHideProgress = true;\r\n      this.alertMaintenanceService.showMessage(\"error\", \"Error\", error);\r\n      this.logger.error(this.className, \"addMaintenanceData\", \"Error in getting data from server.\");\r\n    });\r\n  }\r\n  \r\n  /** This method is used set data in Indices level*/\r\n  setMaintenanceIndicesLevel(res)\r\n  {\r\n    this.selectedIndiciesLevels = [];\r\n    if(this.indiciesMultiLevels.length == 0)\r\n      this.indiciesMultiLevels = [];\r\n    if(res.indicesList.length != 0)\r\n    {\r\n      this.selectedIndiciesLevels.push({label: 'All', value: 'all', toolTip: 'All'});\r\n      this.selectedIndiciesLevels.push({label: 'Select Pattern', value: 'Select Pattern', toolTip: 'Select Pattern'});\r\n      res.indicesList.forEach(element => {\r\n        this.selectedIndiciesLevels.push({label: element, value: element, toolTip: element});\r\n      });\r\n      this.indiciesMultiLevels.push(this.selectedIndiciesLevels);\r\n    }\r\n  }\r\n  \r\n  /** This method is used to get data for next Indices Level */\r\n  onChangeIndicies(indiciesLevel: number, selectedIndicesOption: string)\r\n  {\r\n    this.selectedIndiciesLevelItem.splice(indiciesLevel, this.selectedIndiciesLevelItem.length);\r\n    this.selectedIndiciesLevelItem.push(selectedIndicesOption);\r\n\r\n    this.selectPattenText.splice(indiciesLevel, this.selectPattenText.length);\r\n    if (selectedIndicesOption === \"Select Pattern\")\r\n    {\r\n      this.indiciesMultiLevels.splice(indiciesLevel + 1, this.indiciesMultiLevels.length);\r\n      this.selectedIndiciesLevels.push(selectedIndicesOption);\r\n      return;\r\n    }\r\n    this.indiciesMultiLevels.splice(indiciesLevel + 1, this.indiciesMultiLevels.length);\r\n    this.selectPattenText.push(selectedIndicesOption);\r\n    this.selectedIndiciesLevels = [];\r\n    this.selectedIndiciesLevels.push(selectedIndicesOption);\r\n    let tmpSelectedIndices = [];\r\n    this.selectPattenText.forEach((element, index) =>\r\n    {\r\n      let tmpSIndices = [];\r\n      if(this.selectedIndiciesLevelItem[index] === \"Select Pattern\")\r\n        tmpSIndices.push(CONS.PATTERN_CONST_NAME + element);\r\n      else\r\n        tmpSIndices.push(element);\r\n      \r\n      tmpSelectedIndices.push(tmpSIndices);\r\n    });\r\n    this.getMaintainanceIndiciesLabel(tmpSelectedIndices);\r\n  }\r\n  \r\n  /** This method is used to get data for next Indices Level when apply pattern*/\r\n  applySelectPattern(selectPatternText, indiciesLevel)\r\n  {\r\n    if (this.selectedIndiciesLevelItem[indiciesLevel] === \"Select Pattern\" && (this.selectPattenText[indiciesLevel] === undefined || this.selectPattenText[indiciesLevel] === \"\"))\r\n    {\r\n      this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please provide pattern before apply Maintenance Schedule.\");\r\n      return;\r\n    }\r\n    this.indiciesMultiLevels.splice(indiciesLevel + 1, this.indiciesMultiLevels.length);\r\n    this.selectPattenText.splice(indiciesLevel + 1, this.selectPattenText.length);\r\n    this.selectedIndiciesLevelItem.splice(indiciesLevel + 1, this.selectedIndiciesLevelItem.length);\r\n    this.selectedIndiciesLevels = [];\r\n    if (selectPatternText === \"\")\r\n    {\r\n      this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please enter a valid pattern\");\r\n      return;\r\n    }\r\n    this.selectedIndiciesLevels.push(CONS.PATTERN_CONST_NAME + selectPatternText);\r\n    let tmpSelectedIndices = [];\r\n    this.selectPattenText.forEach((element, index) =>\r\n    {\r\n      let tmpSIndices = [];\r\n      if(this.selectedIndiciesLevelItem[index] === \"Select Pattern\")\r\n        tmpSIndices.push(CONS.PATTERN_CONST_NAME + element);\r\n      else\r\n        tmpSIndices.push(element);\r\n      \r\n      tmpSelectedIndices.push(tmpSIndices);\r\n    });\r\n    this.getMaintainanceIndiciesLabel(tmpSelectedIndices);\r\n  }\r\n\r\n  getMaintainanceIndiciesLabel(selectedIndicesElements)\r\n  {\r\n    let maintenanceSettings = new MaintenanceSettings();\r\n    maintenanceSettings.selectedIndices = selectedIndicesElements;\r\n    this.selectedIndiciesLevels = [];\r\n\r\n    //getting next level indices data and set it to next level indices dropdown\r\n    this.alertMaintenanceService.getMaintenanceIndices(maintenanceSettings).subscribe(\r\n      res =>\r\n      {\r\n        this.setMaintenanceIndicesLevel(res);\r\n      },\r\n      error =>\r\n      {\r\n        this.commonServices.isHideProgress = true;\r\n        this.alertMaintenanceService.showMessage(\"error\", \"Error\", error);\r\n        this.logger.error(this.className, \"addMaintenanceData\", \"Error in getting data from server.\");\r\n      },\r\n    );\r\n  }\r\n  /** set schedule type when */\r\n  onChangeScheduleType(event)\r\n  {\r\n    this.setScheduleTypeFlag()\r\n    if(event.value.scheduleTitle === CONS.SCHEDULE_TYPE_CONST.EVERY_DAY_OF_EVERY_MONTH)\r\n      this.isEveryDayofEveryMonth = true;\r\n    else if(event.value.scheduleTitle === CONS.SCHEDULE_TYPE_CONST.DAY_OF_EVERY_MONTH)\r\n      this.isDayofEveryMonth = true;\r\n    else if(event.value.scheduleTitle === CONS.SCHEDULE_TYPE_CONST.LAST_DAY_OF_EVERY_MONTH)\r\n      this.isLastDayofEveryMonth = true;\r\n    else if(event.value.scheduleTitle === CONS.SCHEDULE_TYPE_CONST.WEEKDAY_OF_EVERY_MONTH)\r\n      this.isWeekDayofEveryMonth = true;\r\n    else if(event.value.scheduleTitle === CONS.SCHEDULE_TYPE_CONST.DAY_OF_EVERY_YEAR)\r\n      this.isDayofEveryYear = true;\r\n    else if(event.value.scheduleTitle === CONS.SCHEDULE_TYPE_CONST.WEEKDAY_OF_EVERY_YEAR)\r\n      this.isWeekDayofEveryYear = true;\r\n    else if(event.value.scheduleTitle === CONS.SCHEDULE_TYPE_CONST.CUSTOM)\r\n      this.setScheduleCustomTime()\r\n    this.resetMaintenanceScheduleItem();\r\n  }\r\n  \r\n  /** This method is used reset configure  maintenance schedule after add */\r\n  resetMaintenanceScheduleItem()\r\n  {\r\n    //this.maintenanceScheduleTypeItem = \"\";\r\n    this.maintenanceScheduleFromHourItem = \"\";\r\n    this.maintenanceScheduleToHourItem = \"\";\r\n    this.maintenanceScheduleDayItem = \"\" ;\r\n    this.maintenanceScheduleWeekItem = \"\";\r\n    this.maintenanceScheduleWeekDayItem = \"\";\r\n    this.maintenanceScheduleMonthItem = \"\";\r\n  }\r\n\r\n  /** This method is responsible for add record in maintenance table */\r\n  addMaintenanceData(isAccessPermission: boolean)\r\n  {\r\n    if(isAccessPermission)\r\n      return;\r\n    let maintenanceSettings = new MaintenanceSettings();\r\n    let maintenanceSettingsData = new MaintenanceSettingsData();\r\n\r\n    if (this.selectedIndiciesLevelItem.length === 0)\r\n    {\r\n      this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select Indices Level to apply Maintenance Schedule.\");\r\n      return;\r\n    }\r\n    if (this.selectedIndiciesLevelItem[this.selectedIndiciesLevelItem.length - 1] === \"Select Pattern\" && (this.selectPattenText.length === 0 || this.selectPattenText[this.selectPattenText.length - 1] === \"\"))\r\n    {\r\n      this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please provide pattern before apply Maintenance Schedule.\");\r\n      return;\r\n    }\r\n    if (this.maintenanceScheduleTypeItem.scheduleTitle === undefined || this.maintenanceScheduleTypeItem.scheduleTitle === \"\")\r\n    {\r\n      this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select Maintenance Schedule type.\");\r\n      return;\r\n    }\r\n    if (!this.isCustom)\r\n    {\r\n      if(this.isWeekDayofEveryMonth || this.isWeekDayofEveryYear )\r\n      {\r\n        if(this.maintenanceScheduleWeekItem.weekId == undefined)\r\n        {\r\n          this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select Week.\");\r\n          return;\r\n        }\r\n        if(this.maintenanceScheduleWeekDayItem.weekDayId == undefined)\r\n        {\r\n          this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select Week Day.\");\r\n          return;\r\n        }\r\n      }\r\n      if(this.isDayofEveryYear || this.isWeekDayofEveryYear)\r\n      {\r\n        if(this.maintenanceScheduleMonthItem.monthTitle == undefined)\r\n        {\r\n          this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select Month.\");\r\n          return;\r\n        }\r\n      }\r\n      if(this.isDayofEveryMonth || this.isDayofEveryYear){\r\n        if(this.maintenanceScheduleDayItem.dayId == undefined)\r\n        {\r\n          this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select Day.\");\r\n          return;\r\n        }\r\n      }\r\n      if(this.maintenanceScheduleFromHourItem.hourId == undefined)\r\n      {\r\n        this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select Start hour.\");\r\n        return;\r\n      }\r\n      if(this.maintenanceScheduleToHourItem.hourId == undefined)\r\n      {\r\n        this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select End hour.\");\r\n        return;\r\n      }\r\n      if(this.maintenanceScheduleFromHourItem.hourId > this.maintenanceScheduleToHourItem.hourId)\r\n      {\r\n        this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Start hour cannot be greater than end hour.\");\r\n        return;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if (this.fromDate === undefined || this.fromDate === null)\r\n      {\r\n        this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"From date and time cannot be blank. Please provide from date.\");\r\n        return;\r\n      }\r\n\r\n      if (this.toDate === undefined || this.toDate === null)\r\n      {\r\n        this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"To date and time cannot be blank. Please provide to date.\");\r\n        return;\r\n      }\r\n      if (this.maintenanceScheduleFromHourItem.hourId == undefined)\r\n      {\r\n        this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select Start hour.\");\r\n        return;\r\n      }\r\n      if (this.maintenanceScheduleToHourItem.hourId == undefined)\r\n      {\r\n        this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select End hour.\");\r\n        return;\r\n      }\r\n\r\n      if ((this.fromDate.getTime() > this.toDate.getTime()) || ((this.fromDate.getTime() === this.toDate.getTime()) && this.maintenanceScheduleFromHourItem.hourId >= this.maintenanceScheduleToHourItem.hourId))\r\n      {\r\n        this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"End date and time should be greater than Start date and time.\");\r\n        return;\r\n      }\r\n      else if((this.fromDate.getTime() === this.toDate.getTime()) && this.maintenanceScheduleToHourItem.hourId === 0)\r\n      {\r\n        this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"End date and time should not be equal to Start date and time.\");\r\n        return;\r\n      }\r\n    }\r\n    let vectorString: string;\r\n    let tmpIndicesNotAvailable = false;\r\n    let isPatterType = false;\r\n    this.selectedIndiciesLevelItem.forEach((vector,index) => {\r\n        \r\n        if(vectorString == undefined)\r\n        {\r\n          if(vector === \"all\")\r\n            vectorString = \"*\";\r\n          else if (vector === \"Select Pattern\")\r\n          {\r\n            if(this.selectPattenText[index] === undefined)\r\n            {\r\n              tmpIndicesNotAvailable = true;\r\n              return;\r\n            }\r\n            vectorString = this.selectPattenText[index];\r\n            isPatterType = true;\r\n          }  \r\n          else\r\n            vectorString = vector;\r\n        }\r\n        else\r\n        {\r\n          if(vector === \"all\")\r\n            vectorString = vectorString + this.vectorSaperator + \"*\";\r\n          else if (vector === \"Select Pattern\")\r\n          {\r\n            if(this.selectPattenText[index] === undefined)\r\n            {\r\n              tmpIndicesNotAvailable = true;\r\n              return;\r\n            }\r\n            vectorString = vectorString + this.vectorSaperator + this.selectPattenText[index];\r\n            isPatterType = true;\r\n          }\r\n          else\r\n            vectorString  = vectorString + this.vectorSaperator + vector;\r\n        }\r\n    });\r\n    maintenanceSettingsData.tierName = vectorString;\r\n    \r\n    /*if(isPatterType)\r\n      maintenanceSettingsData.patternType = 1;\r\n     */\r\n    if(tmpIndicesNotAvailable)\r\n    {\r\n      this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please provide pattern before apply Maintenance Schedule.\");\r\n      return;\r\n    }\r\n    if (maintenanceSettingsData.tierName === undefined || maintenanceSettingsData.tierName.length === 0 || maintenanceSettingsData.tierName === \"\")\r\n    {\r\n      this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select Indices Level to apply Maintenance Schedule.\");\r\n      return;\r\n    }\r\n    maintenanceSettings.reqType = CONS.MAINTAINANCE_WINDOW_CONSTANT.ADD_MAINTENANCE_CONFIG_SETTING;\r\n    maintenanceSettings.user = this.commonServices.$loginUser;\r\n    maintenanceSettingsData.scheduleType = this.maintenanceScheduleTypeItem.scheduleId;\r\n    maintenanceSettingsData.deleteStatus = CONS.MAINTAINANCE_WINDOW_CONSTANT.ADDED_MAINTENANCE_PERIOD;\r\n    maintenanceSettingsData.description = this.description;\r\n    if(this.isEveryDayofEveryMonth)\r\n    {\r\n      maintenanceSettingsData.fromHour = this.maintenanceScheduleFromHourItem.hourId;\r\n      maintenanceSettingsData.toHour = this.maintenanceScheduleToHourItem.hourId;\r\n    }\r\n    else if(this.isDayofEveryMonth)\r\n    {\r\n      maintenanceSettingsData.day = this.maintenanceScheduleDayItem.dayId;\r\n      maintenanceSettingsData.fromHour = this.maintenanceScheduleFromHourItem.hourId;\r\n      maintenanceSettingsData.toHour = this.maintenanceScheduleToHourItem.hourId;\r\n    }\r\n    else if(this.isLastDayofEveryMonth)\r\n    {\r\n      maintenanceSettingsData.fromHour = this.maintenanceScheduleFromHourItem.hourId;\r\n      maintenanceSettingsData.toHour = this.maintenanceScheduleToHourItem.hourId;\r\n    }\r\n    else if(this.isWeekDayofEveryMonth)\r\n    {\r\n      maintenanceSettingsData.week = this.maintenanceScheduleWeekItem.weekId;\r\n      maintenanceSettingsData.day = this.maintenanceScheduleWeekDayItem.weekDayId;\r\n      maintenanceSettingsData.fromHour = this.maintenanceScheduleFromHourItem.hourId;\r\n      maintenanceSettingsData.toHour = this.maintenanceScheduleToHourItem.hourId;\r\n    }\r\n    else if(this.isDayofEveryYear)\r\n    {\r\n      maintenanceSettingsData.month = this.maintenanceScheduleMonthItem.monthId;\r\n      maintenanceSettingsData.day = this.maintenanceScheduleDayItem.dayId;\r\n      maintenanceSettingsData.fromHour = this.maintenanceScheduleFromHourItem.hourId;\r\n      maintenanceSettingsData.toHour = this.maintenanceScheduleToHourItem.hourId;\r\n    }\r\n    else if(this.isWeekDayofEveryYear)\r\n    {\r\n      maintenanceSettingsData.week = this.maintenanceScheduleWeekItem.weekId;\r\n      maintenanceSettingsData.day = this.maintenanceScheduleWeekDayItem.weekDayId;\r\n      maintenanceSettingsData.month = this.maintenanceScheduleMonthItem.monthId;\r\n      maintenanceSettingsData.fromHour = this.maintenanceScheduleFromHourItem.hourId;\r\n      maintenanceSettingsData.toHour = this.maintenanceScheduleToHourItem.hourId;\r\n    }\r\n    else\r\n    {\r\n      let customFromDate = new Date(this.fromDate);\r\n      let customToDate = new Date(this.toDate);\r\n      let fromHour = this.maintenanceScheduleFromHourItem.hourId;\r\n      let toHour = this.maintenanceScheduleToHourItem.hourId;\r\n      if((customToDate.getTime() > customFromDate.getTime()) && toHour === 0)\r\n      {\r\n        customToDate.setTime(customToDate.getTime() - CONS.TIME_IN_MILIS.DAY);\r\n        toHour = 24;\r\n      }\r\n      if(fromHour < 10 && toHour > 10)\r\n      {\r\n        maintenanceSettingsData.startTime =  moment(customFromDate).format('MM/DD/YYYY') + \" 0\" +fromHour+\":00:00\";\r\n        maintenanceSettingsData.endTime =  moment(customToDate).format('MM/DD/YYYY')+ \" \"+(toHour - 1)+\":59:59\";\r\n      }\r\n      else if(toHour < 10 && fromHour > 9)\r\n      {\r\n        maintenanceSettingsData.startTime =  moment(customFromDate).format('MM/DD/YYYY') + \" \" +fromHour+\":00:00\";\r\n        maintenanceSettingsData.endTime =  moment(customToDate).format('MM/DD/YYYY')+ \" 0\"+(toHour - 1)+\":59:59\";\r\n      }\r\n      else if(fromHour < 10 && toHour <= 10)\r\n      {\r\n        maintenanceSettingsData.startTime =  moment(customFromDate).format('MM/DD/YYYY') + \" 0\" +fromHour+\":00:00\";\r\n        maintenanceSettingsData.endTime =  moment(customToDate).format('MM/DD/YYYY')+ \" 0\"+(toHour - 1)+\":59:59\";\r\n      }\r\n      else\r\n      {\r\n        maintenanceSettingsData.startTime =  moment(customFromDate).format('MM/DD/YYYY') + \" \" +fromHour+\":00:00\";\r\n        maintenanceSettingsData.endTime =  moment(customToDate).format('MM/DD/YYYY')+ \" \"+(toHour - 1)+\":59:59\";\r\n\r\n      }\r\n    }\r\n    let tmpMSettingsData = [];\r\n    tmpMSettingsData.push(maintenanceSettingsData);\r\n    maintenanceSettings.arrMSetting = tmpMSettingsData;\r\n    this.confirmationService.confirm({\r\n      message: 'Do you want to apply maintenance schedule. The rule is effective as soon as the maintenance is applied ?',\r\n      accept: () =>\r\n      {\r\n        this.commonServices.showProgressBar(\"Going to applied maintenance duration. Please wait...\");\r\n        this.alertMaintenanceService.applyMaintenanceSettings(maintenanceSettings).subscribe(\r\n          res =>\r\n          {\r\n            this.commonServices.progressValue = 100;\r\n            this.commonServices.isHideProgress = true;\r\n            if(res.status == 200)\r\n              this.alertMaintenanceService.showMessage(\"success\" ,\"Success\", res.msg);\r\n            else\r\n            {\r\n              this.alertMaintenanceService.showMessage(\"error\" ,\"Error\", res.msg);\r\n              return;\r\n            }\r\n            this.selectedRowData = [];\r\n            res.arrMSetting.forEach(element =>\r\n            {\r\n              if(element.upcomingTS !== \"\" || this.isShowHistoricWindow)\r\n                this.maintenanceSettings.arrMSetting = this.maintenanceSettings.arrMSetting.concat(element);\r\n            });\r\n            this.downloadMFilterData = this.maintenanceSettings;\r\n            this.alertMaintenanceService.totalAvailableRecords = this.maintenanceSettings.arrMSetting.length;\r\n          },\r\n          error =>{\r\n            this.commonServices.isHideProgress = true;\r\n            this.alertMaintenanceService.showMessage(\"error\", \"Error\", error);\r\n            this.logger.error(this.className, \"addMaintenanceData\", \"Error in getting data from server.\");\r\n          },\r\n        );\r\n        this.resetConfigureMaintenanceSchedule();\r\n      },\r\n      reject: () => {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  resetConfigureMaintenanceSchedule()\r\n  {\r\n    this.indiciesMultiLevels.splice(1,this.indiciesMultiLevels.length);\r\n    this.selectedIndiciesLevelItem.splice(0,this.selectedIndiciesLevelItem.length);\r\n    this.maintenanceScheduleTypeItem = \"\";\r\n    this.description = \"\";\r\n    this.setScheduleTypeFlag();\r\n    this.resetMaintenanceScheduleItem();\r\n  }\r\n\r\n  /*editMSetting(arrMsetting: MaintenanceSettingsData[])\r\n  {\r\n    this.resetMaintenanceScheduleItem();\r\n    this.selectedIndiciesLevelItem = [];\r\n    this.indiciesMultiLevels = [];\r\n    for(let i = 0; i < CONS.MAINTENANCE_SCHEDULE_TYPE.length; i++)\r\n    {\r\n      if(CONS.MAINTENANCE_SCHEDULE_TYPE[i].value.scheduleId === arrMsetting[0].scheduleType)\r\n      {\r\n        this.onChangeScheduleType(CONS.MAINTENANCE_SCHEDULE_TYPE[i]);\r\n        for(let i = 0; i < CONS.MAINTENANCE_SCHEDULE_HOUR.length; i++)\r\n        {\r\n          if(arrMsetting[0].fromHour === CONS.MAINTENANCE_SCHEDULE_HOUR[i].value.hourId)\r\n          {\r\n            this.maintenanceScheduleFromHourItem = CONS.MAINTENANCE_SCHEDULE_HOUR[i].value.hourTitle;\r\n            break;\r\n          }\r\n        }\r\n        for(let i = 0; i < CONS.MAINTENANCE_SCHEDULE_HOUR.length; i++)\r\n        {\r\n          if(arrMsetting[0].toHour === CONS.MAINTENANCE_SCHEDULE_HOUR[i].value.hourId)\r\n          {\r\n            this.maintenanceScheduleToHourItem = CONS.MAINTENANCE_SCHEDULE_HOUR[i].value.hourTitle;\r\n            break;\r\n          }\r\n        }\r\n        for(let i = 0; i < CONS.MAINTENANCE_SCHEDULE_DAY.length; i++)\r\n        {\r\n          if(arrMsetting[0].day === CONS.MAINTENANCE_SCHEDULE_DAY[i].value.dayId)\r\n          {\r\n            this.maintenanceScheduleDayItem = CONS.MAINTENANCE_SCHEDULE_DAY[i].value.dayTitle;\r\n            break;\r\n          }\r\n        }\r\n        for(let i = 0; i < CONS.MAINTENANCE_SCHEDULE_WEEK_DAY.length; i++)\r\n        {\r\n          if(arrMsetting[0].day === CONS.MAINTENANCE_SCHEDULE_WEEK_DAY[i].value.weekDayId)\r\n          {\r\n            this.maintenanceScheduleDayItem = CONS.MAINTENANCE_SCHEDULE_WEEK_DAY[i].value.weekDayTitle;\r\n            break;\r\n          }\r\n        }\r\n        for(let i = 0; i < CONS.MAINTENANCE_SCHEDULE_MONTH.length; i++)\r\n        {\r\n          if(arrMsetting[0].month === CONS.MAINTENANCE_SCHEDULE_MONTH[i].value.monthId)\r\n          {\r\n            this.maintenanceScheduleDayItem = CONS.MAINTENANCE_SCHEDULE_MONTH[i].value.monthTitle;\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    let selectedIndicesElements: string[] = arrMsetting[0].tierName.split(\",\");\r\n    for(let i =0; i < selectedIndicesElements.length; i++)\r\n    {\r\n      this.selectedIndiciesLevelItem = [];\r\n      this.selectedIndiciesLevelItem.push(selectedIndicesElements[i]);\r\n      this.selectedIndicesElements.push(this.selectedIndiciesLevelItem);\r\n      this.maintenanceSettings.selectedIndices = this.selectedIndicesElements;\r\n      this.getMaintainanceIndiciesLabel(this.maintenanceSettings);\r\n    }\r\n  }*/\r\n\r\n  showFilter()\r\n  {\r\n    this.isShowFilter = !this.isShowFilter;\r\n  }\r\n  \r\n  /** This method is used to show all future maintenance as well as past maintenance */\r\n  showHistoricWindow(event)\r\n  {\r\n    let maintenanceSettings = new MaintenanceSettings();\r\n    let maintenanceSettingsData = new MaintenanceSettingsData();\r\n\r\n    if(this.isShowHistoricWindow === true)\r\n    {\r\n      maintenanceSettings.reqType = CONS.MAINTAINANCE_WINDOW_CONSTANT.GET_ALL_MAINTENANCE;\r\n    }\r\n    else\r\n    {\r\n      maintenanceSettings.reqType = CONS.MAINTAINANCE_WINDOW_CONSTANT.GET_ACTIVE_MAINTENANCE;\r\n    }\r\n    let tmpMSettingsData = [];\r\n    tmpMSettingsData.push(maintenanceSettingsData);\r\n    maintenanceSettings.arrMSetting = tmpMSettingsData;\r\n    this.commonServices.showProgressBar(\"Getting Maintenance History data from server, Please wait...\");\r\n    this.alertMaintenanceService.getMaintenanceAlertData(maintenanceSettings).subscribe(\r\n      res =>\r\n      {\r\n        this.setMaintenanceAlertData(res);\r\n      },\r\n      error =>\r\n      {\r\n        this.commonServices.isHideProgress = true;\r\n        this.alertMaintenanceService.showMessage(\"error\", \"Error\", error);\r\n        this.logger.error(this.className, \"addMaintenanceData\", \"Error in getting data from server.\");\r\n      });\r\n  }\r\n  \r\n  /** This method is used to delete multiple record from maintenance table for effective scheduling*/\r\n  deleteAndCreatMultipleMData(isAccessPermission: boolean)\r\n  {\r\n    if(isAccessPermission)\r\n      return;\r\n    let maintenanceSettings = new MaintenanceSettings();\r\n    maintenanceSettings.reqType = CONS.MAINTAINANCE_WINDOW_CONSTANT.DELETE_MAINTENANCE_CONFIG_SETTING;\r\n\r\n    let tmpMSettingsData = new Array<MaintenanceSettingsData>();\r\n    this.selectedRowData.forEach(element => {\r\n      if (element.deleteStatus != CONS.MAINTAINANCE_WINDOW_CONSTANT.PURGE_MAINTENANCE_PERIOD)\r\n      {\r\n        element.deleteStatus = CONS.MAINTAINANCE_WINDOW_CONSTANT.DELETE_AND_CREATE_DATA_FOR_MAINTENANCE_PERIOD;\r\n        tmpMSettingsData.push(element);\r\n      }\r\n    });\r\n\r\n    maintenanceSettings.arrMSetting = tmpMSettingsData;\r\n    if (maintenanceSettings.arrMSetting.length <= 0)\r\n    {\r\n      this.selectedRowData = [];\r\n      this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select at least one Record to delete.\");\r\n      return;\r\n    }\r\n    this.confirmationService.confirm({\r\n      message: 'Do you want to delete the selected maintenance schedule and make the schedule in-effective? \\n This option will regenerate the data for the deleted maintenance duration.',\r\n      accept: () =>\r\n      {\r\n        this.commonServices.showProgressBar(\"Going to delete applied maintenance duration. Please wait...\");\r\n        this.alertMaintenanceService.applyMaintenanceSettings(maintenanceSettings).subscribe(\r\n        res =>\r\n        {\r\n          this.setAddDeleteRecords(res);\r\n        },\r\n        error =>\r\n        {\r\n          this.commonServices.isHideProgress = true;\r\n          this.alertMaintenanceService.showMessage(\"error\", \"Error\", error);\r\n          this.logger.error(this.className, \"addMaintenanceData\", \"Error in getting data from server.\");\r\n        });\r\n      },\r\n      reject: () => {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  /** This method is used to delete multiple record from maintenance table for in-effective scheduling*/\r\n  deleteWithoutCreatMultipleMData(isAccessPermission: boolean)\r\n  {\r\n    if(isAccessPermission)\r\n      return;\r\n    let maintenanceSettings = new MaintenanceSettings();\r\n    maintenanceSettings.reqType = CONS.MAINTAINANCE_WINDOW_CONSTANT.DELETE_MAINTENANCE_CONFIG_SETTING;\r\n\r\n    let tmpMSettingsData = new Array<MaintenanceSettingsData>();\r\n    this.selectedRowData.forEach(element =>\r\n    {\r\n      if (element.deleteStatus != CONS.MAINTAINANCE_WINDOW_CONSTANT.PURGE_MAINTENANCE_PERIOD)\r\n      {\r\n        element.deleteStatus = CONS.MAINTAINANCE_WINDOW_CONSTANT.DELETE_WITHOUT_CREATE_DATA_FOR_MAINTENANCE_PERIOD;\r\n        tmpMSettingsData.push(element);\r\n      }\r\n    });\r\n\r\n    maintenanceSettings.arrMSetting = tmpMSettingsData;\r\n\r\n    if (maintenanceSettings.arrMSetting.length <= 0)\r\n    {\r\n      this.selectedRowData = [];\r\n      this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"Please select at least one Record to delete.\");\r\n      return;\r\n    }\r\n    this.confirmationService.confirm({\r\n      message: 'Do you want to delete the selected maintenance schedule and keep the rule effective? \\nThis option will not generate the baseline data for the deleted maintenance period.',\r\n      accept: () =>\r\n      {\r\n        this.commonServices.showProgressBar(\"Going to delete applied maintenance duration. Please wait...\");\r\n        this.alertMaintenanceService.applyMaintenanceSettings(maintenanceSettings).subscribe(\r\n        res =>\r\n        {\r\n          this.setAddDeleteRecords(res);\r\n        },\r\n        error =>\r\n        {\r\n          this.commonServices.isHideProgress = true;\r\n          this.alertMaintenanceService.showMessage(\"error\", \"Error\", error);\r\n          this.logger.error(this.className, \"addMaintenanceData\", \"Error in getting data from server.\");\r\n        });\r\n      },\r\n      reject: () => {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  /** This method is used to delete single record from maintenance table for effective scheduling*/\r\n  deleteAndCreatMData(data: MaintenanceSettingsData)\r\n  {\r\n    let maintenanceSettings = new MaintenanceSettings();\r\n    maintenanceSettings.reqType = CONS.MAINTAINANCE_WINDOW_CONSTANT.DELETE_MAINTENANCE_CONFIG_SETTING;\r\n\r\n    let tmpMSettingsData = new Array<MaintenanceSettingsData>();\r\n    data.deleteStatus = CONS.MAINTAINANCE_WINDOW_CONSTANT.DELETE_AND_CREATE_DATA_FOR_MAINTENANCE_PERIOD;\r\n    tmpMSettingsData.push(data);\r\n\r\n    maintenanceSettings.arrMSetting = tmpMSettingsData;\r\n    if (maintenanceSettings.arrMSetting.length <= 0)\r\n    {\r\n      this.alertMaintenanceService.showMessage(\"error\",\"Error\",\"No records available to perform delete.\");\r\n      return;\r\n    }\r\n    this.confirmationService.confirm({\r\n      message: 'Do you want to delete the selected maintenance schedule and make the schedule in-effective? \\n This option will regenerate the data for the deleted maintenance duration.',\r\n      accept: () =>\r\n      {\r\n        this.commonServices.showProgressBar(\"Going to delete applied maintenance duration. Please wait...\");\r\n        this.alertMaintenanceService.applyMaintenanceSettings(maintenanceSettings).subscribe(\r\n        res =>\r\n        {\r\n          this.setAddDeleteRecords(res);\r\n        },\r\n        error =>\r\n        {\r\n          this.commonServices.isHideProgress = true;\r\n          this.alertMaintenanceService.showMessage(\"error\", \"Error\", error);\r\n          this.logger.error(this.className, \"addMaintenanceData\", \"Error in getting data from server.\");\r\n        });\r\n      },\r\n      reject: () => {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  /** This method is used to delete single record from maintenance table for in-effective scheduling*/\r\n  deleteWithoutCreatMData(data: MaintenanceSettingsData)\r\n  {\r\n    let maintenanceSettings = new MaintenanceSettings();\r\n    maintenanceSettings.reqType = CONS.MAINTAINANCE_WINDOW_CONSTANT.DELETE_MAINTENANCE_CONFIG_SETTING;\r\n\r\n    let tmpMSettingsData = new Array<MaintenanceSettingsData>();\r\n    data.deleteStatus = CONS.MAINTAINANCE_WINDOW_CONSTANT.DELETE_WITHOUT_CREATE_DATA_FOR_MAINTENANCE_PERIOD;\r\n    tmpMSettingsData.push(data);\r\n\r\n    maintenanceSettings.arrMSetting = tmpMSettingsData;\r\n    if (maintenanceSettings.arrMSetting.length <= 0)\r\n    {\r\n      this.alertMaintenanceService.showMessage(\"error\", \"Error\", \"No records available to perform delete.\");\r\n      return;\r\n    }\r\n    this.confirmationService.confirm({\r\n      message: 'Do you want to delete the selected maintenance schedule and keep the rule effective? \\nThis option will not generate the baseline data for the deleted maintenance period.',\r\n      accept: () =>\r\n      {\r\n        this.commonServices.showProgressBar(\"Going to delete applied maintenance duration. Please wait...\");\r\n        this.alertMaintenanceService.applyMaintenanceSettings(maintenanceSettings).subscribe(\r\n        res =>\r\n        {\r\n          this.setAddDeleteRecords(res);\r\n        },\r\n        error =>\r\n        {\r\n          this.commonServices.isHideProgress = true;\r\n          this.alertMaintenanceService.showMessage(\"error\", \"Error\", error);\r\n          this.logger.error(this.className, \"addMaintenanceData\", \"Error in getting data from server.\");\r\n        });\r\n      },\r\n      reject: () => {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  /** This method is used to show silver color for purge Records */\r\n  getColor(element, data)\r\n  {\r\n    if (data.deleteStatus == CONS.MAINTAINANCE_WINDOW_CONSTANT.PURGE_MAINTENANCE_PERIOD)\r\n    {\r\n      element.parentNode.parentNode.parentNode.style = \"background:rgba(213, 213, 213,0.3) !important; color: #a1a1a1 !important\";\r\n    }\r\n\r\n    element.parentNode.parentNode.style = \"padding: 0.5em\";\r\n  }\r\n  \r\n  /** This method is used to show no of record when tab Accordian Change */\r\n  onTabOpen(event)\r\n  {\r\n    if (event.index === 0)\r\n      this.openFirstAccordian = !this.openFirstAccordian;\r\n    else if (event.index === 1)\r\n      this.openSecondAccordian = !this.openSecondAccordian;\r\n\r\n    if (!this.openFirstAccordian)\r\n      this.numRows = 15;\r\n    else\r\n      this.numRows = 9;\r\n\r\n    let tempMSettingsData = [];\r\n    this.maintenanceSettings.arrMSetting.forEach(element => {\r\n      tempMSettingsData.push(element);\r\n    });\r\n    this.maintenanceSettings.arrMSetting = [];\r\n    this.maintenanceSettings.arrMSetting = tempMSettingsData;\r\n  }\r\n\r\n  /** this method is used to show custom toDate and from Date*/\r\n  setScheduleCustomTime()\r\n  {\r\n    this.isCustom = true;\r\n    let curDate = new Date();\r\n    curDate.setHours(0);\r\n    curDate.setMinutes(0);\r\n    curDate.setSeconds(0);\r\n    curDate.setMilliseconds(0);\r\n    this.toDate = curDate;\r\n\r\n    let curDate1 = new Date();\r\n    curDate1.setHours(0);\r\n    curDate1.setMinutes(0);\r\n    curDate1.setSeconds(0);\r\n    curDate1.setMilliseconds(0);\r\n    //curDate1.setTime(curDate1.getTime());\r\n    this.fromDate = curDate1;\r\n\r\n    this.logger.info(this.className, \"changePreset\", \"fromDate - \", this.fromDate, \", toDate =\" , this.toDate);\r\n  }\r\n\r\n  /** Custom Sorting on Upcoming Maintenace Window*/\r\n  mysort(field,order, maintenanceSettingsData)\r\n  {\r\n    if (order === -1)\r\n    {\r\n      order = 1;\r\n    }\r\n    else\r\n    {\r\n      order = -1;\r\n    }\r\n    let value1;\r\n    let value2;\r\n    maintenanceSettingsData = maintenanceSettingsData.sort(function (a, b)\r\n    {\r\n      if (field === \"upcomingTS\")\r\n      {\r\n        value1 = a.startLTS;\r\n        value2 = b.endLTS\r\n        value1 = value1 + value2;\r\n        value2 = value1 - value2;\r\n        value1 = value1 - value2;\r\n      }\r\n\r\n      if (order === -1)\r\n      {\r\n        return (value2 > value1) ? 1 : ((value2 < value1) ? -1 : 0);\r\n      }\r\n      else\r\n      {\r\n        return (value1 > value2) ? 1 : ((value1 < value2) ? -1 : 0);\r\n      }\r\n    });\r\n    this.maintenanceSettings.arrMSetting = [];\r\n    maintenanceSettingsData.forEach(element =>\r\n    {\r\n      this.maintenanceSettings.arrMSetting = this.maintenanceSettings.arrMSetting.concat(element);\r\n    });\r\n  }\r\n  \r\n  /** This method is used to set all maintenance data which is get from server */\r\n  setMaintenanceAlertData(res)\r\n  {\r\n    this.commonServices.progressValue = 100;\r\n    this.commonServices.isHideProgress = true;\r\n    if(res.status == 200)\r\n      this.alertMaintenanceService.showMessage(\"success\" ,\"Success\", res.msg);\r\n    else\r\n    {\r\n      this.alertMaintenanceService.showMessage(\"error\" ,\"Error\", res.msg);\r\n      return;\r\n    }\r\n    this.selectedRowData = [];\r\n    this.vectorSaperator = res.vecSep;\r\n    this.maintenanceSettings = res;\r\n    this.downloadMFilterData = this.maintenanceSettings;\r\n    this.alertMaintenanceService.totalAvailableRecords = this.maintenanceSettings.arrMSetting.length;\r\n    this.setMaintenanceIndicesLevel(res);\r\n  }\r\n  \r\n  /** This method is used to set deleted records in  maintenance data which is get from server */\r\n  setAddDeleteRecords(res)\r\n  {\r\n    this.commonServices.progressValue = 100;\r\n    this.commonServices.isHideProgress = true;\r\n    if(res.status == 200)\r\n      this.alertMaintenanceService.showMessage(\"success\" ,\"Success\", res.msg);\r\n    else\r\n    {\r\n      this.alertMaintenanceService.showMessage(\"error\" ,\"Error\", res.msg);\r\n      return;\r\n    }\r\n    this.selectedRowData = [];\r\n    let tmpDeletedIdx = [];\r\n    res.arrMSetting.forEach(element =>\r\n    {\r\n      this.maintenanceSettings.arrMSetting.forEach((oldElement, index) =>\r\n      {\r\n        if (element.id == oldElement.id)\r\n        {\r\n          this.maintenanceSettings.arrMSetting[index] = element;\r\n          tmpDeletedIdx.push(index);\r\n        }\r\n      });\r\n    });\r\n    if (this.isShowHistoricWindow === false)\r\n    {\r\n      tmpDeletedIdx.sort();\r\n      for (let index = (tmpDeletedIdx.length - 1); index >= 0; index--)\r\n      {\r\n        if (tmpDeletedIdx[index] != undefined)\r\n          this.maintenanceSettings.arrMSetting.splice(tmpDeletedIdx[index], 1);\r\n      }\r\n    }\r\n    let tempMSettingsData = [];\r\n    this.maintenanceSettings.arrMSetting.forEach(element => {\r\n      tempMSettingsData.push(element);\r\n    });\r\n    this.maintenanceSettings.arrMSetting = [];\r\n    this.maintenanceSettings.arrMSetting = tempMSettingsData;\r\n    this.downloadMFilterData = this.maintenanceSettings;\r\n    this.alertMaintenanceService.totalAvailableRecords = this.maintenanceSettings.arrMSetting.length;\r\n  }\r\n  \r\n  /** This method will holds filter data of active alert data*/\r\n  onFilterData(event)\r\n  {\r\n    this.downloadMFilterData = new MaintenanceSettings();\r\n    this.downloadMFilterData.arrMSetting= event.filteredValue;\r\n  }\r\n  \r\n  /** This method is used to  send alert maintenance data to server for download PDF, Excel, Word*/\r\n  downloadMaintenanceData(fileFormat: string)\r\n  {\r\n    if(this.downloadMFilterData != undefined)\r\n    {\r\n      this.alertMaintenanceService.downloadData(fileFormat, this.downloadMFilterData);\r\n    }\r\n    else\r\n      this.alertMaintenanceService.downloadData(fileFormat, this.maintenanceSettings); \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-maintenance/alert-maintenance.component.ts","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[individual-major-directive]',\r\n})\r\n\r\nexport class IndividualMajorDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/individual-major-directive.ts","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[individual-minor-directive]',\r\n})\r\n\r\nexport class IndividualMinorDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/individual-minor-directive.ts","import { Component, Input, ViewContainerRef } from '@angular/core';\r\nimport { ConditionData } from './condition-data';\r\nimport { AlertRuleService } from '../../../services/alert-rule-service';\r\n@Component({\r\n  template: `\r\n<p-panel [style]=\"{'margin':'5px 2px 5px 0px'}\" [collapsed]=iscollapsedPanel>\r\n  <p-header>\r\n    <div style=\"float:left\">\r\n      <span ><input type=\"text\" size=\"30\" pInputText [(ngModel)]=\"data.name\" placeholder=\"{{data.name}}\"> </span>\r\n      <span>{{conditionPanelHeader}}</span>\r\n    </div>\r\n    <div style=\"float:right\">\r\n      <span *ngIf=\"iscollapsedPanel\" style=\"cursor: pointer\" title=\"Open\" (click) = \"collapsedPanel(data.id)\"><i class=\"fa fa-chevron-right\" style=\"font-size: 1.2em;\"></i></span>\r\n      <span *ngIf=\"!iscollapsedPanel\" style=\"cursor: pointer\" title=\"Close\" (click) = \"collapsedPanel(data.id)\"><i class=\"fa fa-chevron-down\" style=\"font-size: 1.2em;\"></i></span>\r\n      <span style=\"cursor: pointer\" title=\"Delete\" (click) = \"deleteCondition(data.id)\"><i class=\"fa fa-times\" style=\"font-size: 1.4em;\"></i></span>\r\n    </div>\r\n  </p-header>\r\n  <div class=\" ui-g\">\r\n    <div class=\"ui-g-12 ui-md-6 ui-lg-4\">\r\n      <div class=\"labels\">Matric Group</div>\r\n      <p-dropdown   [options]=\"alertRuleService.matricGroup\" [(ngModel)]=\"data.groupName\"  [style]=\"{'width':'16em'}\" title=\"{{data.groupName}}\"></p-dropdown>\r\n    </div>\r\n    <div class=\"ui-g-12 ui-md-6 ui-lg-8\">\r\n      <div class=\"labels\">Matric Name</div>\r\n      <p-dropdown [options]=\"alertRuleService.matricName\" [(ngModel)]=\"data.graphName\"  [style]=\"{'width':'16em'}\" title=\"{{data.graphName}}\"></p-dropdown>\r\n    </div>\r\n  </div>\r\n  <div class=\" ui-g\">\r\n    <div class=\"ui-g-12 ui-md-6 ui-lg-12\">\r\n      <div class=\"ui-g-12 ui-md-6 ui-lg-3\">\r\n        <div class=\"labels\">having</div>\r\n        <p-dropdown [options]=\"alertRuleService.dataType\" [(ngModel)]=\"data.dataType\"  [style]=\"{'width':'14em'}\" title=\"{{data.dataType}}\"></p-dropdown>\r\n      </div>\r\n      <div class=\"ui-g-12 ui-md-6 ui-lg-3\">\r\n        <div class=\"labels\">value</div> \r\n        <p-dropdown [options]=\"alertRuleService.operator\" [(ngModel)]=\"data.operator\"  [style]=\"{'width':'14em'}\" title=\"{{data.operator}}\"></p-dropdown>\r\n      </div>\r\n      <div class=\"ui-g-12 ui-md-6 ui-lg-3\">\r\n        <p-dropdown [options]=\"alertRuleService.baselineName\" [(ngModel)]=\"data.baselineName\"  [style]=\"{'width':'18em'}\" title=\"{{data.baselineName}}\"></p-dropdown>\r\n      </div>\r\n      <div class=\"ui-g-12 ui-md-6 ui-lg-3\">\r\n        <div class=\"labels\">by</div> \r\n        <input  type=\"text\" size=\"8\" [(ngModel)]=\"data.threshold\" pInputText title=\"Provide\">\r\n        <p-dropdown [options]=\"alertRuleService.conditionType\" [(ngModel)]=\"data.conditionType\"  [style]=\"{'width':'10em'}\"></p-dropdown>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\" ui-g\">\r\n    <div class=\"ui-g-12 ui-md-6 ui-lg-12\">\r\n      <div style=\"float: left;padding: 5px 0px 0px 5px;\"><p-checkbox [(ngModel)]=\"data.minDiff\" binary=\"true\"></p-checkbox></div>\r\n      <div style=\"float: left;padding: 5px 10px 0px 5px;\">minimum change from baseline is</div> \r\n      <div><input  type=\"text\" size=\"8\" pInputText [(ngModel)]=\"data.minDiffValue\"></div>\r\n    </div>\r\n  </div>\r\n</p-panel>\r\n  `\r\n})\r\n\r\nexport class RuleConditionDefinition\r\n{\r\n  @Input() data: any;\r\n  iscollapsedPanel: boolean = false;\r\n  conditionPanelHeader: string = \"\";\r\n  constructor(public alertRuleService: AlertRuleService) { \r\n    \r\n  }\r\n  \r\n  collapsedPanel(Idx: number)\r\n  {\r\n    this.iscollapsedPanel = !this.iscollapsedPanel\r\n    if(this.iscollapsedPanel)\r\n      this.conditionPanelHeader = \" Matric Group \";\r\n    else\r\n      this.conditionPanelHeader = \"\";\r\n  }\r\n  deleteCondition(conditionId)\r\n  {\r\n    let conditionIdx = conditionId;\r\n    this.alertRuleService.conditionViewContainerRef.remove(conditionIdx);\r\n    this.alertRuleService.arrRuleCondition.splice(conditionIdx, 1);\r\n    this.alertRuleService.arrRuleCondition.forEach((element,index) => {\r\n      this.alertRuleService.arrRuleCondition[index].data.id = index;\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-condition-definition.ts","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[add-rule-condition]',\r\n})\r\nexport class TierConditionDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-condition-directives.ts","import { Component, Input, ViewContainerRef } from '@angular/core';\r\nimport { ConditionData } from './condition-data';\r\nimport { AlertRuleService } from '../../../services/alert-rule-service';\r\nimport * as CONS from \"../../../constants/alert-rule-constant\";\r\n@Component({\r\n  template: `\r\n<p-panel [collapsed]=iscollapsedPanel>\r\n  <p-header>\r\n    <div style=\"float:left\">\r\n      <span ><input type=\"text\" size=\"30\" pInputText [(ngModel)]=\"data.name\" placeholder=\"{{data.name}}\"> </span>\r\n      <span>{{conditionPanelHeader}}</span>\r\n    </div>\r\n    <div style=\"float:right\">\r\n      <span *ngIf=\"iscollapsedPanel\" style=\"cursor: pointer\" title=\"Open\" (click) = \"collapsedPanel(data.id)\"><i class=\"fa fa-chevron-right\" style=\"font-size: 1.2em;\"></i></span>\r\n      <span *ngIf=\"!iscollapsedPanel\" style=\"cursor: pointer\" title=\"Close\" (click) = \"collapsedPanel(data.id)\"><i class=\"fa fa-chevron-down\" style=\"font-size: 1.2em;\"></i></span>\r\n      <span style=\"cursor: pointer\" title=\"Delete\" (click) = \"deleteCondition(data.id, data.severityType)\"><i class=\"fa fa-times\" style=\"font-size: 1.4em;\"></i></span>\r\n    </div>\r\n  </p-header>\r\n  <div class=\" ui-g\">\r\n    <div class=\"ui-g-12 ui-md-6 ui-lg-4\">\r\n      <div class=\"labels\">Matric Group</div>\r\n      <p-dropdown   [options]=\"alertRuleService.matricGroup\" [(ngModel)]=\"data.groupName\"  [style]=\"{'width':'16em'}\" title=\"{{data.groupName}}\"></p-dropdown>\r\n    </div>\r\n    <div class=\"ui-g-12 ui-md-6 ui-lg-8\">\r\n      <div class=\"labels\">Matric Name</div>\r\n      <p-dropdown [options]=\"alertRuleService.matricName\" [(ngModel)]=\"data.matricName\"  [style]=\"{'width':'16em'}\" title=\"{{data.matricName}}\"></p-dropdown>\r\n    </div>\r\n  </div>\r\n  <div class=\" ui-g\">\r\n    <div class=\"ui-g-12 ui-md-6 ui-lg-12\">\r\n      <div class=\"ui-g-12 ui-md-6 ui-lg-3\">\r\n        <div class=\"labels\">having</div>\r\n        <p-dropdown [options]=\"alertRuleService.dataType\" [(ngModel)]=\"data.dataType\"  [style]=\"{'width':'14em'}\" title=\"{{data.dataType}}\"></p-dropdown>\r\n      </div>\r\n      <div class=\"ui-g-12 ui-md-6 ui-lg-3\">\r\n        <div class=\"labels\">value</div> \r\n        <p-dropdown [options]=\"alertRuleService.operator\" [(ngModel)]=\"data.operator\"  [style]=\"{'width':'14em'}\" title=\"{{data.operator}}\"></p-dropdown>\r\n      </div>\r\n      <div class=\"ui-g-12 ui-md-6 ui-lg-3\">\r\n        <p-dropdown [options]=\"alertRuleService.baselineName\" [(ngModel)]=\"data.baselineName\"  [style]=\"{'width':'18em'}\" title=\"{{data.baselineName}}\"></p-dropdown>\r\n      </div>\r\n      <div class=\"ui-g-12 ui-md-6 ui-lg-3\">\r\n        <div class=\"labels\">by</div> \r\n        <input  type=\"text\" size=\"8\" [(ngModel)]=\"data.threshold\" pInputText title=\"Provide\">\r\n        <p-dropdown [options]=\"alertRuleService.conditionType\" [(ngModel)]=\"data.conditionType\"  [style]=\"{'width':'10em'}\" title=\"{{data.conditionType}}\"></p-dropdown>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\" ui-g\">\r\n    <div class=\"ui-g-12 ui-md-3 ui-lg-1\" style=\"padding: 0.9em 0.5em;\"> and indices </div>\r\n    <div class=\"ui-g-12 ui-md-6 ui-lg-9\"> <input pInputText style=\"width: 100%\" type=\"text\" [(ngModel)]=\"description\" /></div>\r\n    <div class=\"ui-g-12 ui-md-3 ui-lg-2\" style=\"padding: 0.9em 0.5em;\"> <span style=\"cursor: pointer\" title=\"Select Indices\" (click) = \"delete()\">Select Indices</span></div>\r\n  </div>\r\n  <div class=\" ui-g\">\r\n    <div class=\"ui-g-12 ui-md-6 ui-lg-12\">\r\n      <div style=\"float: left;padding: 5px 0px 0px 5px;\"><p-checkbox [(ngModel)]=\"data.minDiff\" binary=\"true\"></p-checkbox></div>\r\n      <div style=\"float: left;padding: 5px 10px 0px 5px;\">minimum change from baseline is</div> \r\n      <div><input  type=\"text\" size=\"8\" pInputText [(ngModel)]=\"data.minDiffValue\" title=\"{{data.minDiffValue}}\"></div>\r\n    </div>\r\n  </div>\r\n</p-panel>\r\n  `\r\n})\r\n\r\nexport class RuleIndividualCondition\r\n{\r\n  @Input() data: any;\r\n  iscollapsedPanel: boolean = false;\r\n  conditionPanelHeader: string = \"\";\r\n  \r\n  constructor(private alertRuleService: AlertRuleService) { }\r\n  \r\n  collapsedPanel(Idx: number)\r\n  {\r\n    this.iscollapsedPanel = !this.iscollapsedPanel\r\n    if(this.iscollapsedPanel)\r\n      this.conditionPanelHeader = \" Matric Group \";\r\n    else\r\n      this.conditionPanelHeader = \"\";\r\n  }\r\n  deleteCondition(conditionId: number, severityType: number)\r\n  {\r\n    switch (severityType) {\r\n      case CONS.ALERT_RULE_CONST.SEVERITY_MINOR:\r\n      {\r\n        let minorIdx = conditionId;\r\n        this.alertRuleService.minorViewContainerRef.remove(minorIdx);\r\n        this.alertRuleService.arrMinorCondition.splice(minorIdx, 1);\r\n        this.alertRuleService.arrMinorCondition.forEach((element,index) => {\r\n          this.alertRuleService.arrMinorCondition[index].data.id = index;\r\n        });\r\n        break;\r\n      }\r\n      case CONS.ALERT_RULE_CONST.SEVERITY_MAJOR:\r\n      {\r\n        let majorId = conditionId;\r\n        this.alertRuleService.majorViewContainerRef.remove(majorId);\r\n        this.alertRuleService.arrMajorCondition.splice(majorId, 1);\r\n        this.alertRuleService.arrMajorCondition.forEach((element,index) => {\r\n          this.alertRuleService.arrMajorCondition[index].data.id = index;\r\n        });\r\n        break;\r\n      }\r\n      case CONS.ALERT_RULE_CONST.SEVERITY_CRITICAL:\r\n      {\r\n        let criticalId = conditionId;\r\n        this.alertRuleService.criticalViewContainerRef.remove(criticalId);\r\n        this.alertRuleService.arrCriticalCondition.splice(criticalId, 1);\r\n        this.alertRuleService.arrCriticalCondition.forEach((element,index) => {\r\n          this.alertRuleService.arrCriticalCondition[index].data.id = index;\r\n        });\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-condition-individual.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".divpadding{\\r\\n  padding-top: 8px;\\r\\n}\\r\\n.buttonpadding{\\r\\n  padding-right: 30px;\\r\\n}\\r\\n.labels{\\r\\n  float: left;\\r\\n  padding: 3px 8px 0px 0px;\\r\\n}\\r\\n.ui-panel .ui-panel-content {\\r\\n  padding: 2px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-definition.component.css\n// module id = ../../../../../src/app/modules/alert/components/alert-rule/rule-definition/rule-definition.component.css\n// module chunks = main","module.exports = \"<p-dialog  [contentStyle]=\\\"{'overflow':'auto','max-height':'475px'}\\\" header=\\\"Create Rule\\\" [(visible)]=\\\"isOpenAddEditWindow\\\" modal=\\\"modal\\\" [positionTop]=\\\"75\\\" width=\\\"900\\\" [responsive]=\\\"true\\\" (onHide)=\\\"closeAddEditWindow()\\\" >\\n  <div class=\\\" ui-g\\\">\\n    <div class=\\\"ui-g-12 ui-md-3 ui-lg-1 divpadding\\\">\\n      <p-checkbox label=\\\"Enable\\\" [(ngModel)]=\\\"ruleDataDTO.enable\\\"  binary=\\\"true\\\"></p-checkbox>\\n    </div>\\n    <div class=\\\"ui-g-12 ui-md-1 ui-lg-3\\\">\\n      <label style=\\\"padding-left: 1px; padding-right:5px\\\">Rule</label>\\n      <input type=\\\"text\\\" pInputText placeholder=\\\"Rule Name\\\" [(ngModel)]=\\\"ruleDataDTO.name\\\"/>\\n      <label style=\\\"padding-left:20px;\\\">for</label>\\n    </div>\\n    <div class=\\\"ui-g-12 ui-md-1 ui-lg-2\\\">\\n      <p-dropdown [options]=\\\"x\\\" [(ngModel)]=\\\"threshType\\\" [style]=\\\"{'width':'130px'}\\\" (onChange)=\\\"callOnThresholdChange($event)\\\" ></p-dropdown>\\n    </div>\\n    <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\n      <label style=\\\"padding-left: 15px; padding-right:9px\\\">Time Window for</label>\\n      <input type=\\\"text\\\" size=\\\"8\\\" pInputText placeholder=\\\"minutes\\\" [(ngModel)]=\\\"ruleDataDTO.timeWindow\\\"/>\\n      <label style=\\\"padding-left:9px\\\">min(s)</label>\\n    </div>\\n  </div>\\n  <p-toolbar>\\n    <div class=\\\"ui-toolbar-group-left\\\">\\n      <div class=\\\"labels\\\" style=\\\"padding: 4px 5px 0px 0px;\\\">Apply this rule on \\n        <p-radioButton name=\\\"tierIndividualLevel\\\" value=\\\"0\\\" label=\\\"Tier\\\" [(ngModel)]=\\\"ruleDataDTO.level\\\" (click)=\\\"showTierPanel()\\\"></p-radioButton>\\n      </div>\\n      <div style=\\\"float: left\\\">\\n        <p-multiSelect  [options]=\\\"tiersLevel\\\" [(ngModel)]=\\\"ruleDataDTO.tiers\\\"  [style]=\\\"{'width':'16em'}\\\"></p-multiSelect>\\n      </div>\\n      <div style=\\\"padding: 4px 5px 0px 8px;float: left\\\">\\n        <p-radioButton name=\\\"tierIndividualLevel\\\" value=\\\"1\\\" label=\\\"Individual\\\" [(ngModel)]=\\\"ruleDataDTO.level\\\" (click)=\\\"showIndividualPanel()\\\"></p-radioButton>\\n      </div>\\n    </div>\\n    <div class=\\\"ui-toolbar-group-right\\\" *ngIf=\\\"!isIndividualPanel\\\">\\n      <div class=\\\"labels\\\" style=\\\"padding: 4px 5px 0px 8px;\\\">if</div>\\n      <div style=\\\"float:left;\\\">\\n        <p-dropdown [options]=\\\"ruleOperator\\\" [(ngModel)]=\\\"ruleDataDTO.ruleOperator\\\" [style]=\\\"{'width':'8em'}\\\"></p-dropdown>\\n      </div>\\n      <div class=\\\"labels\\\" style=\\\"padding: 4px 8px 0px 8px;\\\">Condition below is satisfied</div>\\n      <div style=\\\"float:left;padding: 0.24em;\\\">\\n        <span style=\\\"cursor: pointer\\\" title=\\\"Add\\\" (click) = \\\"addMutipleCondition()\\\"><i class=\\\"fa fa-plus\\\" style=\\\"font-size: 1.4em;\\\"></i></span>\\n        <span style=\\\"cursor: pointer\\\" title=\\\"Setting\\\" ><i class=\\\"fa fa-cog\\\" style=\\\"font-size: 1.4em;\\\"></i></span>\\n      </div>\\n    </div>\\n  </p-toolbar>\\n\\n  <div style=\\\"max-height: 283px; overflow: auto;\\\">\\n    <ng-template add-rule-condition></ng-template>\\n  </div>\\n  <div [hidden]=!isIndividualPanel>\\n    <p-panel [style]=\\\"{'margin':'5px 2px 5px 0px'}\\\">\\n      <p-header>\\n        <label style=\\\"font-size: medium;\\\">Critical</label>\\n        <div style=\\\"float:right\\\">\\n          <div class=\\\"labels\\\" style=\\\"padding: 4px 5px 0px 8px;\\\">if</div>\\n          <div style=\\\"float:left;\\\">\\n            <p-dropdown [options]=\\\"ruleOperator\\\" [(ngModel)]=\\\"ruleDataDTO.ruleOperator\\\" (onChange)=\\\"callOnTierChange()\\\" [style]=\\\"{'width':'8em'}\\\"></p-dropdown>\\n          </div>\\n          <div class=\\\"labels\\\" style=\\\"padding: 4px 8px 0px 8px;\\\">Condition below is satisfied</div>\\n          <div style=\\\"float:left;padding: 0.24em;\\\">\\n            <span style=\\\"cursor: pointer\\\" title=\\\"Add\\\" (click) = \\\"createCriticalPanel()\\\"><i class=\\\"fa fa-plus\\\" style=\\\"font-size: 1.4em;\\\"></i></span>\\n            <span style=\\\"cursor: pointer\\\" title=\\\"Setting\\\" ><i class=\\\"fa fa-cog\\\" style=\\\"font-size: 1.4em;\\\"></i></span>\\n          </div>\\n        </div>\\n      </p-header>\\n      <div style=\\\"max-height: 335px; overflow: auto;\\\">\\n        <ng-template add-individual-condition></ng-template> \\n      </div>\\n    </p-panel>\\n    <p-panel [style]=\\\"{'margin':'5px 2px 5px 0px'}\\\">\\n      <p-header>\\n        <label style=\\\"font-size: medium;\\\">Major</label>\\n        <div style=\\\"float:right\\\">\\n          <div class=\\\"labels\\\" style=\\\"padding: 4px 5px 0px 8px;\\\">if</div>\\n          <div style=\\\"float:left;\\\">\\n            <p-dropdown [options]=\\\"ruleOperator\\\" [(ngModel)]=\\\"ruleDataDTO.ruleOperator\\\" (onChange)=\\\"callOnTierChange()\\\" [style]=\\\"{'width':'8em'}\\\"></p-dropdown>\\n          </div>\\n          <div class=\\\"labels\\\" style=\\\"padding: 4px 8px 0px 8px;\\\">Condition below is satisfied</div>\\n          <div style=\\\"float:left;padding: 0.24em;\\\">\\n            <span style=\\\"cursor: pointer\\\" title=\\\"Add\\\" (click) = \\\"createMajorPanel()\\\"><i class=\\\"fa fa-plus\\\" style=\\\"font-size: 1.4em;\\\"></i></span>\\n            <span style=\\\"cursor: pointer\\\" title=\\\"Setting\\\" ><i class=\\\"fa fa-cog\\\" style=\\\"font-size: 1.4em;\\\"></i></span>\\n          </div>\\n        </div>\\n      </p-header>\\n      <div style=\\\"max-height: 335px; overflow: auto;\\\">\\n        <ng-template individual-major-directive></ng-template>\\n      </div>\\n    </p-panel>\\n    <p-panel [style]=\\\"{'margin':'5px 2px 5px 0px'}\\\">\\n      <p-header>\\n        <label style=\\\"font-size: medium;\\\">Minor</label>\\n        <div style=\\\"float:right\\\">\\n          <div class=\\\"labels\\\" style=\\\"padding: 4px 5px 0px 8px;\\\">if</div>\\n          <div style=\\\"float:left;\\\">\\n            <p-dropdown [options]=\\\"ruleOperator\\\" [(ngModel)]=\\\"ruleDataDTO.ruleOperator\\\" (onChange)=\\\"callOnTierChange()\\\" [style]=\\\"{'width':'8em'}\\\"></p-dropdown>\\n          </div>\\n          <div class=\\\"labels\\\" style=\\\"padding: 4px 8px 0px 8px;\\\">Condition below is satisfied</div>\\n          <div style=\\\"float:left;padding: 0.24em;\\\">\\n            <span style=\\\"cursor: pointer\\\" title=\\\"Add\\\" (click) = \\\"createMinorPanel()\\\"><i class=\\\"fa fa-plus\\\" style=\\\"font-size: 1.4em;\\\"></i></span>\\n            <span style=\\\"cursor: pointer\\\" title=\\\"Setting\\\" ><i class=\\\"fa fa-cog\\\" style=\\\"font-size: 1.4em;\\\"></i></span>\\n          </div>\\n        </div>\\n      </p-header>\\n      <div style=\\\"max-height: 335px; overflow: auto;\\\">\\n        <ng-template individual-minor-directive></ng-template>\\n      </div>\\n    </p-panel>\\n  </div>\\n  <div [hidden]=isIndividualPanel>\\n    <div class=\\\"ui-g-12 ui-md-12 ui-lg-12 divpadding\\\">\\n      <label>Alert Severity will be decided if above conditions are satified for</label>\\n    </div>\\n    <div class=\\\"ui-g-12 ui-md-12 ui-lg-12 divpadding\\\">\\n      <p-radioButton class=\\\"buttonpadding\\\" name=\\\"serverGroup\\\" value=\\\"0\\\" label=\\\"% of Server\\\" [(ngModel)]=\\\"ruleDataDTO.severityLevel\\\"></p-radioButton>\\n      <label style=\\\"padding-left: 41px; padding-right:9px\\\">Critical</label>\\n      <input type=\\\"text\\\" [disabled]=\\\"ruleDataDTO.severityLevel == 0? false:true\\\" pInputText placeholder=\\\"Critical\\\" [(ngModel)]=\\\"ruleDataDTO.criticalThreshold\\\"/>\\n      <label style=\\\"padding-left: 27px; padding-right:9px\\\">Major</label>\\n      <input type=\\\"text\\\" [disabled]=\\\"ruleDataDTO.severityLevel == 0? false:true\\\" pInputText placeholder=\\\"Major\\\" [(ngModel)]=\\\"ruleDataDTO.majorThreshold\\\"/>\\n      <label style=\\\"padding-left: 27px; padding-right:9px\\\">Minor</label>\\n      <input type=\\\"text\\\" [disabled]=\\\"ruleDataDTO.severityLevel == 0? false:true\\\" pInputText placeholder=\\\"Minor\\\" [(ngModel)]=\\\"ruleDataDTO.minorThreshold\\\"/>\\n    </div>\\n    <div class=\\\"ui-g-12 ui-md-12 ui-lg-12 divpadding\\\">\\n      <p-radioButton class=\\\"buttonpadding\\\" name=\\\"serverGroup\\\" value=\\\"1\\\" label=\\\"No. of servers\\\" [(ngModel)]=\\\"ruleDataDTO.severityLevel\\\"></p-radioButton>\\n      <label style=\\\"padding-left: 27px; padding-right:9px\\\">Critical</label>\\n      <input type=\\\"text\\\" [disabled]=\\\"ruleDataDTO.severityLevel == 1? false:true\\\" pInputText placeholder=\\\"Critical\\\" [(ngModel)]=\\\"ruleDataDTO.criticalThreshold\\\"/>\\n      <label style=\\\"padding-left: 27px; padding-right:9px\\\">Major</label>\\n      <input type=\\\"text\\\" [disabled]=\\\"ruleDataDTO.severityLevel == 1? false:true\\\" pInputText placeholder=\\\"Major\\\" [(ngModel)]=\\\"ruleDataDTO.majorThreshold\\\"/>\\n      <label style=\\\"padding-left: 27px; padding-right:9px\\\">Minor</label>\\n      <input type=\\\"text\\\" [disabled]=\\\"ruleDataDTO.severityLevel == 1? false:true\\\" pInputText placeholder=\\\"Minor\\\" [(ngModel)]=\\\"ruleDataDTO.minorThreshold\\\"/>\\n    </div>\\n    <div class=\\\"ui-g-12 ui-md-12 ui-lg-12\\\">  \\n      <p-radioButton name=\\\"serverGroup\\\" value=\\\"2\\\" label=\\\"Aggregate of Server\\\" [(ngModel)]=\\\"ruleDataDTO.severityLevel\\\"></p-radioButton>\\n      <p-dropdown style=\\\"padding-left: 28px;\\\" [options]=\\\"severity\\\" [disabled]=\\\"ruleDataDTO.severityLevel == 2? false:true\\\" [(ngModel)]=\\\"ruleDataDTO.severity\\\" [style]=\\\"{'width':'130px'}\\\"></p-dropdown>\\n    </div>\\n    <div class=\\\"ui-g-12 ui-md-12 ui-lg-12\\\">\\n      <p-radioButton name=\\\"serverGroup\\\" value=\\\"3\\\" label=\\\"individual Vectors\\\" [(ngModel)]=\\\"ruleDataDTO.severityLevel\\\"></p-radioButton>\\n      <p-dropdown style=\\\"padding-left: 39px;\\\" [options]=\\\"severity\\\" [disabled]=\\\"ruleDataDTO.severityLevel == 3? false:true\\\" [(ngModel)]=\\\"ruleDataDTO.severity\\\" [style]=\\\"{'width':'130px'}\\\"></p-dropdown>\\n    </div>\\n  </div>\\n  <p-footer>\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"closeAddEditWindow()\\\" label=\\\"Close\\\"></button>\\n    <button type=\\\"button\\\" pButton icon=\\\"fa fa-download\\\" (click)=\\\"saveAddEditWindow()\\\" label=\\\"Save\\\"></button>\\n  </p-footer>\\n</p-dialog>\\n\\n<p-dialog header=\\\"Advance Rule Settings\\\" class=\\\"rule-description-window\\\" [(visible)]=\\\"isMovingAdvancedWindow\\\" modal=\\\"modal\\\" width=\\\"700\\\" [responsive]=\\\"true\\\" (onHide)=\\\"closeMovingAdvancedWindow()\\\">\\n  <div>\\n      <div class=\\\"ui-g-12 ui-md-12 ui-lg-12 divpadding\\\">\\n          <p-checkbox  label=\\\"Check status in every\\\"  [(ngModel)]=\\\"ruleDataDTO.checkStatus\\\" binary=\\\"true\\\"></p-checkbox>\\n          <input type=\\\"text\\\" style=\\\"margin:0px 5px 0px 5px;\\\" size=\\\"8\\\" pInputText placeholder=\\\"minutes\\\" [(ngModel)]=\\\"ruleDataDTO.checkStatusTime\\\"/>\\n          min(s)\\n      </div>\\n      <div class=\\\"ui-g-12 ui-md-12 ui-lg-12 divpadding\\\">\\n        <p-radioButton class=\\\"buttonpadding\\\" name=\\\"groupname2\\\" value=\\\"1\\\" label=\\\"Calculate Aggregate value On every moving window\\\" [(ngModel)]=\\\"ruleDataDTO.threshType\\\" (onClick)=\\\"callOnAdRadioButtonClick()\\\"></p-radioButton>\\n      </div>\\n      <div class=\\\"ui-g-12 ui-md-12 ui-lg-12 divpadding\\\">\\n          <p-radioButton name=\\\"groupname2\\\" value=\\\"2\\\" label=\\\"Calculate aggregate value on every\\\" [(ngModel)]=\\\"ruleDataDTO.threshType\\\" (onClick)=\\\"callOnAdRadioButtonClick()\\\"></p-radioButton>\\n          <p-dropdown style=\\\"padding-left: 5px;\\\" [options]=\\\"timeType\\\" [disabled]=\\\"selectedADMovingValue == 'AdMovingval2'?false:true\\\" [(ngModel)]=\\\"selectedTimeType\\\" placeholder=\\\"--select--\\\" [style]=\\\"{'width':'130px'}\\\" (onChange)=\\\"callOnTimeTypeChange($event)\\\"></p-dropdown>\\n          <p-dropdown style=\\\"padding-left: 5px;\\\" *ngIf=\\\"selectedTimeType != 'day'\\\" [options]=\\\"minuteHourType\\\" [(ngModel)]=\\\"selectedMinuteHourType\\\" (onChange)=\\\"callOnMinuteHourType(selectedTimeType)\\\" placeholder=\\\"--select--\\\" [style]=\\\"{'width':'75px'}\\\"></p-dropdown>  \\n          <input type=\\\"text\\\" style=\\\"margin: 0px 5px 0px 5px;\\\" size=\\\"3\\\" *ngIf=\\\"selectedTimeType == 'day'\\\" [disabled]=\\\"selectedTimeType == 'day'? true:false\\\" pInputText placeholder=\\\"minutes\\\" [(ngModel)]=\\\"advanceInterval\\\"/>\\n          window\\n      </div>\\n      <div class=\\\"ui-g-12 ui-md-12 ui-lg-12 divpadding\\\" style=\\\"padding-left: 24px;\\\">\\n        <p-checkbox label=\\\"Synchronized moving aggregate calculation at {{calAdvanceInterval}} min(s) boundary\\\" [(ngModel)]=\\\"ruleDataDTO.syncEnable\\\"  binary=\\\"true\\\"></p-checkbox>\\n      </div>\\n      <div class=\\\"ui-g-12 ui-md-12 ui-lg-12 divpadding\\\">\\n        <p-radioButton name=\\\"groupname2\\\" value=\\\"4\\\" label=\\\"Check\\\" [(ngModel)]=\\\"ruleDataDTO.threshType\\\" (onClick)=\\\"callOnAdRadioButtonClick()\\\"></p-radioButton>\\n        <p-dropdown [options]=\\\"sampleType\\\" [(ngModel)]=\\\"ruleDataDTO.checkDataPtType\\\"  [style]=\\\"{'width':'130px'}\\\"></p-dropdown>\\n        <input type=\\\"text\\\" style=\\\"margin-left: 5px;\\\"size=\\\"3\\\" pInputText placeholder=\\\"100\\\" [(ngModel)]=\\\"ruleDataDTO.pctCheckDataPoint\\\"/>\\n        <label style=\\\"margin-left: 5px;\\\">% samples individually</label>\\n      </div>\\n  </div>\\n  <p-footer>\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"closeMovingAdvancedWindow()\\\" label=\\\"Close\\\"></button>\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"saveMovingAdvancedWindow()\\\" label=\\\"Apply\\\"></button>\\n  </p-footer>\\n</p-dialog>\\n  \\n  \\n  \\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-definition.component.html\n// module id = ../../../../../src/app/modules/alert/components/alert-rule/rule-definition/rule-definition.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter, AfterViewInit, ViewChild, ComponentFactoryResolver} from '@angular/core';\nimport { TierConditionDirective } from './rule-condition-directives';\nimport { IndividualConditionDirective } from './rule-individual-directive';\nimport { IndividualMajorDirective } from './individual-major-directive'\nimport { IndividualMinorDirective} from './individual-minor-directive'\nimport { RuleConditionDefinition } from './rule-condition-definition';\nimport { RuleIndividualCondition } from './rule-condition-individual';\n//import { AddNewRuleCondition } from './add-rule-condition';\nimport { InilizedRuleConditionData, RuleConditionData } from './condition-data';\nimport { RuleDataDTO, RuleConditionsDTO, ConditionData } from './../../../commons/rule-data';\nimport { AlertRuleService } from '../../../services/alert-rule-service';\nimport { DataType,RuleOperator,Severity } from './../../../interfaces/alert-rule-interface'\nimport { thresholdType,hourMinuteType } from '../../../interfaces/alert-rule-interface';\nimport { Logger } from 'angular2-logger/core';\nimport * as CONS from \"../../../constants/alert-rule-constant\";\n@Component({\n  selector: 'app-rule-definition',\n  templateUrl: './rule-definition.component.html',\n  styleUrls: ['./rule-definition.component.css']\n})\nexport class RuleDefinitionComponent implements OnInit {\n  /** this is used to store class Name */\n  className = \"RuleDefinitionComponent\";\n  /** this is used to store all alrt rule data */\n  ruleOperator:RuleOperator[];\n  severity: Severity[];\n  sampleType: thresholdType[];\n  timeType: thresholdType[];\n  minuteHourType:hourMinuteType[];\n\n  @Input()\n  isOpenAddEditWindow: boolean;\n\n  @Input()\n  ruleDataDTO: any;\n\n  @Output()\n  emitOpenAddEditWindow = new EventEmitter<boolean>();\n\n  @ViewChild(TierConditionDirective) tierCondition: TierConditionDirective;\n  @ViewChild(IndividualConditionDirective) individualCondition: IndividualConditionDirective;\n  @ViewChild(IndividualMajorDirective) individualMajorDirective: IndividualMajorDirective;\n  @ViewChild(IndividualMinorDirective) individualMinorDirective: IndividualMinorDirective;\n  \n  /** this is used to store all derived calculation expression for dropdown */\n  dataType: DataCue[];\n\n   /** this is used to store derived calculation expression from dropdown */\n   derivedCalExpItem: any = \"\";\n\n   //\n   isIndividualPanel : boolean = false;\n\n  constructor(private logger: Logger, private componentFactoryResolver: ComponentFactoryResolver, private ruleService: AlertRuleService) {\n    \n   }\n  ngOnInit() \n  { \n    this.ruleOperator = CONS.RULE_OPERATOR;\n    this.severity = CONS.SEVERITY;\n    this.timeType = CONS.TIME_TYPE;\n    this.sampleType = CONS.SAMPLE_TYPE;\n    this.initilizeRuleConditionData();\n  }\n\n  initilizeRuleConditionData()\n  {\n    this.addMutipleCondition();\n    /*try \n    {\n      let iniRuleConData = new InilizedRuleConditionData();\n      this.ruleService.getTierLevelData([]).subscribe(\n      res =>\n      {\n       res.indicesList.forEach(element => {\n          iniRuleConData.dataType.push({label: element, value: element, toolTip: element});\n        });\n        console.log(\"res----------------res--------\", JSON.stringify(res));\n      },\n      error => this.logger.error(this.className, \"|initilizeRuleConditionData|\", \"Error in getting data from server.\"),\n      ); \n    } \n    catch (e) \n    {\n      this.logger.error(this.className, \"|initilizeRuleConditionData|\", \"Exception - \", e);\n    }*/\n  }\n\n  addMutipleCondition()\n  {\n    /*this.ruleService.arrRuleCondition.forEach((element,index) => {\n      let condition = this.ruleService.arrRuleCondition[index].data.condition.split(\"_\");\n      console.log(condition.length, \"-----\", condition[0], \"-----\", condition[1] )\n      if(condition.length == 2 && condition[0] === \"Condition\")\n        if(id < condition[1])\n          id = condition[1]\n    });*/\n    let ruleConditionsDTO = new RuleConditionsDTO();\n    ruleConditionsDTO.id = this.ruleService.arrRuleCondition.length;\n    ruleConditionsDTO.severityType = CONS.ALERT_RULE_CONST.SEVERITY_ALL;\n    ruleConditionsDTO.name = \"Condition_\"+(ruleConditionsDTO.id+1);\n    this.ruleService.arrRuleCondition.push({ component: RuleConditionDefinition, data: ruleConditionsDTO });\n    let lastElement = this.ruleService.arrRuleCondition.length - 1;\n    let conditionItem = this.ruleService.arrRuleCondition[lastElement];\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(conditionItem.component);\n    let viewContainerRef = this.tierCondition.viewContainerRef;\n    this.ruleService.conditionViewContainerRef = viewContainerRef;\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n    (<ConditionData>componentRef.instance).data = conditionItem.data;\n  }\n  showIndividualPanel()\n  {\n    this.isIndividualPanel = true;\n    this.ruleService.conditionViewContainerRef.clear();\n    this.ruleService.arrRuleCondition = [];\n    this.createCriticalPanel();\n    this.createMajorPanel();\n    this.createMinorPanel();\n  }\n  showTierPanel()\n  {\n    this.isIndividualPanel = false;\n    this.ruleService.criticalViewContainerRef.clear();\n    this.ruleService.arrCriticalCondition = [];\n    this.ruleService.majorViewContainerRef.clear();\n    this.ruleService.arrMajorCondition = [];\n    this.ruleService.minorViewContainerRef.clear();\n    this.ruleService.arrMinorCondition = [];\n    this.addMutipleCondition();\n  }\n  createCriticalPanel()\n  {\n    let ruleConditionsDTO = new RuleConditionsDTO();\n    ruleConditionsDTO.id =this.ruleService.arrCriticalCondition.length;\n    ruleConditionsDTO.severityType = CONS.ALERT_RULE_CONST.SEVERITY_CRITICAL;\n    ruleConditionsDTO.name = \"Condition_\"+(ruleConditionsDTO.id+1);\n    this.ruleService.arrCriticalCondition.push({ component: RuleIndividualCondition, data: ruleConditionsDTO });\n    let lastElement = this.ruleService.arrCriticalCondition.length - 1;\n    let criticalCondition = this.ruleService.arrCriticalCondition[lastElement];\n   let componentFactory = this.componentFactoryResolver.resolveComponentFactory(criticalCondition.component);\n   let viewContainerRef = this.individualCondition.viewContainerRef;\n   this.ruleService.criticalViewContainerRef = viewContainerRef;\n   let componentRef = viewContainerRef.createComponent(componentFactory);\n   (<ConditionData>componentRef.instance).data = criticalCondition.data;\n  }\n  createMajorPanel()\n  {   \n    let ruleConditionsDTO = new RuleConditionsDTO();\n    ruleConditionsDTO.id =this.ruleService.arrMajorCondition.length;\n    ruleConditionsDTO.severityType = CONS.ALERT_RULE_CONST.SEVERITY_MAJOR;\n    ruleConditionsDTO.name = \"Condition_\"+(ruleConditionsDTO.id+1);\n    this.ruleService.arrMajorCondition.push({ component: RuleIndividualCondition, data: ruleConditionsDTO });\n    let lastElement = this.ruleService.arrMajorCondition.length - 1;\n    let majorCondition = this.ruleService.arrMajorCondition[lastElement];\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(majorCondition.component);\n    let viewContainerRef = this.individualMajorDirective.viewContainerRef;\n    this.ruleService.majorViewContainerRef = viewContainerRef;\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n    (<ConditionData>componentRef.instance).data = majorCondition.data;\n  }\n  createMinorPanel()\n  {\n    let ruleConditionsDTO = new RuleConditionsDTO();\n    ruleConditionsDTO.id =this.ruleService.arrMinorCondition.length;\n    ruleConditionsDTO.severityType = CONS.ALERT_RULE_CONST.SEVERITY_MINOR;\n    ruleConditionsDTO.name = \"Condition_\"+(ruleConditionsDTO.id+1);\n    this.ruleService.arrMinorCondition.push({ component: RuleIndividualCondition, data: ruleConditionsDTO });\n    let lastElement = this.ruleService.arrMinorCondition.length - 1;\n    let minorCondition = this.ruleService.arrMinorCondition[lastElement];\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(minorCondition.component);\n    let viewContainerRef = this.individualMinorDirective.viewContainerRef;\n    this.ruleService.minorViewContainerRef = viewContainerRef;\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n    (<ConditionData>componentRef.instance).data = minorCondition.data;\n  }\n  saveAddEditWindow()\n  {\n    console.log(\"tier level Or Individual === >>>\", this.ruleDataDTO.level);\n    let arrRuleCon = [];\n    this.ruleService.arrRuleCondition.forEach(element => {\n      arrRuleCon.push(element.data);\n    });\n    this.ruleDataDTO.arrConditions = arrRuleCon;\n    console.log(\"--\",this.ruleDataDTO);\n    /*let ruleCondition = new RuleCondition();\n    let ruleConData = [];\n    if (response.data != undefined)\n    {\n\n      response.data.forEach(element =>\n      {\n        let ruleConditionData = new RuleConditionData();\n\n        ruleConData.push(ruleConditionData);\n      });\n    }\n    ruleCondition.ruleConData = ruleConData;\n    */\n  }\n\n  closeAddEditWindow()\n  {\n    this.isOpenAddEditWindow = false;\n    this.emitOpenAddEditWindow.next(this.isOpenAddEditWindow);\n  }\n\n\n\n  /*callOnTimeTypeChange(event)\n  {\n    if(event.value == \"day\")\n    {\n      this.advanceInterval = 1;\n      this.calAdvanceInterval = 1440;\n    }\n\n    else if(event.value == \"hour\")\n    {\n      this.calAdvanceInterval = null;\n      this.minuteHourType = [];\n      for(let i = 1; i < 7; i++)\n        this.minuteHourType.push({label:i, value: i});\n      this.minuteHourType.push({label:8, value:8})\n      this.minuteHourType.push({label:12, value:12})\n    }\n\n    else{\n      this.calAdvanceInterval = null;\n      this.minuteHourType = [];\n      this.minuteHourType.push({label:30, value:30})\n      this.minuteHourType.push({label:60, value:60})\n    }\n  }*/\n\n /* callOnMinuteHourType(selectedTimeType: string)\n  {\n    if(selectedTimeType == \"hour\")\n      this.calAdvanceInterval = this.selectedMinuteHourType * 60;\n    else\n      this.calAdvanceInterval = this.selectedMinuteHourType;\n  }*/\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-definition.component.ts","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[add-individual-condition]',\r\n})\r\n\r\nexport class IndividualConditionDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-definition/rule-individual-directive.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.inline-display{\\r\\n  display: block;\\r\\n}\\r\\n.align-right{\\r\\n  float:right;\\r\\n}\\r\\n.align-left{\\r\\n  float:left;\\r\\n}\\r\\n\\r\\n.label-padding{\\r\\n  padding: 4px;\\r\\n}\\r\\ndiv .icon\\r\\n{\\r\\n  font-size: 1.9em;\\r\\n}\\r\\ndiv .alertgui-word {\\r\\n  color: #0055cc !important;\\r\\n}\\r\\n\\r\\n.alertgui-excel {\\r\\n  color: #00aa77 !important;\\r\\n}\\r\\n\\r\\n.alertgui-pdf {\\r\\n  color: #ff4040 !important;\\r\\n}\\r\\n\\r\\n.alertgui-type {\\r\\n  color: #ff2020 !important;\\r\\n}\\r\\n\\r\\n.bottom-panel{\\r\\n  padding: 2px;\\r\\n  background: rgba(185, 228, 255, 0.85);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-description/rule-description.component.css\n// module id = ../../../../../src/app/modules/alert/components/alert-rule/rule-description/rule-description.component.css\n// module chunks = main","module.exports = \"<div class=\\\"ui-widget-header\\\" style=\\\"padding:0em; display: inline-flex; width: 100%;\\\">\\n  <div style=\\\"width: 80%;\\\">\\n    <i class=\\\"fa fa-search\\\" style=\\\"margin:11px 10px 0px 10px\\\"></i>\\n    <input #gb type=\\\"text\\\" pInputText size=\\\"45\\\" placeholder=\\\"Global Filter\\\">\\n  </div>\\n  <div style=\\\"padding-top: 5px; font-weight: 500;\\\" >\\n    <div style=\\\"float: left; padding: 4px 5px 0px 4px;\\\"><label>Show/Hide columns</label></div>\\n    <p-multiSelect [options]=\\\"columnHide\\\" [(ngModel)]=\\\"selectedColumnHide\\\" [maxSelectedLabels] = \\\"2\\\" [style]=\\\"{'width':'130px'}\\\" (onChange)=\\\"callOnSelectedColumnHideType($event)\\\" ></p-multiSelect>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"ui-g-12 ui-md-12 ui-lg-12 bottom-panel\\\" style=\\\"padding: 2px;\\\">\\n  <div class=\\\"ui-g-3 ui-md-3 ui-lg-3\\\">\\n    <label class=\\\"align-left label-padding\\\">Download As :</label>\\n    <span title=\\\"Word\\\" class=\\\"icon alertgui-word\\\" style='margin-bottom: -3px; cursor:pointer' (click)='downloadMaintenanceData(\\\"WordFile\\\")'></span>\\n    <span title=\\\"Excel\\\" class=\\\"icon alertgui-excel\\\" style='margin-bottom: -3px; cursor:pointer' (click)='downloadMaintenanceData(\\\"ExcelFile\\\")'></span>\\n    <span title=\\\"PDF\\\" class=\\\"icon alertgui-pdf\\\" style='margin-bottom: -3px; cursor:pointer' (click)='downloadMaintenanceData(\\\"PDFFile\\\")'></span>\\n  </div>\\n  <div class=\\\"ui-g-7 ui-md-7 ui-lg-7\\\">\\n  <button pButton type=\\\"button\\\" icon=\\\"fa fa-pencil-square-o\\\" iconPos=\\\"left\\\" label=\\\"Individual\\\" (click) = \\\"showGraph()\\\"></button>\\n  <button pButton type=\\\"button\\\" icon=\\\"fa fa-pencil-square-o\\\" iconPos=\\\"left\\\" label=\\\"Enable\\\" (click) = \\\"showGraph()\\\"></button>\\n  <button pButton type=\\\"button\\\" icon=\\\"fa fa-trash-o\\\" iconPos=\\\"left\\\" label=\\\"Disable\\\" (click) = \\\"showGraph()\\\"></button>\\n  <button pButton type=\\\"button\\\" icon=\\\"fa fa-plus\\\" iconPos=\\\"left\\\" label=\\\"Add\\\" (click) = \\\"addEditRuleWindow()\\\"></button>\\n  <button pButton type=\\\"button\\\" icon=\\\"fa fa-pencil-square-o\\\" iconPos=\\\"left\\\" label=\\\"Edit\\\" (click) = \\\"addEditRuleWindow()\\\"></button>\\n  <button pButton type=\\\"button\\\" icon=\\\"fa fa-trash-o\\\" iconPos=\\\"left\\\" label=\\\"Delete\\\" (click) = \\\"showGraph()\\\"></button>\\n  <button pButton type=\\\"button\\\" icon=\\\"fa fa-refresh\\\" iconPos=\\\"left\\\" label=\\\"Update\\\" (click) = \\\"showGraph()\\\"></button>\\n  <button pButton type=\\\"button\\\" icon=\\\"fa fa-files-o\\\" iconPos=\\\"left\\\" label=\\\"Copy\\\" (click) = \\\"showGraph()\\\"></button>\\n  </div>\\n  <div class=\\\"ui-g-2 ui-md-2 ui-lg-2\\\">\\n    <label style=\\\"padding: 4px; float:right\\\">Total records found</label>\\n  </div>\\n</div>\\n<app-rule-definition [isOpenAddEditWindow]=\\\"isOpenAddEditWindow\\\" [ruleDataDTO]=\\\"ruleDataDTO\\\" (emitOpenAddEditWindow)=\\\"closeAddEditWindow(event)\\\" ></app-rule-definition>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-description/rule-description.component.html\n// module id = ../../../../../src/app/modules/alert/components/alert-rule/rule-description/rule-description.component.html\n// module chunks = main","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { RuleDataDTO } from './../../../commons/rule-data';\nimport { AlertRuleService } from '../../../services/alert-rule-service';\nimport { Logger } from 'angular2-logger/core';\n@Component({\n  selector: 'app-rule-description',\n  templateUrl: './rule-description.component.html',\n  styleUrls: ['./rule-description.component.css']\n})\nexport class RuleDescriptionComponent implements OnInit {\n  className = \"RuleDescriptionComponent\";\n  isOpenAddEditWindow: boolean = false;\n  \n  panelNumber: number = 0;\n  @ViewChild('addCondition') panel;\n\n  ruleDataDTO: any;\n\n  constructor(private ruleService: AlertRuleService,private logger: Logger ) {\n    this.ruleDataDTO =  new RuleDataDTO();\n   }\n\n  ngOnInit()\n  {\n    this.ruleService.getTierLevelData([])\n  }\n  \n \n\n  addMutipleCondition()\n  {\n    this.panelNumber++;\n    let data = this.panel.nativeElement;\n    let da = this.panel;\n    \n    console.log(\"data ==>>\", data, \"--\", da);\n  }\n\n  addEditRuleWindow()\n  {\n    this.isOpenAddEditWindow = true;\n\n  }\n\n  closeAddEditWindow(isOpenAddEditWindow: boolean)\n  {\n    this.isOpenAddEditWindow = isOpenAddEditWindow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-rule/rule-description/rule-description.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n/*.main-box-alert {\\r\\n    background-color: rgba(255, 255, 255, 0.36);\\r\\n    margin: 5px 8px;\\r\\n    box-shadow: 0 0 4px 4px #0F059E;\\r\\n    border-radius: 4px;\\r\\n    font-size: 11px;\\r\\n    padding: 0px 4px 10px 4px;\\r\\n  }*/\\r\\n  .alert-setting-wrapper{\\r\\n    overflow: auto;\\r\\n  }\\r\\n  .setting-box-alert{\\r\\n    padding: 0px 4px 10px 4px;\\r\\n  }\\r\\n  .inline-display{\\r\\n    display: block;\\r\\n  }\\r\\n  .align-right{\\r\\n    float:right;\\r\\n  }\\r\\n  .general-setting{\\r\\n    padding: 0em 2em 0.0em 2em;\\r\\n  }\\r\\n  .general-setting-top{\\r\\n    margin-bottom: -15px\\r\\n  }\\r\\n  .debug-setting{\\r\\n    padding: 1em 2em 0.0em 2em;\\r\\n  }\\r\\n  .enable-alert{\\r\\n    margin: -6px 0px 0px 0px ;\\r\\n  }\\r\\n  .enable-capacity, .enable-behavior, .enable-policy{\\r\\n    margin: 0em 0em 0em 3em ; \\r\\n  }\\r\\n  .setting-notifications{\\r\\n    margin: 0.2em 0em 0em 5em ; \\r\\n  }\\r\\n  .setting-notifications-item{\\r\\n    margin: -0.5em 0em 0em 6em ;\\r\\n  }\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-setting/alert-setting.component.css\n// module id = ../../../../../src/app/modules/alert/components/alert-setting/alert-setting.component.css\n// module chunks = main","module.exports = \"<p-growl [value]=\\\"msg\\\" [life]=5000></p-growl>\\r\\n<p-dialog [(visible)]=\\\"commonServices.displayDialog\\\" modal=\\\"modal\\\" width=\\\"400\\\" responsive=\\\"true\\\" draggable=\\\"false\\\" resizable=\\\"false\\\"\\r\\nminWidth=\\\"200\\\" minHeight=\\\"100\\\" height=\\\"auto\\\" [showHeader]=\\\"false\\\">\\r\\n<p>{{commonServices.dialogMessage}}</p>\\r\\n<p-progressBar [value]=\\\"commonServices.progressValue\\\"></p-progressBar>\\r\\n</p-dialog>\\r\\n\\r\\n<div class=\\\"main-box-alert setting-box-alert alert-setting-wrapper\\\" [style.height.px]=\\\"panelHeight\\\">\\r\\n  <div class=\\\"ui-g-12 ui-md-6 ui-lg-12 general-setting-top\\\">\\r\\n    <button *ngIf=\\\"!isAccessMailSms\\\" pButton style=\\\"float:right\\\" (click)='openMailSMSSettingWindow()' type=\\\"button\\\" icon=\\\"fa fa-envelope-o\\\" iconPos=\\\"left\\\" title=\\\"Email/SMS Settings\\\" label=\\\"Email/SMS Settings\\\"></button>\\r\\n  </div>\\r\\n  <div>\\r\\n    <div class=\\\"general-setting\\\">\\r\\n      <p-fieldset legend=\\\"Rule triggered Alert Settings\\\" [toggleable]=\\\"true\\\"><!-- title=\\\"These settings will be applicable to all alerts generated by applying alert rules\\\">-->\\r\\n          <div class=\\\" ui-g enable-alert\\\">\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isAlert\\\" [disabled]=\\\"isAccessPermission\\\" title=\\\"Enable/Disable all rule based Alerts\\\"> Enable Alerts</mat-slide-toggle></div>\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-10\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"clrExistingAlert\\\" [disabled]=\\\"isAccessPermission\\\" *ngIf=\\\"!isAlert\\\" title=\\\"Enable this option to remove all Active Alerts\\\"> Remove all Active Alerts</mat-slide-toggle></div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g enable-capacity\\\">\\r\\n              <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isEnableCapacity\\\" [disabled]=\\\"!isAlert || isAccessPermission\\\" title=\\\"Enable/Disable all rule based Capacity Alerts\\\"> Enable Capacity Alerts</mat-slide-toggle></div>\\r\\n              <div class=\\\"ui-g-12 ui-md-6 ui-lg-10\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isClrCapacityAlert\\\" [disabled]=\\\"isAccessPermission || !isAlert\\\" *ngIf=\\\"!isEnableCapacity\\\" title=\\\"Enable this option to remove all Active Capacity Alerts\\\"> Remove all Active Capacity Alerts</mat-slide-toggle></div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g enable-behavior\\\">\\r\\n              <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isEnableBehavior\\\" [disabled]=\\\"!isAlert || isAccessPermission\\\" title=\\\"Enable/Disable all rule based Behavior Alerts\\\"> Enable Behavior Alerts</mat-slide-toggle></div>\\r\\n              <div class=\\\"ui-g-12 ui-md-6 ui-lg-10\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isClrBehaviorAlert\\\" [disabled]=\\\"isAccessPermission || !isAlert\\\" *ngIf=\\\"!isEnableBehavior\\\" title=\\\"Enable this option to remove all Active Behavior Alerts\\\"> Remove all Active Behavior Alerts</mat-slide-toggle></div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g enable-policy\\\">\\r\\n              <div class=\\\"ui-g-12 ui-md-6 ui-lg-12\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isEnablePolicy\\\" [disabled]=\\\"!isAlert || isAccessPermission||(!isEnableCapacity && !isEnableBehavior)\\\" title=\\\"Enable/Disable all Alert Policy\\\"> Enable Alert Policy</mat-slide-toggle></div>\\r\\n          </div>\\r\\n          <h3 class=\\\"setting-notifications\\\">Notifications</h3>\\r\\n          <hr width = \\\"90%\\\">\\r\\n          <div class=\\\"ui-g setting-notifications-item\\\">\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isEmail\\\" [disabled]=\\\"!isEnablePolicy || !isAlert || isAccessPermission || (!isEnableCapacity && !isEnableBehavior)\\\" title=\\\"Enable/Disable all E-mail notifications specified in Alert Actions\\\"> E-mail</mat-slide-toggle></div>\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isSms\\\" [disabled]=\\\"!isEnablePolicy || !isAlert || isAccessPermission || (!isEnableCapacity && !isEnableBehavior)\\\" title=\\\"Enable/Disable all SMS notifications specified in Alert Actions\\\"> SMS</mat-slide-toggle></div>\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isSnmp\\\" [disabled]=\\\"!isEnablePolicy || !isAlert || isAccessPermission || (!isEnableCapacity && !isEnableBehavior)\\\" title=\\\"Enable/Disable all SNMP Trap notifications specified in Alert Actions\\\"> SNMP Trap</mat-slide-toggle></div>\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-1\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isExtension\\\" [disabled]=\\\"!isEnablePolicy || !isAlert || isAccessPermission || (!isEnableCapacity && !isEnableBehavior)\\\" title=\\\"Enable/Disable all Extension notifications specified in Alert Actions\\\"> Extension</mat-slide-toggle></div>\\r\\n            <!-- <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\r\\n              <p-multiSelect [options]=\\\"extensionName\\\" [(ngModel)]=\\\"selectedExtension\\\" [disabled] = \\\"!isExtension || !isEnablePolicy || !isAlert || isAccessPermission\\\" [panelStyle]=\\\"{minWidth:'12em'}\\\">\\r\\n                <ng-template let-eName pTemplate=\\\"item\\\">\\r\\n                  <div style=\\\"float:right\\\" title=\\\"{{eName.label}}\\\">{{eName.label}}</div>\\r\\n                </ng-template>\\r\\n              </p-multiSelect>\\r\\n            </div>-->\\r\\n          </div>\\r\\n          <h3 class=\\\"setting-notifications\\\">Diagnostics</h3>\\r\\n          <hr width = \\\"90%\\\">\\r\\n          <div class=\\\"ui-g setting-notifications-item\\\">\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isThreadDump\\\" [disabled]=\\\"!isEnablePolicy || !isAlert || isAccessPermission || (!isEnableCapacity && !isEnableBehavior)\\\" title=\\\"Enable/Disable all Thread Dump diagnostics specified in Alert Actions\\\"> Thread Dump</mat-slide-toggle></div>\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isHeapDump\\\" [disabled]=\\\"!isEnablePolicy || !isAlert || isAccessPermission || (!isEnableCapacity && !isEnableBehavior)\\\" title=\\\"Enable/Disable all Heap Dump diagnostics specified in Alert Actions\\\"> Heap Dump</mat-slide-toggle></div>\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isTcpDump\\\" [disabled]=\\\"!isEnablePolicy || !isAlert || isAccessPermission || (!isEnableCapacity && !isEnableBehavior)\\\" title=\\\"Enable/Disable all TCP Dump diagnostics specified in Alert Actions\\\"> TCP Dump</mat-slide-toggle></div>\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isCpuProfiling\\\" [disabled]=\\\"!isEnablePolicy || !isAlert || isAccessPermission || (!isEnableCapacity && !isEnableBehavior)\\\" title=\\\"Enable/Disable all CPU Profiling diagnostics specified in Alert Actions. Currently supported for NodeJS only.\\\"> CPU Profiling</mat-slide-toggle></div>\\r\\n          </div>\\r\\n          <h3 class=\\\"setting-notifications\\\">Remediation</h3>\\r\\n          <hr width = \\\"90%\\\">\\r\\n          <div class=\\\"ui-g setting-notifications-item\\\">\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isRunScript\\\" [disabled]=\\\"!isEnablePolicy || !isAlert || isAccessPermission || (!isEnableCapacity && !isEnableBehavior)\\\" title=\\\"Enable/Disable execution of all Scripts specified in Alert Actions\\\"> Run Script</mat-slide-toggle></div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g enable-policy\\\">\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isMaintenance\\\" [disabled]=\\\"!isAlert || isAccessPermission\\\" title=\\\"Enable/Disable all the rules in Maintenance window\\\"> Enable Maintenance window</mat-slide-toggle></div>\\r\\n            <!--<div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isClrPreMaintenance\\\" [disabled]=\\\"!isMaintenance || !isAlert || isAccessPermission\\\" title=\\\"Enable this option to remove previous Alerts under maintenance\\\"> Remove previous alert</mat-slide-toggle></div>-->\\r\\n          </div>\\r\\n          <div class=\\\"ui-g enable-policy\\\">\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\" style=\\\"margin-right: -75px\\\">Minimun Baseline value criteria for Behavior Alerts generation </div>\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\"><input  type=\\\"number\\\" limit-to=\\\"5\\\" restrict-decimal=\\\"3\\\" onPaste=\\\"return false\\\" min=\\\"0\\\"  max = \\\"1\\\" pInputText [(ngModel)]=\\\"minBehabiorValueReq\\\" [disabled] = \\\"!isAlert || isAccessPermission\\\" title=\\\"Provide a value between 0 to 1 (inclusive)\\\"></div>\\r\\n          </div>\\r\\n      </p-fieldset>\\r\\n    </div>\\r\\n    <div class=\\\"debug-setting\\\">\\r\\n      <p-fieldset legend=\\\"Rest API triggered Alert Settings\\\" [toggleable]=\\\"true\\\" [collapsed]=\\\"true\\\"><!--title=\\\"These settings will be applicable for all the alerts generated by REST API\\\">-->\\r\\n        <div class=\\\" ui-g enable-alert\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isExternalAlert\\\" [disabled]=\\\"isAccessPermission\\\" title=\\\"Enable/Disable all Rest API triggered Alerts\\\"> Enable Rest API triggered Alerts</mat-slide-toggle></div>\\r\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-10\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isClrExternalAlert\\\" [disabled]=\\\"isAccessPermission\\\" *ngIf=\\\"!isExternalAlert\\\" title=\\\"Enable this option to remove all Active Rest API triggered Alerts\\\"> Remove all Active Rest API triggered Alerts</mat-slide-toggle></div>\\r\\n        </div>\\r\\n        <div class=\\\"ui-g enable-policy\\\">\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\" style=\\\"margin-right: -10px\\\"><mat-slide-toggle [color]=\\\"color\\\" [(ngModel)]=\\\"isClearExternalAlert\\\" [disabled]=\\\"!isExternalAlert || isAccessPermission\\\" title=\\\"Enable/Disable Auto clear all the Rest API triggered Alerts on specified interval\\\"> Auto clear all the Rest API triggered Alerts every</mat-slide-toggle></div>\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-9\\\"><input  type=\\\"number\\\" restrict-decimal=\\\"0\\\" limit-to=\\\"5\\\" onPaste=\\\"return false\\\" min=\\\"1\\\"  max = \\\"10000\\\" pInputText [(ngModel)]=\\\"clearExternalAlertVal\\\" [disabled] = \\\"!isClearExternalAlert || !isExternalAlert || isAccessPermission\\\" title=\\\"Provide interval in minutes\\\"> min(s)</div>\\r\\n          </div>\\r\\n      </p-fieldset>\\r\\n    </div>\\r\\n    <div class=\\\"debug-setting\\\">\\r\\n      <p-fieldset legend=\\\"Debug Settings\\\" [toggleable]=\\\"true\\\" [collapsed]=\\\"true\\\">\\r\\n          <div class=\\\" ui-g enable-alert\\\">\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\">Debug Log</div>\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-10\\\">\\r\\n              <p-dropdown [options]=\\\"debugLog\\\" [(ngModel)]=\\\"selectedDebugLog\\\" [disabled] =\\\"isAccessPermission\\\" [style]=\\\"{'width':'100px'}\\\" title=\\\"{{selectedDebugLog}}\\\">\\r\\n                <ng-template let-dLog pTemplate=\\\"item\\\">\\r\\n                  <div title=\\\"{{dLog.label}}\\\">{{dLog.label}}</div>\\r\\n                </ng-template> \\r\\n              </p-dropdown>\\r\\n            </div>    \\r\\n          </div> \\r\\n          <div class=\\\" ui-g enable-alert\\\">\\r\\n              <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\">Profiling Log</div>\\r\\n              <div class=\\\"ui-g-12 ui-md-6 ui-lg-10\\\">\\r\\n                <p-dropdown [options]=\\\"profilingLog\\\" [(ngModel)]=\\\"selectedProfilingLog\\\" [disabled] =\\\"isAccessPermission\\\" [style]=\\\"{'width':'100px'}\\\" title=\\\"{{selectedProfilingLog}}\\\">\\r\\n                  <ng-template let-pLog pTemplate=\\\"item\\\">\\r\\n                    <div title=\\\"{{pLog.label}}\\\">{{pLog.label}}</div>\\r\\n                  </ng-template>\\r\\n                </p-dropdown>\\r\\n              </div>    \\r\\n            </div> \\r\\n          <div class=\\\" ui-g enable-alert\\\">\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\">Baseline View Format</div>\\r\\n            <div class=\\\"ui-g-12 ui-md-6 ui-lg-10\\\">\\r\\n              <p-dropdown [options]=\\\"alertBaselineView\\\" [(ngModel)]=\\\"selectedBaselineView\\\" [disabled] =\\\"isAccessPermission\\\" [style]=\\\"{'width':'100px'}\\\" (onChange)=\\\"changedBaselineViewTooltip($event)\\\" title=\\\"{{selectedBaselineViewTooltip}}\\\">\\r\\n                <ng-template let-abView pTemplate=\\\"item\\\">\\r\\n                  <div title=\\\"{{abView.title}}\\\">{{abView.label}}</div>\\r\\n                </ng-template> \\r\\n              </p-dropdown>\\r\\n            </div>    \\r\\n          </div>\\r\\n      </p-fieldset>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"ui-g-8 ui-md-8 ui-lg-12 bottom-panel\\\">\\r\\n  <div class=\\\"align-right\\\">\\r\\n    <button pButton type=\\\"button\\\" icon=\\\"fa fa-undo\\\" iconPos=\\\"left\\\" title=\\\"Reset Settings\\\" label=\\\"Reset\\\" (click)='resetSettingData(isAccessPermission)'></button>\\r\\n    <button pButton type=\\\"button\\\" icon=\\\"fa fa-check\\\" iconPos=\\\"left\\\" title=\\\"Apply Settings\\\" label=\\\"Apply\\\"  (click)='saveSettingData(isAccessPermission)'></button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-setting/alert-setting.component.html\n// module id = ../../../../../src/app/modules/alert/components/alert-setting/alert-setting.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Logger } from 'angular2-logger/core';\r\nimport { AlertSettingService } from '../../services/alert-setting-services';\r\nimport { CommonServices } from '../../services/common-services';\r\nimport { MailSmsConfService } from '../../../../main/services/cav-mail-sms-configuration-service';\r\nimport { AlertSettings, PolicySettings, ExtensionSettings } from '../../commons/setting-data';\r\nimport { AlertExtensionName, AlertDebugLog, AlertBaselineView} from \"../../interfaces/alert-setting-interface\";\r\nimport * as CONS from \"../../constants/alert-constant\";\r\nimport { SelectItem } from 'primeng/primeng';\r\n@Component({\r\n    selector: 'app-alert-setting',\r\n    templateUrl: './alert-setting.component.html',\r\n    styleUrls: ['./alert-setting.component.css'],\r\n  })\r\n\r\nexport class AlertSettingComponent implements OnInit \r\n{\r\n  /** this is used to store class Name */\r\n  className = \"AlertSettingComponent\";\r\n\r\n  /** used to display message in gui */\r\n  msg: any;\r\n\r\n  color = 'primary';\r\n  \r\n  /** this is used to store alert setting data object */\r\n  alertSettingData: AlertSettings;\r\n\r\n  /** this is used to store alert setting policy data*/\r\n  settingPolicytData: PolicySettings;\r\n\r\n  /** this is used to store alert setting extension */\r\n  alertExtension: ExtensionSettings;\r\n  \r\n  /** this stores the panel height of left and table panel */\r\n  panelHeight: number;\r\n\r\n  /** this is used to store  selected extension value */\r\n  selectedExtension: string[];\r\n\r\n  /** this is used to store all the alert extension for dropdown */\r\n  extensionName: SelectItem[]; \r\n  \r\n  /** this is used to store all  debug value for dropdown*/\r\n  debugLog: AlertDebugLog[];\r\n\r\n  /** this is used to store all  debug value for dropdown*/\r\n  profilingLog: AlertDebugLog[];\r\n\r\n\r\n\r\n  /** this is used to store all baseline view data for dropdown */\r\n  alertBaselineView: AlertBaselineView[];\r\n  \r\n  /** this is used to store all baseline view data for dropdown tooltip*/\r\n  selectedBaselineViewTooltip: string = \"\";\r\n\r\n  /** used to select extension when applied filter extension */\r\n  defaultExtensionIdx: number = 0; \r\n  \r\n\r\n  /**  this is used to hold access permission flage*/\r\n  isAccessPermission: boolean;\r\n\r\n  /**  this is used to hold access permission flage*/\r\n  isAccessMailSms: boolean;\r\n\r\n  /** this is used to store  all general flage*/\r\n  isAlert: boolean;\r\n  clrExistingAlert: boolean;\r\n  isEnableCapacity: boolean;\r\n  isClrCapacityAlert: boolean;\r\n  isEnableBehavior: boolean;\r\n  isClrBehaviorAlert: boolean;\r\n  isEnablePolicy: boolean;\r\n\r\n  /** this is used to store all notification flage */\r\n  isEmail: boolean;\r\n  isSms: boolean;\r\n  isSnmp: boolean;\r\n  isExtension: boolean;\r\n\r\n  /** this is used to store all diagostics flage */\r\n  isThreadDump: boolean;\r\n  isHeapDump: boolean;\r\n  isTcpDump: boolean;\r\n  isCpuProfiling: boolean;\r\n\r\n  /** this is used to store all Remediation flage */\r\n  isRunScript: boolean;\r\n  \r\n  /** this is used to store clear extension alert value and enable/disable flage */\r\n  isMaintenance: boolean;\r\n  isClrPreMaintenance: boolean\r\n  clearExternalAlertVal: number = 0;\r\n  minBehabiorValueReq: number = 0.0;\r\n  isClearExternalAlert: boolean;\r\n  \r\n  /** this is used to store all external alert setting flage */\r\n  isExternalAlert: boolean;\r\n  isClrExternalAlert: boolean;\r\n\r\n  /** this is used to store  selected Debug log value */\r\n  selectedDebugLog: number;\r\n\r\n  /** this is used to store  selected Debug log value */\r\n  selectedProfilingLog: number;\r\n\r\n  /** this is used to store  selected Base line View Mode value */\r\n  selectedBaselineView: number;\r\n\r\n  constructor(private logger: Logger, private alertSettingService: AlertSettingService, public commonServices: CommonServices, private mailSmsConfService: MailSmsConfService)\r\n  {\r\n    logger.info(this.className, \"constructor\", \"Loading...\");\r\n    this.panelHeight = window.innerHeight - 115;\r\n    this.msg = this.alertSettingService.messages;\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.alertSettingData = new AlertSettings();\r\n    this.settingPolicytData = new PolicySettings();\r\n    this.alertExtension = new ExtensionSettings();\r\n    this.debugLog = CONS.ALERT_DEBUG_LOG;\r\n    this.profilingLog = CONS.ALERT_DEBUG_LOG;\r\n    this.alertBaselineView =CONS.ALERT_BASELINE_VIEW;\r\n    this.selectedExtension = [];\r\n    this.setDefaultSettingFlage();\r\n    \r\n    let accessControl = this.alertSettingService.getAccessControlData(CONS.ALERT_ACCESS_CONTROL.MODULE, CONS.ALERT_ACCESS_CONTROL.ALERT_SETTINGS).subscribe(\r\n      res=>\r\n      {\r\n        this.setAccessData(res);\r\n      },\r\n      ()=>\r\n      {\r\n        accessControl.unsubscribe();\r\n      });\r\n    let smsMailControl = this.alertSettingService.getSmsMailControlData(\"ProductUI\").subscribe(\r\n      res=>\r\n      {\r\n        this.setSmsMailControlData(res);\r\n      },\r\n      ()=>\r\n      {\r\n        smsMailControl.unsubscribe();\r\n      });\r\n    this.commonServices.showProgressBar(\"Getting data from server, Please wait...\"); \r\n    this.alertSettingService.getAlertSettingData();\r\n\r\n    let alertSettingSubs = this.alertSettingService.alertSettingData$.subscribe(\r\n     res =>\r\n     {\r\n       this.setAlertSetting(res);\r\n     },\r\n     ()=>\r\n     {\r\n      alertSettingSubs.unsubscribe();\r\n     }\r\n    \r\n    );\r\n  }\r\n\r\n  setDefaultSettingFlage()\r\n  {\r\n    this.isAccessPermission = true;\r\n    this.isAlert = true;\r\n    this.clrExistingAlert = true;\r\n    this.isEnableCapacity = true;\r\n    this.isClrCapacityAlert = true;\r\n    this.isEnableBehavior = true;\r\n    this.isClrBehaviorAlert = true;\r\n    this.isEnablePolicy = true;\r\n    this.isEmail = true;\r\n    this.isSms = true;\r\n    this.isSnmp = true;\r\n    this.isExtension = true;\r\n    this.isThreadDump = true;\r\n    this.isHeapDump = true;\r\n    this.isTcpDump = true;\r\n    this.isCpuProfiling = true;\r\n    this.isRunScript = true;\r\n    this.isMaintenance = true;\r\n    this.isClrPreMaintenance = true;\r\n    this.isClearExternalAlert = true;\r\n    this.isExternalAlert = true;\r\n    this.isClrExternalAlert = true;\r\n  }\r\n\r\n  /** this method is used to set all alert setting values */\r\n  setAlertSetting(alertSettingsObj:AlertSettings)\r\n  {\r\n    this.isAlert = alertSettingsObj.alert;\r\n    this.clrExistingAlert =alertSettingsObj.clrExistingAlert;\r\n    this.isEnableCapacity = alertSettingsObj.capacity;\r\n    this.isClrCapacityAlert = alertSettingsObj.clrCapacityAlert;\r\n    this.isEnableBehavior = alertSettingsObj.behaviour;\r\n    this.isClrBehaviorAlert =  alertSettingsObj.clrBehaviorAlert;\r\n    this.isEnablePolicy = alertSettingsObj.policy.onPolicy;\r\n    this.isEmail = alertSettingsObj.policy.mail;\r\n    this.isSms = alertSettingsObj.policy.sms;\r\n    this.isSnmp = alertSettingsObj.policy.snmp;\r\n    this.isExtension = alertSettingsObj.policy.extension.onExt;\r\n    this.extensionName = [];\r\n    if(alertSettingsObj.policy.extension.extNames != undefined)\r\n    {\r\n      alertSettingsObj.policy.extension.extNames.forEach(element => {\r\n        this.extensionName.push({label: element, value: element});\r\n      });\r\n    }\r\n    if(alertSettingsObj.policy.extension.sExtNames != undefined)\r\n    {\r\n      this.selectedExtension = alertSettingsObj.policy.extension.sExtNames;\r\n    }\r\n    this.isThreadDump = alertSettingsObj.policy.threadDump;\r\n    this.isHeapDump = alertSettingsObj.policy.heapDump;\r\n    this.isTcpDump = alertSettingsObj.policy.tcpDump;\r\n    this.isCpuProfiling = alertSettingsObj.policy.cpuProfile;\r\n    this.isRunScript = alertSettingsObj.policy.runScript;\r\n    this.isMaintenance = alertSettingsObj.maintenance;\r\n    this.isClrPreMaintenance = alertSettingsObj.clrAlertOnMain;\r\n    this.isClearExternalAlert = alertSettingsObj.clrExtAlertOnInterval;\r\n    this.clearExternalAlertVal = alertSettingsObj.clrExtAlertInt;\r\n    this.minBehabiorValueReq = alertSettingsObj.minBehabiorValueReq;\r\n    this.selectedDebugLog = alertSettingsObj.debugLevel;\r\n    this.selectedProfilingLog = alertSettingsObj.profilingLevel;\r\n    this.selectedBaselineView = alertSettingsObj.baselineViewMode;\r\n    this.isExternalAlert =  alertSettingsObj.externalAlert;\r\n    this.isClrExternalAlert = alertSettingsObj.clrExternalAlert;\r\n    if(this.selectedBaselineView == 0)\r\n      this.selectedBaselineViewTooltip = \"Show only Average/Sum value\";\r\n    else\r\n      this.selectedBaselineViewTooltip = \"Show Average/Sum with count value\";\r\n  }\r\n\r\n  /**This is used to set alert access privilages setting data after deserialize the original data got from server and set it to alertAccessPrivilages variable for future use*/ \r\n  setAccessData(res) \r\n  {\r\n    try\r\n    {\r\n      this.logger.info(this.className, \"setAccessData\", \" response = \" + JSON.stringify(res));\r\n      if(res === null || res.All === undefined ||res.All === CONS.ACCESS_CONTROL_MODE.NO_PERMISSION || res.All === CONS.ACCESS_CONTROL_MODE.READ_MODE)\r\n        this.isAccessPermission = true;\r\n      else\r\n        this.isAccessPermission = false; \r\n    }\r\n    catch (e)\r\n    { \r\n      this.logger.error(this.className, \"setAccessData\", e);\r\n    }\r\n  }\r\n\r\n  setSmsMailControlData(res)\r\n  {\r\n    try\r\n    {\r\n      let emailSmsValue = res[\"Email/SMS Settings\"];\r\n      if(emailSmsValue === CONS.ACCESS_CONTROL_MODE.NO_PERMISSION)\r\n        this.isAccessMailSms = true;\r\n      else\r\n        this.isAccessMailSms = false; \r\n    }\r\n    catch (e)\r\n    { \r\n      this.logger.error(this.className, \"setSmsMailControlData\", e);\r\n    }\r\n  }\r\n\r\n  /*This is to validate whether any filter is applied or not*/  \r\n  isAnyFilterApplied(): boolean\r\n  { \r\n    if(this.isAlert || this.clrExistingAlert|| this.isEnableCapacity || this.isClrCapacityAlert || this.isEnableBehavior || this.isClrBehaviorAlert|| this.isEnablePolicy || this.isEmail || this.isSms || this.isSnmp || this.isExtension || this.isThreadDump || this.isHeapDump|| this.isTcpDump || this.isCpuProfiling || this.isRunScript || this.isMaintenance || this.isClrPreMaintenance || this.isClearExternalAlert || this.isExternalAlert || this.isClrExternalAlert) \r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  \r\n  /** this is used to set setting data to alert setting data service */\r\n  saveSettingData(isAccessPermission)\r\n  {\r\n    if(isAccessPermission)\r\n      return;\r\n    this.logger.info(this.className, \"saveSettingData method called.\");\r\n    if (!this.isAnyFilterApplied())\r\n    {\r\n      this.alertSettingService.showMessage(\"error\", \"Error\", \"Please select at least one setting to apply.\");\r\n      return;\r\n    }\r\n    /*if(this.isExtension)\r\n    {\r\n      if (this.selectedExtension.length == 0)\r\n      {\r\n        this.alertSettingService.showMessage(\"error\", \"Error\", \"Please select valid Extension for sending Alerts.\");\r\n        return;\r\n      }\r\n    }*/\r\n    if(this.minBehabiorValueReq < 0 || this.minBehabiorValueReq > 1 || this.minBehabiorValueReq == null)\r\n    {\r\n      this.alertSettingService.showMessage(\"error\", \"Error\", \"Minimun value criteria for Behavior Alerts generation should be >=0  and <=1.\");\r\n      return;\r\n    }\r\n    if(this.isClearExternalAlert && this.isExternalAlert)\r\n    {\r\n      if(this.clearExternalAlertVal < 1 || this.clearExternalAlertVal == null)\r\n      {\r\n        this.alertSettingService.showMessage(\"error\", \"Error\", \"Auto clear External Alerts interval should be > 0\");\r\n        return;\r\n      }\r\n    }\r\n    else\r\n      this.clearExternalAlertVal = this.alertSettingData.clrExtAlertInt;\r\n    this.alertSettingData.userName = this.commonServices.$loginUser;\r\n    this.alertSettingData.alert = this.isAlert;\r\n    this.alertSettingData.clrExistingAlert = this.clrExistingAlert;\r\n    this.alertSettingData.capacity = this.isEnableCapacity;\r\n    this.alertSettingData.clrCapacityAlert = this.isClrCapacityAlert;\r\n    this.alertSettingData.behaviour = this.isEnableBehavior;\r\n    this.alertSettingData.clrBehaviorAlert =  this.isClrBehaviorAlert \r\n    this.settingPolicytData.onPolicy = this.isEnablePolicy;\r\n    this.settingPolicytData.mail = this.isEmail;\r\n    this.settingPolicytData.sms = this.isSms;\r\n    this.settingPolicytData.snmp = this.isSnmp;\r\n    this.alertExtension.onExt = this.isExtension;\r\n    this.alertExtension.sExtNames = this.selectedExtension;\r\n    this.settingPolicytData.threadDump = this.isThreadDump;\r\n    this.settingPolicytData.heapDump = this.isHeapDump;\r\n    this.settingPolicytData.tcpDump = this.isTcpDump;\r\n    this.settingPolicytData.cpuProfile = this.isCpuProfiling;\r\n    this.settingPolicytData.runScript = this.isRunScript;\r\n    this.alertSettingData.maintenance = this.isMaintenance;\r\n    this.alertSettingData.clrAlertOnMain = this.isClrPreMaintenance;\r\n    this.alertSettingData.externalAlert = this.isExternalAlert;\r\n    this.alertSettingData.clrExternalAlert = this.isClrExternalAlert;\r\n    this.alertSettingData.clrExtAlertOnInterval = this.isClearExternalAlert;\r\n    this.alertSettingData.clrExtAlertInt = this.clearExternalAlertVal;\r\n    this.alertSettingData.minBehabiorValueReq = this.minBehabiorValueReq;\r\n    this.alertSettingData.debugLevel = this.selectedDebugLog;\r\n    this.alertSettingData.profilingLevel = this.selectedProfilingLog;\r\n    this.alertSettingData.baselineViewMode = this.selectedBaselineView;\r\n    this.settingPolicytData.extension = this.alertExtension;\r\n    this.alertSettingData.policy = this.settingPolicytData;\r\n    this.commonServices.showProgressBar(\"Getting data from server, Please wait...\"); \r\n    this.alertSettingService.saveAlertSettingData(this.alertSettingData);\r\n    this.selectedExtension = [];\r\n  }\r\n\r\n  /** this method is used to reset setting data */\r\n  resetSettingData(isAccessPermission)\r\n  {\r\n    if(isAccessPermission)\r\n      return;\r\n    this.commonServices.showProgressBar(\"Getting data from server, Please wait...\"); \r\n    this.alertSettingService.getAlertSettingData();\r\n  }\r\n\r\n  changedBaselineViewTooltip(event)\r\n  {\r\n    this.alertBaselineView.forEach(element =>\r\n    {\r\n     if(element.value == event.value)\r\n       this.selectedBaselineViewTooltip = element.title;\r\n    });\r\n  }\r\n\r\n  /**This method is used to open mail/SMS configuration window*/\r\n  openMailSMSSettingWindow()\r\n  {\r\n    this.mailSmsConfService.displayMailSettingWindowFlag(true);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/components/alert-setting/alert-setting.component.ts","import { AlertType } from \"../interfaces/active-alert\";\r\nimport { AlertPreset, ColFilterProperty} from \"../interfaces/active-alert\";\r\nimport {AlertExtensionName, AlertDebugLog, AlertBaselineView} from \"../interfaces/alert-setting-interface\";\r\nimport { MaintenanceScheduleType, MaintenanceScheduleMonth, MaintenanceScheduleWeek, MaintenanceScheduleWeekDay, MaintenanceScheduleDay, MaintenanceScheduleHour } from '../interfaces/alert-maintenance-interface';\r\nexport const ALERT_TYPE: AlertType[] = [\r\n  {\r\n    icon: \"capacity\",\r\n    label: \"Capacity\",\r\n    value: 'Capacity',\r\n    toolTip: \"Capacity Alert\"\r\n  },\r\n  {\r\n    icon: \"behavior\",\r\n    label: \"Behavior\",\r\n    value: 'Behavior',\r\n    toolTip: \"Behavior Alert\"\r\n  },\r\n  {\r\n    icon: \"allAlert\",\r\n    label: \"All\",\r\n    value: \"All\",\r\n    toolTip: \"All\"\r\n  }\r\n];\r\n\r\nexport const COL_FILTER_PROPERTY: ColFilterProperty[] = [\r\n  { label: \"Serial Number\", value: { value: \"serialNumber\", flage: false} },\r\n  { label: \"Selection Mode\", value: { value: \"selectionmode\", flage: false} },\r\n  { label: \"Source\", value: { value: \"source\", flage: true} },\r\n  { label: \"Dc\", value: { value: \"\", flage: false} },\r\n  { label: \"Alert Type\", value: { value: \"Capacity\", flage: false} },\r\n  { label: \"Alert Severity\", value: { value: \"alertseverity\", flage: false} },\r\n  { label: \"Status\", value:{ value: \"status\", flage: false }},\r\n  { label: \"Rule Name\", value: { value: \"ruleName\", flage: false }},\r\n  { label: \"Graph Names\", value: { value: \"graphNames\", flage: false }},\r\n  { label: \"Alert Message\", value: { value: \"alertMsg\", flage: false }},\r\n  { label: \"Alert Time\", value: { value: \"alertTime\", flage: false }},\r\n  { label: \"Time Ago\", value: { value: \"timeAgo\", flage: false }},\r\n  { label: \"Tier\", value: { value: \"tier\", flage: false }},\r\n  { label: \"Server\" , value: { value: \"server\", flage: false }},\r\n  { label: \"Instance\", value: { value: \"instance\", flage: false }},\r\n  { label: \"Alert Value\", value: { value: \"alertValue\", flage: false }},\r\n  { label: \"Threshold Value\", value:{ value: \"thresholdValue\", flage: false }},\r\n  { label: \"Baseline\", value:{ value: \"Capacity\", flage: false }},\r\n  { label: \"Action\", value:{ value: \"action\", flage: false }}\r\n]\r\n\r\nexport const ALERT_PRESETS: AlertPreset[] = [\r\n  {\r\n    label: \"Last 10 Minutes\",\r\n    value: \"Last 10 Minutes\",\r\n    toolTip: \"Last 10 Minutes\"\r\n  },\r\n  {\r\n    label: \"Last 30 Minutes\",\r\n    value: \"Last 30 Minutes\",\r\n    toolTip: \"Last 30 Minutes\"\r\n  },\r\n  {\r\n    label: \"Last 1 Hour\",\r\n    value: \"Last 1 Hour\",\r\n    toolTip: \"Last 1 Hour\"\r\n  },\r\n  {\r\n    label: \"Last 2 Hours\",\r\n    value: \"Last 2 Hours\",\r\n    toolTip: \"Last 2 Hours\"\r\n  },\r\n  {\r\n    label: \"Last 4 Hours\",\r\n    value: \"Last 4 Hours\",\r\n    toolTip: \"Last 4 Hours\"\r\n  },\r\n  {\r\n    label: \"Last 6 Hours\",\r\n    value: \"Last 6 Hours\",\r\n    toolTip: \"Last 6 Hours\"\r\n  },\r\n  {\r\n    label: \"Last 12 Hours\",\r\n    value: \"Last 12 Hours\",\r\n    toolTip: \"Last 12 Hours\"\r\n  },\r\n  {\r\n    label: \"Last 24 Hours\",\r\n    value: \"Last 24 Hours\",\r\n    toolTip: \"Last 24 Hours\"\r\n  },\r\n  {\r\n    label: \"Today\",\r\n    value: \"Today\",\r\n    toolTip: \"Today\"\r\n  },\r\n  {\r\n    label: \"Yesterday\",\r\n    value: \"Yesterday\",\r\n    toolTip: \"Yesterday\"\r\n  },\r\n  {\r\n    label: \"Last 7 Days\",\r\n    value: \"Last 7 Days\",\r\n    toolTip: \"Last 7 Days\"\r\n  },\r\n  {\r\n    label: \"Last 30 Days\",\r\n    value: \"Last 30 Days\",\r\n    toolTip: \"Last 30 Days\"\r\n  },\r\n  {\r\n    label: \"Last 90 Days\",\r\n    value: \"Last 90 Days\",\r\n    toolTip: \"Last 90 Days\"\r\n  },\r\n  {\r\n    label: \"This Week\",\r\n    value: \"This Week\",\r\n    toolTip: \"This Week\"\r\n  },\r\n  {\r\n    label: \"Last Week\",\r\n    value: \"Last Week\",\r\n    toolTip: \"Last Week\"\r\n  },\r\n  {\r\n    label: \"Last 2 Weeks\",\r\n    value: \"Last 2 Weeks\",\r\n    toolTip: \"Last 2 Weeks\"\r\n  },\r\n  {\r\n    label: \"Last 3 Weeks\",\r\n    value: \"Last 3 Weeks\",\r\n    toolTip: \"Last 3 Weeks\"\r\n  },\r\n  {\r\n    label: \"Last 4 Weeks\",\r\n    value: \"Last 4 Weeks\",\r\n    toolTip: \"Last 4 Weeks\"\r\n  },\r\n  {\r\n    label: \"This Month\",\r\n    value: \"This Month\",\r\n    toolTip: \"This Month\"\r\n  },\r\n  {\r\n    label: \"Last Month\",\r\n    value: \"Last Month\",\r\n    toolTip: \"Last Month\"\r\n  },\r\n  {\r\n    label: \"Last 2 Months\",\r\n    value: \"Last 2 Months\",\r\n    toolTip: \"Last 2 Months\"\r\n  },\r\n  {\r\n    label: \"Last 3 Months\",\r\n    value: \"Last 3 Months\",\r\n    toolTip: \"Last 3 Months\"\r\n  },\r\n  {\r\n    label: \"Last 6 Months\",\r\n    value: \"Last 6 Months\",\r\n    toolTip: \"Last 6 Months\"\r\n  },\r\n  {\r\n    label: \"This Year\",\r\n    value: \"This Year\",\r\n    toolTip: \"This Year\"\r\n  },\r\n  {\r\n    label: \"Last Year\",\r\n    value: \"Last Year\",\r\n    toolTip: \"Last Year\"\r\n  },\r\n  // {\r\n  //   label: \"Event Days\",\r\n  //   value: \"Event Days\",\r\n  //   toolTip: \"Event Days\"\r\n  // },\r\n  {\r\n    label: \"Custom\",\r\n    value: \"Custom\",\r\n    toolTip: \"Custom\"\r\n  }\r\n]\r\n\r\nexport const ALERT_PRESETS_NS: AlertPreset[] = [\r\n  {\r\n    label: \"Last 10 Minutes\",\r\n    value: \"Last 10 Minutes\",\r\n    toolTip: \"Last 10 Minutes\"\r\n  },\r\n  {\r\n    label: \"Last 30 Minutes\",\r\n    value: \"Last 30 Minutes\",\r\n    toolTip: \"Last 30 Minutes\"\r\n  },\r\n  {\r\n    label: \"Last 1 Hour\",\r\n    value: \"Last 1 Hour\",\r\n    toolTip: \"Last 1 Hour\"\r\n  },\r\n  {\r\n    label: \"Last 2 Hours\",\r\n    value: \"Last 2 Hours\",\r\n    toolTip: \"Last 2 Hours\"\r\n  },\r\n  {\r\n    label: \"Last 4 Hours\",\r\n    value: \"Last 4 Hours\",\r\n    toolTip: \"Last 4 Hours\"\r\n  },\r\n  {\r\n    label: \"Last 6 Hours\",\r\n    value: \"Last 6 Hours\",\r\n    toolTip: \"Last 6 Hours\"\r\n  },\r\n  {\r\n    label: \"Last 12 Hours\",\r\n    value: \"Last 12 Hours\",\r\n    toolTip: \"Last 12 Hours\"\r\n  },\r\n  {\r\n    label: \"Last 24 Hours\",\r\n    value: \"Last 24 Hours\",\r\n    toolTip: \"Last 24 Hours\"\r\n  },\r\n  {\r\n    label: \"Whole Scenario\",\r\n    value: \"Whole Scenario\",\r\n    toolTip: \"Whole Scenario\"\r\n  },\r\n  {\r\n    label: \"Custom\",\r\n    value: \"Custom\",\r\n    toolTip: \"Custom\"\r\n  }\r\n]\r\n\r\n/**Used to define String filters. */\r\nexport const HISTORY_STRING_FILTERS = {\r\n  RULE_NAME: \"Rule Name\",\r\n  BASELINE_NAME: \"Baseline Name\",\r\n  MESSAGE: \"Message\"\r\n}\r\n\r\nexport const HISTORY_STRING_FILTERS_NUM = {\r\n  RULE_NAME: 1,\r\n  BASELINE_NAME: 2,\r\n  MESSAGE: 3\r\n}\r\n\r\nexport const IMAGE_PATH: string = \"assets/images/img/\";\r\nexport const ALERT_TYPE_STRING = {\r\n  CAPACITY: \"Capacity\",\r\n  BEHAVIOR: \"Behavior\",\r\n  ALL:\"All\"\r\n}\r\n\r\nexport const TIME_IN_MILIS = {\r\n  SECOND: 1000,\r\n  MINUTE: 60000,\r\n  MINUTE_30: 1800000,\r\n  HOUR: 3600000,\r\n  DAY: 86400000\r\n}\r\n\r\nexport const ALERT_SEVERITY_STRING = {\r\n  CRITICAL: \"Critical\",\r\n  MAJOR: \"Major\",\r\n  MINOR: \"Minor\",\r\n  NORMAL: \"Normal\",\r\n}\r\n\r\nexport const ALERT_SEVERITY_NUM = {\r\n  NORMAL: 0,\r\n  MINOR: 1,\r\n  MAJOR: 2,\r\n  CRITICAL: 3,\r\n  ALL_SEVERITY: 4,\r\n  ALL_INCREASING_CRITICALLY:5\r\n}\r\n\r\n/*Column name constant used in place of Tier, Server and Instance in table for NV mode*/\r\nexport const  ALERT_MAINTENANCE_WINDOW_CONST = {\r\n  COL_INDICES: \"Indices Level\"\r\n}\r\n//History Operation\r\nexport const GET_ALERT_DATA = 0;\r\nexport const DELETE_HISTORY = 22;\r\n\r\n//Presets Constraints\r\nexport const LAST_PRESET = 1;\r\nexport const CUSTOM_PRESET = 2;\r\n\r\n//State\r\nexport const OPENED = 1;\r\nexport const RESOLVED = 2;\r\n\r\n//Alert Type\r\nexport const CAPACITY_ALERT = 0;\r\nexport const BEHAVIORAL_ALERT = 1;\r\nexport const ALL_ALERT = 2;\r\n\r\nexport const PRESET = {\r\n  LAST_10_MINS: \"Last 10 Minutes\",\r\n  LAST_30_MINS: \"Last 30 Minutes\",\r\n  LAST_1_HOURS: \"Last 1 Hour\",\r\n  LAST_2_HOURS: \"Last 2 Hours\",\r\n  LAST_4_HOURS: \"Last 4 Hours\",\r\n  LAST_6_HOURS: \"Last 6 Hours\",\r\n  LAST_12_HOURS: \"Last 12 Hours\",\r\n  LAST_24_HOURS: \"Last 24 Hours\",\r\n  TODAY: \"Today\",\r\n  YESTERDAY: \"Yesterday\",\r\n  LAST_7_DAYS: \"Last 7 Days\",\r\n  LAST_30_DAYS: \"Last 30 Days\",\r\n  LAST_90_DAYS: \"Last 90 Days\",\r\n  THIS_WEEK: \"This Week\",\r\n  LAST_WEEK: \"Last Week\",\r\n  LAST_2_WEEKS: \"Last 2 Weeks\",\r\n  LAST_3_WEEKS: \"Last 3 Weeks\",\r\n  LAST_4_WEEKS: \"Last 4 Weeks\",\r\n  THIS_MONTH: \"This Month\",\r\n  LAST_MONTH: \"Last Month\",\r\n  LAST_2_MONTHS: \"Last 2 Month\",\r\n  LAST_3_MONTHS: \"Last 3 Month\",\r\n  LAST_6_MONTHS: \"Last 6 Month\",\r\n  THIS_YEAR: \"This Year\",\r\n  LAST_YEAR: \"Last Year\",\r\n  CUSTOM: \"Custom\",\r\n}\r\n\r\nexport const TYPE = {\r\n  ALERT: 0,\r\n  RULE: 1,\r\n  BASELINE: 2,\r\n  ALERT_SETTING: 3,\r\n  NONE: 4,\r\n  TOMCAT:5,\r\n  MAINTENANCE:6\r\n}\r\n\r\n//Alert - Status \r\nexport const STATUS = {\r\n  STARTED: 1,\r\n  CONTINUES: 2,\r\n  ENDED: 3,\r\n  UPGRADED: 4,\r\n  DOWNGRADED: 5,\r\n  FORCECLEAR: 6,\r\n  CLEARDUETORULECHANGES: 7\r\n}\r\n\r\n//Graph Types\r\nexport const GRAPH_TYPE = {\r\n  AVERAGE_GRAPH: 0,\r\n  SIMPLE_GRAPH: 1,\r\n  DERIVED_GRAPH: 2,\r\n}\r\n\r\nexport const ALERT_EXTENSION_NAME: AlertExtensionName[] = [\r\n  {\r\n    label: \"ServiceNow\",\r\n    value: \"ServiceNow\",\r\n    toolTip: \"ServiceNow\"\r\n  },\r\n  {\r\n    label: \"PagerDuty\",\r\n    value: \"PagerDuty\",\r\n    toolTip: \"PagerDuty\"\r\n  },\r\n  {\r\n    label: \"CiscoSpark\",\r\n    value: \"CiscoSpark\",\r\n    toolTip: \"CiscoSpark\"\r\n  }\r\n]\r\n//ACCESS_CONTROL_MODE\r\nexport const ACCESS_CONTROL_MODE = {\r\n  READ_MODE: 4,\r\n  WRITE_MODE: 6,\r\n  NO_PERMISSION:0,\r\n\r\n}\r\n\r\nexport const ALERT_DEBUG_LOG: AlertDebugLog[] =[\r\n  {\r\n    label: \"0\",\r\n    value: 0,\r\n    toolTip: \"0\"\r\n  },\r\n  {\r\n    label: \"1\",\r\n    value: 1,\r\n    toolTip: \"1\"\r\n  },\r\n  {\r\n    label: \"2\",\r\n    value: 2,\r\n    toolTip: \"2\"\r\n  },\r\n  {\r\n    label: \"3\",\r\n    value: 3,\r\n    toolTip: \"3\"\r\n  },\r\n  {\r\n    label: \"4\",\r\n    value: 4,\r\n    toolTip: \"4\"\r\n  }\r\n]\r\n\r\nexport const ALERT_BASELINE_VIEW: AlertBaselineView[] = [\r\n  {\r\n    label: \"Basic\",\r\n    value: 0,\r\n    title: \"Show only Average/Sum value\"\r\n  },\r\n  {\r\n    label: \"Extended\",\r\n    value: 1,\r\n    title: \"Show Average/Sum with count value\"\r\n  }\r\n]\r\n\r\nexport const PATTERN_CONST_NAME = \"PATTERN#\";\r\nexport const ALERT_ACCESS_CONTROL = {\r\n  MODULE: \"Alert\",\r\n  ACTIVE_ALERT: \"Active Alert\",\r\n  ALERT_HISTORY: \"Alert History\",\r\n  ALERT_MIANTENANCE_WINDOW: \"Alert Maintenance Window\",\r\n  ALERT_SETTINGS: \"Alert Settings\",\r\n\r\n}\r\n\r\nexport const MAINTENANCE_SCHEDULE_TYPE: MaintenanceScheduleType[] = [\r\n  {\r\n    label: \"Every Day of Every Month\",\r\n    value: {scheduleId: 7, scheduleTitle: \"Every Day of Every Month\"},\r\n    toolTip: \"Every Day of Every Month\",\r\n    active: false\r\n  },\r\n  {\r\n    label: \"Day of Every Month\",\r\n    value: {scheduleId: 0, scheduleTitle: \"Day of Every Month\"},\r\n    toolTip: \"Day of Every Month\",\r\n    active: false\r\n  },\r\n  {\r\n    label: \"Last Day of Every Month\",\r\n    value: {scheduleId: 1, scheduleTitle: \"Last Day of Every Month\"},\r\n    toolTip: \"Last Day of Every Month\",\r\n    active: false\r\n  },\r\n  {\r\n    label: \"Weekday of Every Month\",\r\n    value: {scheduleId: 2, scheduleTitle: \"Weekday of Every Month\"},\r\n    toolTip: \"Weekday of Every Month\",\r\n    active: false\r\n  },\r\n  {\r\n    label: \"Day of Every Year\",\r\n    value: {scheduleId: 3, scheduleTitle: \"Day of Every Year\"},\r\n    toolTip: \"Day of Every Year\",\r\n    active: false\r\n  },\r\n  {\r\n    label: \"Weekday of Every Year\",\r\n    value: {scheduleId: 4, scheduleTitle: \"Weekday of Every Year\"},\r\n    toolTip: \"Weekday of Every Year\",\r\n    active: false\r\n  },\r\n  {\r\n    label: \"Custom\",\r\n    value: {scheduleId: 6, scheduleTitle: \"Custom\"},\r\n    toolTip: \"Custom\",\r\n    active: false\r\n  }\r\n]\r\n\r\nexport const COL_INDICES = \"Indices Level\";\r\nexport const SCHEDULE_TYPE_CONST = {\r\n  EVERY_DAY_OF_EVERY_MONTH: \"Every Day of Every Month\",\r\n  DAY_OF_EVERY_MONTH: \"Day of Every Month\",\r\n  LAST_DAY_OF_EVERY_MONTH: \"Last Day of Every Month\",\r\n  WEEKDAY_OF_EVERY_MONTH: \"Weekday of Every Month\",\r\n  DAY_OF_EVERY_YEAR: \"Day of Every Year\",\r\n  WEEKDAY_OF_EVERY_YEAR: \"Weekday of Every Year\",\r\n  CUSTOM: \"Custom\"\r\n}\r\n\r\nexport const MAINTENANCE_SCHEDULE_MONTH: MaintenanceScheduleMonth[] = [\r\n  { label: \"January\", value: {monthId: 1, monthTitle: \"January\"}, toolTip: \"January\" },\r\n  { label: \"February\", value: {monthId: 2, monthTitle: \"February\"}, toolTip: \"February\" },\r\n  { label: \"March\", value: {monthId: 3, monthTitle: \"March\"}, toolTip: \"March\" },\r\n  { label: \"April\", value: {monthId: 4, monthTitle: \"April\"}, toolTip: \"April\" },\r\n  { label: \"May\", value: {monthId: 5, monthTitle: \"May\"}, toolTip: \"May\" },\r\n  { label: \"June\", value: {monthId: 6, monthTitle: \"June\"}, toolTip: \"June\" },\r\n  { label: \"July\", value: {monthId: 7, monthTitle: \"July\"}, toolTip: \"July\" },\r\n  { label: \"August\", value: {monthId: 8, monthTitle: \"August\"}, toolTip: \"August\" },\r\n  { label: \"September\", value: {monthId: 9, monthTitle: \"September\"}, toolTip: \"September\" },\r\n  { label: \"October\", value: {monthId: 10, monthTitle: \"October\"}, toolTip: \"October\" },\r\n  { label: \"November\", value: {monthId: 11, monthTitle: \"November\"}, toolTip: \"November\" },\r\n  { label: \"December\", value: {monthId: 12, monthTitle: \"December\"}, toolTip: \"December\" }\r\n]\r\n\r\nexport const MAINTENANCE_SCHEDULE_WEEK: MaintenanceScheduleWeek[] = [\r\n  { label: \"1st\", value: {weekId: 1, weekTitle: \"1st\"}, toolTip: \"1st\" },\r\n  { label: \"2nd\", value: {weekId: 2, weekTitle: \"2nd\"}, toolTip: \"2nd\" },\r\n  { label: \"3rd\", value: {weekId: 3, weekTitle: \"3rd\"}, toolTip: \"3rd\" },\r\n  { label: \"4th\", value: {weekId: 4, weekTitle: \"4th\"}, toolTip: \"4th\" },\r\n  { label: \"last\", value: {weekId: 5, weekTitle: \"last\"}, toolTip: \"last\" }\r\n]\r\n\r\nexport const MAINTENANCE_SCHEDULE_WEEK_DAY: MaintenanceScheduleWeekDay[] = [\r\n  { label: \"Sunday\", value: {weekDayId: 1, weekDayTitle: \"Sunday\"}, toolTip: \"Sunday\" },\r\n  { label: \"Monday\", value: {weekDayId: 2, weekDayTitle: \"Monday\"}, toolTip: \"Monday\" },\r\n  { label: \"Tuesday\", value: {weekDayId: 3, weekDayTitle: \"Tuesday\"}, toolTip: \"Tuesday\" },\r\n  { label: \"Wednesday\", value: {weekDayId: 4, weekDayTitle: \"Wednesday\"}, toolTip: \"Wednesday\" },\r\n  { label: \"Thursday\", value: {weekDayId: 5, weekDayTitle: \"Thursday\"}, toolTip: \"Thursday\" },\r\n  { label: \"Friday\", value: {weekDayId: 6, weekDayTitle: \"Friday\"}, toolTip: \"Friday\" },\r\n  { label: \"Saturday\", value: {weekDayId: 7, weekDayTitle: \"Saturday\"}, toolTip: \"Saturday\" }\r\n]\r\n\r\nexport const MAINTENANCE_SCHEDULE_DAY: MaintenanceScheduleDay[] = [\r\n  { label: \"1st\", value: {dayId: 1, dayTitle: \"1st\"}, toolTip: \"1st\" },\r\n  { label: \"2nd\", value: {dayId: 2, dayTitle: \"2nd\"}, toolTip: \"2nd\" },\r\n  { label: \"3rd\", value: {dayId: 3, dayTitle: \"3rd\"}, toolTip: \"3rd\" },\r\n  { label: \"4th\", value: {dayId: 4, dayTitle: \"4th\"}, toolTip: \"4th\" },\r\n  { label: \"5th\", value: {dayId: 5, dayTitle: \"5th\"}, toolTip: \"5th\" },\r\n  { label: \"6th\", value: {dayId: 6, dayTitle: \"6th\"}, toolTip: \"6th\" },\r\n  { label: \"7th\", value: {dayId: 7, dayTitle: \"7th\"}, toolTip: \"7th\" },\r\n  { label: \"8th\", value: {dayId: 8, dayTitle: \"8th\"}, toolTip: \"8th\" },\r\n  { label: \"9th\", value: {dayId: 9, dayTitle: \"9th\"}, toolTip: \"9th\" },\r\n  { label: \"10th\", value: {dayId: 10, dayTitle: \"10th\"}, toolTip: \"10th\" },\r\n  { label: \"11th\", value: {dayId: 11, dayTitle: \"11th\"}, toolTip: \"11th\" },\r\n  { label: \"12th\", value: {dayId: 12, dayTitle: \"12th\"}, toolTip: \"12th\" },\r\n  { label: \"13th\", value: {dayId: 13, dayTitle: \"13th\"}, toolTip: \"13th\" },\r\n  { label: \"14th\", value: {dayId: 14, dayTitle: \"14th\"}, toolTip: \"14th\" },\r\n  { label: \"15th\", value: {dayId: 15, dayTitle: \"15th\"}, toolTip: \"15th\" },\r\n  { label: \"16th\", value: {dayId: 16, dayTitle: \"16th\"}, toolTip: \"16th\" },\r\n  { label: \"17th\", value: {dayId: 17, dayTitle: \"17th\"}, toolTip: \"17th\" },\r\n  { label: \"18th\", value: {dayId: 18, dayTitle: \"18th\"}, toolTip: \"18th\" },\r\n  { label: \"19th\", value: {dayId: 19, dayTitle: \"19th\"}, toolTip: \"19th\" },\r\n  { label: \"20th\", value: {dayId: 20, dayTitle: \"20th\"}, toolTip: \"20th\" },\r\n  { label: \"21st\", value: {dayId: 21, dayTitle: \"21st\"}, toolTip: \"21st\" },\r\n  { label: \"22nd\", value: {dayId: 22, dayTitle: \"22nd\"}, toolTip: \"22nd\" },\r\n  { label: \"23rd\", value: {dayId: 23, dayTitle: \"23rd\"}, toolTip: \"23rd\" },\r\n  { label: \"24th\", value: {dayId: 24, dayTitle: \"24th\"}, toolTip: \"24th\" },\r\n  { label: \"25th\", value: {dayId: 25, dayTitle: \"25th\"}, toolTip: \"25th\" }, \r\n  { label: \"26th\", value: {dayId: 26, dayTitle: \"26th\"}, toolTip: \"26th\" }, \r\n  { label: \"27th\", value: {dayId: 27, dayTitle: \"27th\"}, toolTip: \"27th\" }, \r\n  { label: \"28th\", value: {dayId: 28, dayTitle: \"28th\"}, toolTip: \"28th\" }, \r\n  { label: \"29th\", value: {dayId: 29, dayTitle: \"29th\"}, toolTip: \"29th\" }, \r\n  { label: \"30th\", value: {dayId: 30, dayTitle: \"30th\"}, toolTip: \"30th\" }, \r\n  { label: \"31st\", value: {dayId: 31, dayTitle: \"31st\"}, toolTip: \"31st\" } \r\n]\r\n\r\nexport const MAINTENANCE_SCHEDULE_FROM_HOUR: MaintenanceScheduleHour[] = [\r\n  { label: \"0th\", value: {hourId: 0, hourTitle: \"0th\"}, toolTip: \"0th\" },\r\n  { label: \"1st\", value: {hourId: 1, hourTitle: \"1st\"}, toolTip: \"1st\" },\r\n  { label: \"2nd\", value: {hourId: 2, hourTitle: \"2nd\"}, toolTip: \"2nd\" },\r\n  { label: \"3rd\", value: {hourId: 3, hourTitle: \"3rd\"}, toolTip: \"3rd\" },\r\n  { label: \"4th\", value: {hourId: 4, hourTitle: \"4th\"}, toolTip: \"4th\" },\r\n  { label: \"5th\", value: {hourId: 5, hourTitle: \"5th\"}, toolTip: \"5th\" },\r\n  { label: \"6th\", value: {hourId: 6, hourTitle: \"6th\"}, toolTip: \"6th\" },\r\n  { label: \"7th\", value: {hourId: 7, hourTitle: \"7th\"}, toolTip: \"7th\" },\r\n  { label: \"8th\", value: {hourId: 8, hourTitle: \"8th\"}, toolTip: \"8th\" },\r\n  { label: \"9th\", value: {hourId: 9, hourTitle: \"9th\"}, toolTip: \"9th\" },\r\n  { label: \"10th\", value: {hourId: 10, hourTitle: \"10th\"}, toolTip: \"10th\" },\r\n  { label: \"11th\", value: {hourId: 11, hourTitle: \"11th\"}, toolTip: \"11th\" },\r\n  { label: \"12th\", value: {hourId: 12, hourTitle: \"12th\"}, toolTip: \"12th\" },\r\n  { label: \"13th\", value: {hourId: 13, hourTitle: \"13th\"}, toolTip: \"13th\" },\r\n  { label: \"14th\", value: {hourId: 14, hourTitle: \"14th\"}, toolTip: \"14th\" },\r\n  { label: \"15th\", value: {hourId: 15, hourTitle: \"15th\"}, toolTip: \"15th\" },\r\n  { label: \"16th\", value: {hourId: 16, hourTitle: \"16th\"}, toolTip: \"16th\" },\r\n  { label: \"17th\", value: {hourId: 17, hourTitle: \"17th\"}, toolTip: \"17th\" },\r\n  { label: \"18th\", value: {hourId: 18, hourTitle: \"18th\"}, toolTip: \"18th\" },\r\n  { label: \"19th\", value: {hourId: 19, hourTitle: \"19th\"}, toolTip: \"19th\" },\r\n  { label: \"20th\", value: {hourId: 20, hourTitle: \"20th\"}, toolTip: \"20th\" },\r\n  { label: \"21st\", value: {hourId: 21, hourTitle: \"21st\"}, toolTip: \"21st\" },\r\n  { label: \"22nd\", value: {hourId: 22, hourTitle: \"22nd\"}, toolTip: \"22nd\" },\r\n  { label: \"23rd\", value: {hourId: 23, hourTitle: \"23rd\"}, toolTip: \"23th\" }\r\n]\r\n\r\nexport const MAINTENANCE_SCHEDULE_TO_HOUR: MaintenanceScheduleHour[] = [\r\n  { label: \"1st\", value: {hourId: 0, hourTitle: \"1st\"}, toolTip: \"1st\" },\r\n  { label: \"2nd\", value: {hourId: 1, hourTitle: \"2nd\"}, toolTip: \"2nd\" },\r\n  { label: \"3rd\", value: {hourId: 2, hourTitle: \"3rd\"}, toolTip: \"3rd\" },\r\n  { label: \"4th\", value: {hourId: 3, hourTitle: \"4th\"}, toolTip: \"4th\" },\r\n  { label: \"5th\", value: {hourId: 4, hourTitle: \"5th\"}, toolTip: \"5th\" },\r\n  { label: \"6th\", value: {hourId: 5, hourTitle: \"6th\"}, toolTip: \"6th\" },\r\n  { label: \"7th\", value: {hourId: 6, hourTitle: \"7th\"}, toolTip: \"7th\" },\r\n  { label: \"8th\", value: {hourId: 7, hourTitle: \"8th\"}, toolTip: \"8th\" },\r\n  { label: \"9th\", value: {hourId: 8, hourTitle: \"9th\"}, toolTip: \"9th\" },\r\n  { label: \"10th\", value: {hourId: 9, hourTitle: \"10th\"}, toolTip: \"10th\" },\r\n  { label: \"11th\", value: {hourId: 10, hourTitle: \"11th\"}, toolTip: \"11th\" },\r\n  { label: \"12th\", value: {hourId: 11, hourTitle: \"12th\"}, toolTip: \"12th\" },\r\n  { label: \"13th\", value: {hourId: 12, hourTitle: \"13th\"}, toolTip: \"13th\" },\r\n  { label: \"14th\", value: {hourId: 13, hourTitle: \"14th\"}, toolTip: \"14th\" },\r\n  { label: \"15th\", value: {hourId: 14, hourTitle: \"15th\"}, toolTip: \"15th\" },\r\n  { label: \"16th\", value: {hourId: 15, hourTitle: \"16th\"}, toolTip: \"16th\" },\r\n  { label: \"17th\", value: {hourId: 16, hourTitle: \"17th\"}, toolTip: \"17th\" },\r\n  { label: \"18th\", value: {hourId: 17, hourTitle: \"18th\"}, toolTip: \"18th\" },\r\n  { label: \"19th\", value: {hourId: 18, hourTitle: \"19th\"}, toolTip: \"19th\" },\r\n  { label: \"20th\", value: {hourId: 19, hourTitle: \"20th\"}, toolTip: \"20th\" },\r\n  { label: \"21st\", value: {hourId: 20, hourTitle: \"21st\"}, toolTip: \"21st\" },\r\n  { label: \"22nd\", value: {hourId: 21, hourTitle: \"22nd\"}, toolTip: \"22nd\" },\r\n  { label: \"23rd\", value: {hourId: 22, hourTitle: \"23rd\"}, toolTip: \"23rd\" },\r\n  { label: \"24th\", value: {hourId: 23, hourTitle: \"24th\"}, toolTip: \"24th\" }\r\n]\r\n\r\nexport const MAINTAINANCE_WINDOW_CONSTANT = {\r\n  COL_INDICES: \"Indices Level\",\r\n  ADDED_MAINTENANCE_PERIOD: 0,\r\n  DELETE_AND_CREATE_DATA_FOR_MAINTENANCE_PERIOD: 1,\r\n  DELETE_WITHOUT_CREATE_DATA_FOR_MAINTENANCE_PERIOD: 2,\r\n  PURGE_MAINTENANCE_PERIOD: 3,\r\n  \r\n  ADD_MAINTENANCE_CONFIG_SETTING: 41, //add operation\r\n  DELETE_MAINTENANCE_CONFIG_SETTING: 42, //delete operation\r\n  GET_ACTIVE_MAINTENANCE_WITH_INDICES: 43, //init time\r\n  GET_ACTIVE_MAINTENANCE: 44, //toggle false\r\n  GET_ALL_MAINTENANCE: 45 //toggle true\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/constants/alert-constant.ts","import { AlertNavMenueFields } from \"../interfaces/alert-nav-components\";\r\n\r\nexport const ALERT_NAV_COMPONENT : AlertNavMenueFields[] =[\r\n  {\r\n    icon: \"notifications_active\",\r\n    name: \"Active Alert\",\r\n    value: 'Active Alert',\r\n    redirectTo: 'active',\r\n    toolTip: \"Active Alert\",\r\n    active: false,\r\n    display: false\r\n  },\r\n  {\r\n    icon: \"notifications\",\r\n    name: \"Alert History\",\r\n    value: \"Alert History\",\r\n    redirectTo: \"history\",\r\n    toolTip: \"Alert History\",\r\n    active: false,\r\n    display: false\r\n  },\r\n /*{\r\n    icon: \"subtitles\",\r\n    name: \"Alert Baseline\",\r\n    value: 'Alert Baseline',\r\n    redirectTo: 'baseline',\r\n    toolTip: \"Alert Baseline\",\r\n    active: false\r\n  },*/\r\n  {\r\n    icon: \"art_track\",\r\n    name: \"Alert Rule\",\r\n    value: 'Alert Rule',\r\n    redirectTo: 'rule',\r\n    toolTip: \"Alert Rule\",\r\n    active: false,\r\n    display: false\r\n  },\r\n /* {\r\n    icon: \"bookmark_border\",\r\n    name: \"Alert Action\",\r\n    value: 'Alert Action',\r\n    redirectTo: 'action',\r\n    toolTip: \"Alert Action\",\r\n    active: false\r\n  }, \r\n   {\r\n    icon: \"book\",\r\n    name: \"Alert Policy\",\r\n    value: 'Alert Policy',\r\n    redirectTo: 'policy',\r\n    toolTip: \"Alert Policy\",\r\n    active: false\r\n  }, \r\n  {\r\n    icon: \"notifications\",\r\n    name: \"Alert History\",\r\n    value: 'Alert History',\r\n    redirectTo: 'history',\r\n    toolTip: \"Alert History\",\r\n    active: false\r\n  },*/\r\n  {\r\n    icon: \"av_timer\",\r\n    name: \"Alert Maintenance Window\",\r\n    value: 'Alert Maintenance Window',\r\n    redirectTo: 'maintenance',\r\n    toolTip: \"Alert Maintenance Window\",\r\n    active: false,\r\n    display: false\r\n  },\r\n  {\r\n    icon: \"settings\",\r\n    name: \"Alert Settings\",\r\n    value: 'Alert Settings',\r\n    redirectTo: 'setting',\r\n    toolTip: \"Setting\",\r\n    active: false,\r\n    display: false\r\n  }\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/constants/alert-nav-constant.ts","import { RuleOperator,DataType,Operator,ConditionType,Severity,thresholdType}  from './../interfaces/alert-rule-interface'\r\n\r\nexport const ALERT_RULE_CONST = {\r\n  //rule Req Type\r\n  ADD_RULE: 0,\r\n  EDIT_RULE: 1,\r\n  DELETE_RULE: 2,\r\n  ACTIVE_RULE: 3,\r\n  INACTIVE_RULE: 4,\r\n  UPDATE_RULE: 5,\r\n  GET_RULES: 6,\r\n  GET_INDICES_LIST: 7,\r\n  GET_METRIC_GROUP_LIST: 8,\r\n  GET_METRIC_NAME_LIST: 9,\r\n\r\n  //Severity Type\r\n  SEVERITY_ALL: 0,\r\n  SEVERITY_MINOR: 1,\r\n  SEVERITY_MAJOR: 2,\r\n  SEVERITY_CRITICAL: 3,\r\n  \r\n  //Threshold Type\r\n  AVERAGE_THRESH_TYPE: 0,//Not implemented\r\n  MOVING_AVERAGE_THRESH_TYPE: 1,//Default Threshold Type\r\n  FIXED_TIME_THRESH_TYPE: 2,\r\n  MOVING_AVERAGE_ALL_THRESH_TYPE: 3,\r\n  MOVING_AVERAGE_ADVANCE_THRESH_TYPE: 4,\r\n\r\n  //CheckDataPointType Constants\r\n  CHECK_DATA_POINT_TYPE_LAST: 0,//for consecutive samples\r\n  CHECK_DATA_POINT_TYPE_ANY: 1,\r\n\r\n  //Rule Level\r\n  RULE_LEVEL_ON_TIER: 0,\r\n  RULE_LEVEL_ON_INDIVIDUAL: 1,\r\n\r\n  //Rule Operator Type\r\n  RULE_OPERATOR_TYPE_ANY: 0,\r\n  RULE_OPERATOR_TYPE_EVERY: 1,\r\n\r\n  //Rule Severity Level\r\n  SEVERIRTY_DECISION_ON_PERCENTAGE_OF_SERVER: 0,\r\n  SEVERIRTY_DECISION_ON_NUMBER_OF_SERVER: 1,\r\n  SEVERIRTY_DECISION_ON_AGGRIGATE_OF_SERVER: 2,\r\n  SEVERIRTY_DECISION_ON_INDIVIDUAL_SERVER: 3,\r\n\r\n  //Condition Data Type Constants\r\n  AVERAGE_DATA_TYPE: 0,\r\n  COUNT_DATA_TYPE: 1,\r\n  SUM_DATA_TYPE: 2,\r\n  MINIMUM_DATA_TYPE: 3,\r\n  MAXIMUM_DATA_TYPE: 4,\r\n  VECTOR_COUNT_DATA_TYPE: 5,\r\n\r\n  //New Capacity operator\r\n  OPERATOR_INCREASE_FROM_BASELINE: 0,\r\n  OPERATOR_DECREASE_FROM_BASELINE: 1,\r\n  OPERATOR_CHANGE_FROM_BASELINE: 2,\r\n  OPERATOR_ABSOLUTE_INCREASE: 3,\r\n  OPERATOR_ABSOLUTE_DECREASE: 4,\r\n  OPERATOR_ABSOLUTE_CHANGE: 5,\r\n  OPERATOR_ABSOLUTE_GREATERTHEN_EQUAL: 6,\r\n\r\n   //New Capacity operator Defnition Type\r\n   OPERATOR_DEFINITION_TYPE_PERCENTAGE: 0,\r\n   OPERATOR_DEFINITION_TYPE_ABSOLUTE: 1,\r\n\r\n  DEFAULT_INT_VAL: -50\r\n  \r\n}\r\n\r\nexport const RULE_OPERATOR: RuleOperator[] = [\r\n  {label:\"Any\", value:0},\r\n  {label:\"Every\", value:1}\r\n]\r\n\r\nexport const DATA_TYPE: DataType[] = [\r\n  {label: \"Average\", value: 0},\r\n  {label: \"Sum Count\", value:1},\r\n  {label: \"Sum Value\", value: 2},\r\n  {label: \"Minimum\", value: 3},\r\n  {label: \"Maximum\", value: 4},\r\n  {label: \"Vector Count\", value: 5}\r\n]\r\n\r\nexport const OPERATOR: Operator[] = [\r\n  {label: \"Increase from Baseline\", value: 0},\r\n  {label: \"Decrease from Baseline\", value: 1},\r\n  {label: \"Change from Baseline\", value: 2},\r\n  {label: \"Increase\", value:3},\r\n  {label: \"Decrease\", value: 4},\r\n  {label: \"Change\", value: 5},\r\n  {label: \">=\", value: 6},\r\n  {label: \"<=\", value: 7}\r\n]\r\n\r\nexport const CONDITION_TYPE: ConditionType[] = [\r\n  {label:\"Percentage\", value: 0},\r\n  {label:\"Absolute\", value:1}\r\n]\r\nexport const SEVERITY: Severity[] = [\r\n  {label:\"Critical\", value: 3},\r\n  {label:\"Major\", value:2},\r\n  {label:\"Monor\", value:1}\r\n]\r\n\r\n\r\nexport const THRESHOLD_TYPE: thresholdType[] = [\r\n  {label:\"Moving\", value:\"Moving\"},\r\n  {label:\"Moving Advanced\", value:\"Moving Advanced\"}\r\n]\r\n\r\nexport const TIME_TYPE: thresholdType[] = [\r\n  {label:\"day\", value:\"day\"},\r\n  {label:\"hour\", value:\"hour\"},\r\n  {label:\"minute\", value:\"minute\"}\r\n]\r\n\r\nexport const SAMPLE_TYPE: thresholdType[] = [\r\n  {label:\"Last\", value:\"Last\"},\r\n  {label:\"Any\", value:\"Any\"}\r\n]\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/constants/alert-rule-constant.ts","import { Directive, Input, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[acl-permisson-to]',\r\n  host: {\r\n    '(mouseenter)': 'onMouseenter()',\r\n  }\r\n})\r\nexport class AclPermissonProvider {\r\n  @Input('acl-permisson-to') isAccessPermission: boolean;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  onMouseenter()\r\n  {\r\n    console.log(this.isAccessPermission);\r\n    if(this.isAccessPermission)\r\n      this.el.nativeElement.style = \"cursor: not-allowed !important;\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/directives/acl-permisson-provider.ts","import { Directive, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[disabled-button]',\r\n  host: {\r\n    '(mouseenter)': 'onclickButton($event)',\r\n  }\r\n})\r\nexport class DisableButtonDirective {\r\n  @Input('disabled-button') btnFlage;\r\n\r\n  onclickButton(e)\r\n  {\r\n    console.log(\"OnClick Event ===\", this.btnFlage);\r\n    console.log(\"OnClick Event ===\", e);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/directives/disable-button.ts","import { Directive, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[restrict-decimal]',\r\n  host: {\r\n    '(keyup)': 'onKeyup($event)',\r\n    '(keypress)': 'onKeypress($event)',\r\n  }\r\n})\r\nexport class LimitToIntegerDirective {\r\n  @Input('restrict-decimal') afterDecimalPlace;\r\n  onKeyup(e) {\r\n    const limit = + this.afterDecimalPlace;\r\n    if (limit === 0 && (e.keyCode < 48 || e.keyCode > 57))\r\n      e.preventDefault();\r\n    else if (limit === 1 && e.key !== \".\" && (e.keyCode < 48 || e.keyCode > 57))\r\n    {\r\n        e.preventDefault();\r\n    }\r\n    //else\r\n    //ng - pattern=\"/^[0-9]+(\\.[0-9]{1,2})?$/\r\n    //<input name=\"ReceiveNo\" type = \"text\" class=\"txtbox\" onkeypress = 'validate(event)' maxlength = \"11\" value = \"${cpCon.receiveNo}\" required tabindex = \"34\" onCopy = \"return false\" onDrag = \"return false\" onDrop = \"return false\" onPaste = \"return false\" autocomplete = off />\r\n  }\r\n  onKeypress(e)\r\n  {\r\n    const limit = + this.afterDecimalPlace;\r\n    if (limit === 0 && (e.keyCode < 48 || e.keyCode > 57))\r\n      e.preventDefault();\r\n    if (limit != 0)\r\n    {\r\n      //console.log(e.key);\r\n      if (e.key !== \".\" && (e.keyCode < 48 || e.keyCode > 57))\r\n        return false;\r\n\r\n      let tmpDecimal = e.target.value.split(\".\");\r\n      //console.log(tmpDecimal);\r\n      if ((e.key === \".\" && tmpDecimal.length > 1) || (tmpDecimal[1] !== undefined && tmpDecimal[1].length > limit))\r\n        return false;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/directives/input-field-integer.ts","import { Directive, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[limit-to]',\r\n  host: {\r\n    '(keypress)': 'onKeypress($event)',\r\n  }\r\n})\r\nexport class LimitToDirective {\r\n  @Input('limit-to') maxDigit;\r\n\r\n  onKeypress(e)\r\n  {\r\n    const limit = +this.maxDigit;\r\n    if (e.target.value.length === limit)\r\n      e.preventDefault();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/directives/input-field-limit.ts","import { NgModule } from '@angular/core';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\n\r\nimport {\r\n  MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatPaginatorModule,\r\n  MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule,\r\n  MatDialogModule, MatGridListModule, MatIconModule, MatInputModule,\r\n  MatListModule, MatMenuModule, MatProgressBarModule, MatProgressSpinnerModule,\r\n  MatRadioModule, MatSelectModule, MatSidenavModule, MatSliderModule, MatSortModule,\r\n  MatSlideToggleModule, MatSnackBarModule, MatTableModule, MatTabsModule, MatToolbarModule,\r\n  MatTooltipModule, MatFormFieldModule, MatExpansionModule, MatStepperModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CdkTableModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSidenavModule,\r\n    MatSnackBarModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule\r\n  ],\r\n  exports: [\r\n    CdkTableModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSidenavModule,\r\n    MatSnackBarModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/material.module.ts","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n    TieredMenuModule, MenuModule, MenubarModule, PanelModule, ButtonModule,PaginatorModule,\r\n    SplitButtonModule, SlideMenuModule, PanelMenuModule, TreeModule, InputTextModule, DropdownModule,\r\n    ContextMenuModule, DialogModule, ProgressBarModule, DataTableModule, SharedModule, \r\n    ToolbarModule, CheckboxModule, DragDropModule, AccordionModule, DataGridModule, TooltipModule,\r\n    MultiSelectModule, TabViewModule, TabMenuModule, FieldsetModule, TreeTableModule, CalendarModule, RadioButtonModule,\r\n    GrowlModule, ToggleButtonModule, ConfirmDialogModule, SidebarModule, InputTextareaModule }\r\n    from 'primeng/primeng';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AccordionModule,\r\n    TreeTableModule,\r\n    SharedModule,\r\n    ButtonModule,\r\n    PaginatorModule,\r\n    DropdownModule,\r\n    DataTableModule,\r\n    GrowlModule,\r\n    TooltipModule,\r\n    ToggleButtonModule,\r\n    CalendarModule,\r\n    FieldsetModule,\r\n    CheckboxModule,\r\n    InputTextModule,\r\n    MultiSelectModule,\r\n    DialogModule,\r\n    ConfirmDialogModule,\r\n    ProgressBarModule,\r\n    SidebarModule,\r\n    RadioButtonModule,\r\n    InputTextareaModule,\r\n    PanelModule\r\n  ],\r\n  exports: [\r\n    AccordionModule,\r\n    TreeTableModule,\r\n    SharedModule,\r\n    ButtonModule,\r\n    PaginatorModule,\r\n    DropdownModule,\r\n    DataTableModule,\r\n    GrowlModule,\r\n    TooltipModule,\r\n    ToggleButtonModule,\r\n    CalendarModule,\r\n    FieldsetModule,\r\n    ToolbarModule,\r\n    CheckboxModule,\r\n    InputTextModule,\r\n    MultiSelectModule,\r\n    DialogModule,\r\n    ConfirmDialogModule,\r\n    ProgressBarModule,\r\n    SidebarModule,\r\n    RadioButtonModule,\r\n    InputTextareaModule,\r\n    PanelModule\r\n  ]\r\n})\r\nexport class PrimengModule {}\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/primeng.module.ts","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule} from '@angular/router';\r\nimport { AppComponent } from '../app.component';\r\nimport { BottomPaneComponent } from './../components/active-alert/bottom-pane/bottom-pane.component';\r\nimport { ActiveAlertMainComponent } from './../components/active-alert/active-alert-main/active-alert-main.component';\r\nimport { AlertHistoryMainComponent } from './../components/alert-history/alert-history-main/alert-history-main.component';\r\nimport { AlertSettingComponent } from './../components/alert-setting/alert-setting.component';\r\nimport { AlertMaintenanceComponent } from './../components/alert-maintenance/alert-maintenance.component';\r\nimport { RuleDescriptionComponent } from './../components/alert-rule/rule-description/rule-description.component';\r\nconst ALERT_APP_ROUT: Routes = [\r\n  { path: 'home/alert/active', component: ActiveAlertMainComponent },\r\n      { path: 'home/alert/history', component: AlertHistoryMainComponent },\r\n      { path: 'home/alert/setting', component: AlertSettingComponent },\r\n      { path: 'home/alert/maintenance', component: AlertMaintenanceComponent },\r\n      { path: 'home/alert/rule', component: RuleDescriptionComponent },\r\n      { path: '', redirectTo: 'active', pathMatch: 'full' },\r\n      { path: '**', component: ActiveAlertMainComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(ALERT_APP_ROUT)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class AppRoutingModule{}\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/routes/routes.ts","import {Injectable} from \"@angular/core\";\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Logger } from 'angular2-logger/core';\r\nimport { AlertData} from '../commons/active-alert';\r\nimport { Message } from 'primeng/primeng';\r\nimport { CommonServices } from \"../services/common-services\";\r\n\r\n@Injectable()\r\nexport class ActiveAlertService\r\n{\r\n  //used to store class name\r\n  className = \"ActiveAlertService\";\r\n\r\n  //this will holds the message to display  \r\n  messages: Message[] = [];\r\n\r\n  //this is used to load active alert gui for specific alert type  \r\n  private alertType: string;  \r\n\r\n  //used for alert severity and setting at initial time  \r\n  private activeSeverityType: string;\r\n  \r\n  //This is used to store active alert graph data\r\n  activeAlertGraphData: any;\r\n\r\n  //This is custom event. used to send selected record data to parent component  \r\n  selectedRowData: AlertData[];\r\n\r\n  //constructor\r\n  constructor(private _http: Http, private logger: Logger, private commonServices: CommonServices) { }\r\n  \r\n  public get $alertType(): string\r\n  { \r\n    return this.alertType;\r\n  }\r\n  public set $alertType(value: string)\r\n  { \r\n    this.alertType = value;\r\n  }\r\n  \r\n  public get $activeSeverityType(): string\r\n  {\r\n    return this.activeSeverityType;\r\n  }\r\n  public set $activeSeverityType(value: string)\r\n  {\r\n    this.activeSeverityType = value;\r\n  }\r\n  \r\n  setSelectedRowData(alertData: AlertData[])\r\n  { \r\n    this.selectedRowData = alertData;\r\n  }\r\n\r\n  /*Method is used to get active alert information*/\r\n  getAlertData(alertType: string, alertSeverity: number)\r\n  { \r\n    this.logger.info(\"Going to get data for  this.commonServices.getHostUrl() = \", this.commonServices.getHostUrl(), \" alertType = \", alertType, \"alertSeverity\" , alertSeverity);\r\n    \r\n    return this._http.get(this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/getActiveAlerts?testRun=\" + this.commonServices.$getTRNum + \"&type=\" + alertType + \"&severity=\" + alertSeverity)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  /** This Method is used to set url for show active alert graph data  in dashboard*/\r\n  getAlertGraphData(queryParam: string)\r\n  { \r\n    this.logger.debug(this.className, \" getAlertGraphData \", \"queryParam = \", queryParam);\r\n    if(this.commonServices.$clientConnectionKey == \"\" || this.commonServices.$clientConnectionKey == null || this.commonServices.$clientConnectionKey == undefined)\r\n    {\r\n      this.showMessage('error', 'Error', 'Please open webdashboard and then click on show graph to open graphs');\r\n      return;\r\n    }\r\n    let url = this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/alertHistoryGraphData?testRun=\" + this.commonServices.$getTRNum + \"&client_connection_key=\" + this.commonServices.$clientConnectionKey + queryParam + \"&preset=\" + null + \"&includeToday=\"+ 0;\r\n    this.commonServices.$_alertConfig.setAlertGraphsData(url);\r\n  }\r\n\r\n  /* This method is used to force clear the active alert */  \r\n  forceClear(alertIdObj: any, alertType: string, alertSeverity: number)\r\n  {\r\n    this.logger.info(this.className, \"forceClear\", \"alerts to be force cleared = \" + alertIdObj);\r\n    return this._http.get(this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/forceClear?testRun=\" + this.commonServices.$getTRNum + \"&client_connection_key=\" + this.commonServices.$clientConnectionKey + \"&alertIds=\" + alertIdObj + \"&alertType=\" + alertType + \"&user=\" + this.commonServices.$loginUser + \"&severity=\" + alertSeverity).map(res => res.json());\r\n  }\r\n\r\n  downloadData(fileFormat: string, activeAlertData: any, selectedSeverity: string)\r\n  {\r\n\r\n    let productType = this.$commonService.$productName;\r\n    let object =\r\n      {\r\n        callFrom: \"activeAlert\",\r\n        testRun: this.commonServices.$getTRNum,\r\n        activeAlertData: JSON.stringify(activeAlertData),\r\n        fileFormat: fileFormat,\r\n        selectedSeverity: selectedSeverity,\r\n        productType: productType\r\n      };\r\n    this.logger.info(this.className, \"downloadData\", \"active alert data to be downloaded in : \" + fileFormat + \" format. & selectedSeverity = \" + selectedSeverity + \", productType = \" + productType);\r\n    this._http.post(this.commonServices.$_cavConfigService.getURLByActiveDC() + \"DashboardServer/web/AlertDataService/downloadAlertData\", JSON.stringify(object))\r\n     .map(res => res[\"_body\"])\r\n     .subscribe(\r\n      res => this.openDownloadedFile(res),\r\n      error => this.logger.error(this.className, \"downloadData\", \"Error in downloading active alert data.\" + error)\r\n    );\r\n  }\r\n\r\n  openDownloadedFile(res)\r\n  {\r\n    this.logger.info(this.className, \"openDownloadedFile\", \"File is downloaded with name = \" + res);\r\n    window.open(this.commonServices.$_cavConfigService.getURLByActiveDC() + \"/common/\" + res);        \r\n  }\r\n\r\n  //this will print error message if any error comming on request\r\n  private handleError(error: any): Promise<any> \r\n  {\r\n    this.logger.error(\"Error occured during getting data from server - \", error);\r\n    return Promise.reject(error.message || error);\r\n  }\r\n  \r\n   //Method is used to show message popup  \r\n  showMessage(strSeverity: string, strSummary: string, strDetail: string)\r\n  {\r\n    this.messages.splice(0);\r\n    let mess = { severity: strSeverity, summary: strSummary, detail: strDetail }\r\n    this.messages.push(mess);\r\n    setTimeout(() => {\r\n    this.messages.splice(this.messages.indexOf(mess), 1);\r\n    }, 5000)    \r\n  }\r\n\r\n  public get $commonService(): CommonServices\r\n  { \r\n    return this.commonServices;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/active-alert-services.ts","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Logger } from 'angular2-logger/core';\r\nimport { Message } from 'primeng/primeng';\r\nimport { ServerTimeZoneAndRule } from \"../interfaces/alert-history-interface\";\r\n//import { deserialize, JsonProperty } from 'json-typescript-mapper';\r\nimport { AlertData } from '../commons/active-alert';\r\nimport { AlertHistoryData } from \"../commons/history-data\";\r\nimport { CommonServices } from \"../services/common-services\";\r\n\r\n@Injectable()\r\nexport class HistoryServices\r\n{\r\n  //used to store class name\r\n  className = \"HistoryServices\";\r\n\r\n  //this is used to store left and table panel height\r\n  leftAndTablePanelheight: number;\r\n  \r\n  //this will holds the message to display\r\n  messages: Message[] = [];\r\n\r\n  //This is used to show and hide left filter panel  \r\n  // Observable boolean row grouping\r\n  private showFilterPanelSource = new Subject<boolean>();\r\n  showFilterPanel$ = this.showFilterPanelSource.asObservable();\r\n\r\n  //set boolean value to apply row grouping filter\r\n  setFilterPanelFlag(isShowFilters: boolean)\r\n  {\r\n    this.showFilterPanelSource.next(isShowFilters);\r\n  }\r\n  \r\n  //used to store server timeZone  \r\n  private serverTimeZoneSource = new Subject<string>();\r\n  serverTimeZone$ = this.serverTimeZoneSource.asObservable();\r\n  \r\n  // setting TimeZone\r\n  announceTimeZone(timeZone: string)\r\n  {\r\n    this.serverTimeZoneSource.next(timeZone);\r\n  }\r\n\r\n  //used to store server timeZone  \r\n  serverTimeLong: number;\r\n\r\n  /*Used to store selected AlertData*/\r\n  selectedRecords: AlertData[];\r\n\r\n  // Observable boolean sources\r\n  private deleteSelectedRecord = new Subject<AlertHistoryData>();\r\n  delSelectedRecord$ = this.deleteSelectedRecord.asObservable();\r\n  \r\n  setDeleteRecord(deleteRes: AlertHistoryData)\r\n  {\r\n    this.deleteSelectedRecord.next(deleteRes);\r\n  }\r\n  // Observable boolean sources\r\n  private showTableFilterSource = new Subject<boolean>();\r\n  showTableFilter$ = this.showTableFilterSource.asObservable();\r\n\r\n  //It contains all the filtered data counter and its compelete alert data coming from database\r\n  // Observable Object sources\r\n  private historyDataSource = new Subject<AlertHistoryData>();\r\n  historyData$ = this.historyDataSource.asObservable();\r\n  \r\n  // setting show table filter flag  \r\n  setShowTableFilter(isShowFilter: boolean)\r\n  {\r\n    this.showTableFilterSource.next(isShowFilter);\r\n  }\r\n  \r\n  // Observable boolean row grouping\r\n  private applyRowGroupingSource = new Subject<boolean>();\r\n  applyRowGrouping$ = this.applyRowGroupingSource.asObservable();\r\n\r\n  //set boolean value to apply row grouping filter\r\n  setRowGroupingFlag(isShowFilter: boolean)\r\n  {\r\n    this.applyRowGroupingSource.next(isShowFilter);\r\n  }\r\n  \r\n  \r\n  //This will store the rule names\r\n  private ruleNamesSource = new Subject<string[]>();\r\n  ruleNames$ = this.ruleNamesSource.asObservable();\r\n\r\n  // Service message commands\r\n  announceRuleNames(ruleNames: string[])\r\n  {\r\n    this.ruleNamesSource.next(ruleNames);\r\n  }\r\n  \r\n  //used to set applied preset string in top panel \r\n  private appliedPresetString = new Subject<string>();\r\n  strAppliedPreset$ = this.appliedPresetString.asObservable();\r\n\r\n  // setting applied preset data \r\n  announcePreset(appliedPreset: string, fromTimeStamp:string, toTimeStamp:string, incCurData: number)\r\n  {\r\n    let appliedPresetString = \"\";\r\n    this.$commonServices.$customAppliedPreset = appliedPreset;\r\n    this.$commonServices.$customFromDate = fromTimeStamp;\r\n    this.$commonServices.$customToDate = toTimeStamp;\r\n    this.$commonServices.$customincCurData = incCurData;\r\n    if(appliedPreset == \"Custom\")\r\n      appliedPresetString = \"Filter applied from \" + fromTimeStamp + \" to \" + toTimeStamp;\r\n    else\r\n      appliedPresetString = \"Filter applied for \" + appliedPreset;\r\n    this.appliedPresetString.next(appliedPresetString);\r\n  }\r\n  \r\n  //This will store the call from download is true\r\n  private downloadSource = new Subject<boolean>();\r\n  callFromDownload$ = this.downloadSource.asObservable();\r\n\r\n  callFromDownload(isCallDownload)\r\n  {\r\n    this.downloadSource.next(isCallDownload);\r\n  }\r\n\r\n  //used to set applied arrAppliedFilterInfo array for downloading report \r\n  arrAppliedFilterInfo: String[] = new Array<String>();\r\n\r\n  /*total number of records found in database*/\r\n  totalAvailableRecords: number;  \r\n  \r\n  //constructor\r\n  constructor(private _http: Http, private logger: Logger, public commonServices: CommonServices)\r\n  { \r\n    this.totalAvailableRecords = 0;    \r\n    this.leftAndTablePanelheight = window.innerHeight;\r\n  }\r\n  \r\n  //Method is used to show message popup  \r\n  showMessage(strSeverity: string, strSummary: string, strDetail: string)\r\n  {\r\n    this.messages.splice(0);\r\n    let mess = { severity: strSeverity, summary: strSummary, detail: strDetail }\r\n    this.messages.push(mess);\r\n    setTimeout(() => {\r\n    this.messages.splice(this.messages.indexOf(mess), 1);\r\n    }, 5000)\r\n  }\r\n\r\n  public get $commonServices(): CommonServices\r\n  {\r\n    return this.commonServices;\r\n  }\r\n\r\n  /*Method is used to get active alert information*/\r\n  getTimeZoneAndRuleNames()\r\n  {\r\n    this.logger.info(\"Going to get data for getTimeZoneAndRuleNames\");\r\n\r\n    return this._http.get(this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/timeZoneAndRuleNames\")\r\n      .map(res => res.json()).subscribe(\r\n        res => this.setTimeZoneAndRule(res),\r\n        error => console.log(error)\r\n      );\r\n  }\r\n  \r\n  setTimeZoneAndRule(response: ServerTimeZoneAndRule)\r\n  { \r\n    try\r\n    {\r\n      //console.log(\"setTimeZoneAndRule = \", response);\r\n      if (response.timeZone != undefined)\r\n        this.announceTimeZone(response.timeZone);\r\n    \r\n      if (response.time != undefined)\r\n        this.serverTimeLong = response.time;\r\n    \r\n      if (response.rules != undefined)\r\n        this.announceRuleNames(response.rules);\r\n    \r\n      //console.log(\"this.serverTimeLong = \", this.serverTimeLong);\r\n    }\r\n    catch (e)\r\n    {\r\n      this.logger.error(this.className, \"setTimeZoneAndRule\", \"Exception - \", e);\r\n    }\r\n  }\r\n\r\n  getHistoryfilterData(data: Object)\r\n  { \r\n    try\r\n    {\r\n      const header = new Headers();\r\n      header.append('Content-Type', 'application/json; charset=utf-8');\r\n      this._http.post(this.commonServices.getHostUrl() + '/DashboardServer/web/AlertDataService/getAlertHistoryData', data)\r\n        .map(res => res.json())\r\n        .subscribe(res => this.setHistoryData(res),\r\n        error => {\r\n          this.commonServices.isHideProgress = true;\r\n          this.showMessage(\"error\", \"Error\", error);\r\n        }\r\n        );\r\n    }\r\n    catch (e)\r\n    {\r\n      this.commonServices.isHideProgress = true;\r\n      this.logger.error(this.className, \"getHistoryfilterData\", \"Exception - \", e);\r\n    }\r\n  }\r\n\r\n  /* Method is used to set arrAppliedFilters to send its information at the time of downloading*/\r\n  setArrAppliedFilters(arrAppliedFilters)\r\n  {\r\n    this.arrAppliedFilterInfo = arrAppliedFilters;\r\n  }\r\n\r\n  /* Method is used to deserialized all data and store in historyData*/\r\n  setHistoryData(res)\r\n  { \r\n    //Setting alert data after deserializeing response data\r\n    let historyData: AlertHistoryData = this.commonServices.convertToAlertHistoryData(res);\r\n    if (historyData.errMsg != \"\")    \r\n      this.showMessage('error', 'Error', historyData.errMsg);    \r\n    \r\n    //setting history data array to show data in main table\r\n    this.setHistoryAlertData(historyData);\r\n\r\n    //setting progressValue to 100 for closing progressbar \r\n    this.commonServices.progressValue = 100;\r\n    this.commonServices.isHideProgress = true;\r\n    \r\n    //displaying message\r\n    this.showMessage('success', 'Success', 'Data updated successfully.');  \r\n  }\r\n\r\n  //setting history complete alert data array  \r\n  setHistoryAlertData(historyData: AlertHistoryData)\r\n  {\r\n    this.historyDataSource.next(historyData);\r\n  }\r\n\r\n  //method used to call service for downloading history data  \r\n  downloadHistoryData(fileFormat: string, historyData: any)\r\n  {\r\n    try\r\n    {\r\n      let productType = this.$commonServices.$productName;\r\n      let object =\r\n        {\r\n          callFrom: \"history\",\r\n          testRun: this.commonServices.$getTRNum,\r\n          historyData: JSON.stringify(historyData),\r\n          arrAppliedFiltersInfo: JSON.stringify(this.arrAppliedFilterInfo),\r\n          fileFormat: fileFormat,\r\n          productType: productType\r\n        };\r\n\r\n      this.logger.info(this.className, \"downloadHistoryData\", \"active alert data to be downloaded in : \" + fileFormat + \" format , productType = \" + productType + \", arrAppliedFiltersInfo = \" + JSON.stringify(this.arrAppliedFilterInfo));\r\n\r\n      this._http.post(this.commonServices.$_cavConfigService.getURLByActiveDC() + \"DashboardServer/web/AlertDataService/downloadAlertData\", JSON.stringify(object))\r\n        .map(res => res[\"_body\"])\r\n        .subscribe(\r\n        res => this.openDownloadedFile(res),\r\n        error => {\r\n          this.commonServices.isHideProgress = true;\r\n          this.logger.error(this.className, \"downloadHistoryData\", \"Error in downloading active alert data.\" + error);\r\n        }\r\n        );\r\n    }\r\n    catch (e)\r\n    { \r\n      this.commonServices.isHideProgress = true;\r\n      this.logger.error(this.className, \"downloadHistoryData\", \"Exception - \", e);\r\n    }\r\n  }\r\n\r\n  openDownloadedFile(res)\r\n  {\r\n    this.logger.info(this.className, \"openDownloadedFile\", \"File is downloaded with name = \" + res);\r\n    window.open(this.commonServices.$_cavConfigService.getURLByActiveDC() + \"/common/\" + res);\r\n    this.commonServices.isHideProgress = true;\r\n  }\r\n\r\n  deleteHistoryRecords(data: Object)\r\n  { \r\n    try\r\n    {\r\n      const header = new Headers();\r\n      header.append('Content-Type', 'application/json; charset=utf-8');\r\n      this._http.post(this.commonServices.getHostUrl() + '/DashboardServer/web/AlertDataService/getAlertHistoryData', data)\r\n        .map(res => res.json())\r\n        .subscribe(res => {\r\n          this.setDeleteRecord(res);\r\n        },\r\n        error => {\r\n          this.commonServices.isHideProgress = true;\r\n          this.showMessage(\"error\", \"Error\", error);\r\n        }\r\n        );\r\n    }\r\n    catch (e)\r\n    {\r\n      this.commonServices.isHideProgress = true;\r\n      this.logger.error(this.className, \"deleteHistoryRecords\", \"Exception - \", e);\r\n    }\r\n  }\r\n\r\n  /** method is used to get alert history graph data */\r\n  getAlertHistoryGraphData(graphKey: string)\r\n  { \r\n\r\n    this.logger.info(this.className + ' getAlertHistoryGraphData ' + ' TestRun= '+this.$commonServices.$testRunNum+', client_connection_key= '+this.$commonServices.$clientConnectionKey+\", fromDate = \" +this.$commonServices.$customFromDate + \", toDate = \" + this.$commonServices.$customToDate+\", graphKey = \" +graphKey + \", preset = \" +this.$commonServices.$customAppliedPreset + \",includeToday = \" +this.$commonServices.$customincCurData);\r\n    if(this.commonServices.$clientConnectionKey == \"\" || this.commonServices.$clientConnectionKey == null || this.commonServices.$clientConnectionKey == undefined)\r\n    {\r\n      this.showMessage('error', 'Error', 'Please open webdashboard and then click on show graph to open graphs');\r\n      return;\r\n    }\r\n    let url = this.commonServices.getHostUrl() + '/DashboardServer/web/AlertDataService/alertHistoryGraphData?testRun='+this.$commonServices.$testRunNum+'&client_connection_key='+this.$commonServices.$clientConnectionKey+'&fromDate='+this.$commonServices.$customFromDate+'&toDate='+this.$commonServices.$customToDate+'&graphKey='+graphKey+'&preset='+this.$commonServices.$customAppliedPreset+'&includeToday='+this.$commonServices.$customincCurData;\r\n    this.commonServices.$_alertConfig.setAlertGraphsData(url);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/alert-history-services.ts","import {Injectable} from \"@angular/core\";\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Logger } from 'angular2-logger/core';\r\nimport { Message } from 'primeng/primeng';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { CommonServices } from \"../services/common-services\";\r\nimport { MaintenanceSettings, MaintenanceSettingsData} from '../commons/maintenance-data';\r\nimport * as CONS from \"../constants/alert-constant\";\r\n\r\n@Injectable()\r\nexport class AlertMaintenanceService\r\n{\r\n  /** used to store class name */\r\n  className = \"AlertMaintenanceService\";\r\n\r\n  /**this will holds the message to display */  \r\n  messages: Message[] = [];\r\n\r\n   /*total number of records found in database*/\r\n   totalAvailableRecords: number;  \r\n   \r\n\r\n  maintenanceSettingsData: MaintenanceSettingsData[] = [];\r\n\r\n  /**constructor */\r\n  constructor(private _http: Http, private logger: Logger, private commonServices: CommonServices) {\r\n      this.totalAvailableRecords = 0;    \r\n   }\r\n  \r\n  /**Method is used to get alert access control information*/\r\n  getAccessControlData(moduleName: string, featureName: string)\r\n  { \r\n    this.logger.info(this.className, \"getAccessControlData\", \"Going to get data from server Url = \", this.commonServices.getHostUrl(), \" moduleName = \", moduleName, \"feature = \" , featureName);\r\n    \r\n    return this._http.get(this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/getAccessControl?user=\" + this.commonServices.$loginUser + \"&module=\" + moduleName + \"&feature=\" + featureName)\r\n      .map(res => res.json());\r\n  }\r\n  \r\n  /**Method is used to get alert access control information*/\r\n  getMaintenanceIndices(maintenanceSettings: MaintenanceSettings)\r\n  { \r\n    this.logger.info(this.className, \"getMaintenanceIndices\", \"Going to get data from server.\");\r\n    return this._http.post(this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/getIndices\", maintenanceSettings)\r\n    .map(res => res.json());\r\n  }\r\n  \r\n  /** this method is used to get all maintenance alert setting data */\r\n  getMaintenanceAlertData(alertMaintenanceData: MaintenanceSettings)\r\n  {\r\n    this.logger.info(this.className, \"getMaintenanceAlertData\", \"Going to get data from server.\");\r\n    return this._http.get(\"/DashboardServer/web/AlertDataService/getRuleData\")//this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/getMaintenanceSettings\", alertMaintenanceData)\r\n    .map(res => res.json())\r\n  }\r\n  /** this method is used get alert maintenance data from server */\r\n  applyMaintenanceSettings(alertMaintenanceData: MaintenanceSettings)\r\n  {\r\n    this.logger.info(this.className, \"applyMaintenanceSettings\", \"Going to get data from server.\");\r\n    return this._http.post(this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/applyMaintenanceSettings\", alertMaintenanceData)\r\n    .map(res => res.json());\r\n  }\r\n  /** this method is used to download alert maintenance Data */\r\n  downloadData(fileFormat: string, alertMaintenanceData: any)\r\n  {\r\n    let object =\r\n    {\r\n      callFrom: \"alertMaintenance\",\r\n      testRun: this.commonServices.$getTRNum,\r\n      alertMaintenanceData: JSON.stringify(alertMaintenanceData),\r\n      fileFormat: fileFormat,\r\n      productType: this.commonServices.$productName\r\n    };\r\n    this.logger.info(this.className, \"downloadData\", \"alert maintenance data to be downloaded in : \" + fileFormat + \" format\" + \", productType = \" + this.commonServices.$productName);\r\n    const header = new Headers();\r\n    header.append('Content-Type', 'application/json; charset=utf-8');\r\n    this._http.post(this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/downloadAlertData\", JSON.stringify(object))\r\n      .map(res => res[\"_body\"])\r\n      .subscribe(\r\n      res => this.openDownloadedFile(res),\r\n      error => this.logger.error(this.className, \"downloadData\", \"Error in downloading active alert data.\" + error)\r\n    );\r\n  }\r\n\r\n  openDownloadedFile(res)\r\n  {\r\n    this.logger.info(this.className, \"openDownloadedFile\", \"File is downloaded with name = \" + res);\r\n    window.open(this.commonServices.getHostUrl() + \"/common/\" + res);        \r\n  }\r\n\r\n  /** Method is used to show message popup */ \r\n  showMessage(strSeverity: string, strSummary: string, strDetail: string):Promise<Message[]> \r\n  {\r\n    this.messages.splice(0);\r\n    let mess = { severity: strSeverity, summary: strSummary, detail: strDetail }\r\n    this.messages.push(mess);\r\n    setTimeout(() => {\r\n    this.messages.splice(this.messages.indexOf(mess), 1);\r\n    }, 5000)  \r\n    return Promise.resolve(this.messages);  \r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/alert-maintenance-services.ts","import { Injectable, ViewContainerRef} from \"@angular/core\";\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Logger } from 'angular2-logger/core';\r\nimport { Message } from 'primeng/primeng';\r\nimport { CommonServices } from \"../services/common-services\";\r\n//import { AddNewRuleCondition } from '../components/alert-rule/rule-definition/add-rule-condition';\r\nimport { RuleConditionDefinition } from '../components/alert-rule/rule-definition/rule-condition-definition';\r\nimport * as CONS from \"../constants/alert-rule-constant\";\r\n\r\n@Injectable()\r\nexport class AlertRuleService\r\n{\r\n  arrRuleCondition: any[];\r\n  conditionViewContainerRef: ViewContainerRef;\r\n  arrCriticalCondition: any[];\r\n  criticalViewContainerRef: ViewContainerRef;\r\n  arrMajorCondition: any[];\r\n  majorViewContainerRef: ViewContainerRef;\r\n  arrMinorCondition: any[];\r\n  minorViewContainerRef: ViewContainerRef;\r\n\r\n  /** this is used to store tier list */\r\n  tiersLevel = new Array();\r\n  \r\n  /** this is used to store matric Group list */\r\n  matricGroup = new Array();\r\n\r\n  /** this is used to store matric Name list */\r\n  matricName = new Array();\r\n\r\n  /** this is used to store data type list */\r\n  dataType = new Array();\r\n  operator = new Array();\r\n  baselineName = new Array();\r\n  conditionType = new Array();\r\n\r\n\r\n  constructor(private _http: Http, private logger: Logger, public commonServices: CommonServices)\r\n  {\r\n    this.arrRuleCondition = [];\r\n    this.arrCriticalCondition = [];\r\n    this.arrMajorCondition = [];\r\n    this.arrMinorCondition = [];\r\n  }\r\n\r\n  /*Method is used to get tier level information*/\r\n  getTierLevelData(data: any[])\r\n  { \r\n    this.tiersLevel = [\r\n      {label: \"Cavisson\", value: \"Cavisson\"},\r\n      {label: \"GUIDevTier\", value: \"GUIDevTier\"},\r\n      {label: \"QATier\", value: \"QATier\"},\r\n      {label: \"QAGUIDevTier\", value: \"QAGUIDevTier\"},\r\n    ];\r\n    this.matricGroup = [\r\n      {label: \"Ubuntu54\", value: \"Ubuntu54\"},\r\n      {label: \"NDApplicance\", value: \"NDApplicance\"},\r\n    ];\r\n    this.matricName = [\r\n      {label: \"CMON\", value: \"CMON\"},\r\n      {label: \"LPS\", value: \"LPS\"},\r\n      {label: \"NSServer\", value: \"NSServer\"},\r\n      {label: \"Tomcat\", value: \"Tomcat\"},\r\n    ];\r\n    this.baselineName = [\r\n      {label: \"Load Index Based Baseline\", value: \"Load Index Based Baseline\"},\r\n      {label: \"DailyBasic\", value: \"DailyBasic\"},\r\n      {label: \"WeeklyBasic\", value: \"WeeklyBasic\"},\r\n      {label: \"GoldBaseline\", value: \"GoldBaseline\"},\r\n    ];\r\n    this.dataType = CONS.DATA_TYPE;\r\n    this.operator= CONS.OPERATOR;\r\n    this.conditionType = CONS.CONDITION_TYPE;\r\n    /*try \r\n    {\r\n      this._http.get(\"/DashboardServer/web/AlertDataService/getAlertRule\").map(res => res.json()).subscribe(\r\n      res =>\r\n      {\r\n        res.indicesList.forEach(element => \r\n        {\r\n          this.tiersLevel.push({label: element, value: element, toolTip: element});\r\n        }); \r\n      })\r\n    } \r\n    catch (error) \r\n    {\r\n      \r\n    }*/\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/alert-rule-service.ts","import {Injectable} from \"@angular/core\";\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Logger } from 'angular2-logger/core';\r\nimport { Message } from 'primeng/primeng';\r\nimport { CommonServices } from \"../services/common-services\";\r\nimport { AlertSettings, PolicySettings, ExtensionSettings } from '../commons/setting-data';\r\n\r\n@Injectable()\r\nexport class AlertSettingService\r\n{\r\n  //used to store class name\r\n  className = \"AlertSettingService\";\r\n\r\n  //this will holds the message to display  \r\n  messages: Message[] = [];\r\n\r\n  private alertSettingData = new Subject<AlertSettings>();\r\n  alertSettingData$ = this.alertSettingData.asObservable();\r\n  \r\n\r\n  //constructor\r\n  constructor(private _http: Http, private logger: Logger, private commonServices: CommonServices) {\r\n   }\r\n  \r\n  /**Method is used to get alert access control information*/\r\n  getAccessControlData(moduleName: string, featureName: string)\r\n  { \r\n    this.logger.info(this.className, \"getAccessControlData\", \"Going to get data from server Url = \", this.commonServices.getHostUrl(), \" moduleName = \", moduleName, \"feature = \" , featureName);\r\n    \r\n    return this._http.get(this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/getAccessControl?user=\" + this.commonServices.$loginUser + \"&module=\" + moduleName + \"&feature=\" + featureName)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  /**Method is used to get alert access control information*/\r\n  getSmsMailControlData(component: string)\r\n  { \r\n    this.logger.info(this.className, \"getSmsMailControlData\", \"Going to get data from server Url = \", this.commonServices.getHostUrl(), \" component = \", component);\r\n    \r\n    return this._http.get(this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/getComponentACLParam?user=\" + this.commonServices.$loginUser + \"&component=\" + component)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  /** Method is used to get alert setting information from server*/\r\n  getAlertSettingData()\r\n  {\r\n    try\r\n    {\r\n      this.logger.info(this.className, \"getAlertSettingData\", \"Going to get data from server\");  \r\n      this._http.get(this.commonServices.getHostUrl()+\"/DashboardServer/web/AlertDataService/getAlertSettings\")\r\n        .map(res => res.json()).subscribe(\r\n          res => this.setSettingData(res),\r\n          error =>{\r\n            this.showMessage(\"error\", \"Error\", error);\r\n            this.logger.error(this.className, \"getAlertSettingData\", \"Error in getting data from server.\");\r\n          },\r\n          () => this.logger.info(this.className, \"getAlertSettingData\", \"Request Completed.\")\r\n        );\r\n    }\r\n    catch (e)\r\n    {\r\n      this.commonServices.isHideProgress = true;\r\n      this.logger.error(this.className, \"getAlertSettingData\", \"Exception - \", e);\r\n    }\r\n  }\r\n\r\n  /** Method is used to post alert setting information to server*/\r\n  saveAlertSettingData(alertSettingData)\r\n  {\r\n    this.logger.info(this.className, \"saveAlertSettingData method called.\", ); \r\n    this._http.post(this.commonServices.getHostUrl() + \"/DashboardServer/web/AlertDataService/postAlertSettings\", alertSettingData)\r\n    .map(res => res.json()).subscribe(\r\n      res => this.setSettingData(res),\r\n      error => this.logger.error(this.className, \"saveAlertSettingData\", \"Error in getting data from server.\"),\r\n      () => this.logger.info(this.className, \"saveAlertSettingData\", \"Request Completed.\")\r\n    );\r\n  }\r\n\r\n  /**This is used to set alert setting data after deserialize the original data got from server and set it to alertSettingData variable for future use*/ \r\n  setSettingData(res) \r\n  {\r\n    try\r\n    {\r\n      let alertSettings: AlertSettings = this.convertToAlertSettingtData(res);\r\n      this.setSettingAlertData(alertSettings);\r\n      //setting progressValue to 100 for closing progressbar \r\n      this.commonServices.progressValue = 100;\r\n      this.commonServices.isHideProgress = true;\r\n      this.showMessage(alertSettings.status.toLowerCase() ,alertSettings.status, alertSettings.msg);\r\n    }\r\n    catch (e)\r\n    { \r\n      this.logger.error(this.className, \"setSettingData\", e);\r\n    }\r\n  }\r\n  \r\n  /** this method is used to send data to alert setting module */\r\n  setSettingAlertData(alertSettings: AlertSettings)\r\n  {\r\n    this.alertSettingData.next(alertSettings);\r\n  }\r\n  \r\n  /** this method is used set response to alert setting */\r\n  convertToAlertSettingtData(response): AlertSettings\r\n  {\r\n    let alertSettingData = new AlertSettings();\r\n    try\r\n    {\r\n      alertSettingData.alert = response.alert;\r\n      alertSettingData.capacity = response.capacity;\r\n      alertSettingData.clrCapacityAlert = response.clrCapacityAlert;\r\n      alertSettingData.behaviour = response.behaviour;\r\n      alertSettingData.clrBehaviorAlert = response.clrBehaviorAlert;\r\n      alertSettingData.clrExistingAlert  = response.clrExistingAlert;\r\n      alertSettingData.maintenance = response.maintenance;\r\n      alertSettingData.clrAlertOnMain = response.clrAlertOnMain;\r\n      alertSettingData.clrExtAlertOnInterval = response.clrExtAlertOnInterval;\r\n      alertSettingData.clrExtAlertInt = response.clrExtAlertInt;\r\n      alertSettingData.debugLevel = response.debugLevel;\r\n      alertSettingData.profilingLevel = response.profilingLevel;\r\n      alertSettingData.baselineViewMode = response.baselineViewMode;\r\n      alertSettingData.minBehabiorValueReq = response.minBehabiorValueReq;\r\n      alertSettingData.status = response.status;\r\n      alertSettingData.msg = response.msg;\r\n      alertSettingData.externalAlert = response.externalAlert;\r\n      alertSettingData.clrExternalAlert = response.clrExternalAlert;\r\n      \r\n      let settingPolicytData = new PolicySettings();\r\n      settingPolicytData.onPolicy = response.policy.onPolicy;\r\n      settingPolicytData.mail = response.policy.mail;\r\n      settingPolicytData.sms = response.policy.sms;\r\n      settingPolicytData.snmp = response.policy.snmp;\r\n      settingPolicytData.threadDump = response.policy.threadDump;\r\n      settingPolicytData.heapDump = response.policy.heapDump\r\n      settingPolicytData.tcpDump = response.policy.tcpDump;\r\n      settingPolicytData.cpuProfile = response.policy.cpuProfile;\r\n      settingPolicytData.runScript = response.policy.runScript;\r\n\r\n\r\n      let alertExtension = new ExtensionSettings();\r\n      alertExtension.onExt = response.policy.extension.onExt;\r\n      if (response.policy.extension.extNames != undefined)\r\n      {\r\n          alertExtension.extNames = response.policy.extension.extNames;\r\n      }\r\n      if (response.policy.extension.sExtNames != undefined)\r\n      {\r\n        alertExtension.sExtNames = response.policy.extension.sExtNames;\r\n      }\r\n\r\n      settingPolicytData.extension = alertExtension;\r\n      alertSettingData.policy = settingPolicytData;\r\n\r\n    }\r\n    catch (e)\r\n    {\r\n      this.logger.error(this.className, \"convertToAlertSettingtData\", \"Exception - \", e);\r\n    }\r\n    return alertSettingData;\r\n\r\n  }\r\n\r\n  /** Method is used to show message popup */ \r\n  showMessage(strSeverity: string, strSummary: string, strDetail: string):Promise<Message[]> \r\n  {\r\n    this.messages.splice(0);\r\n    let mess = { severity: strSeverity, summary: strSummary, detail: strDetail }\r\n    this.messages.push(mess);\r\n    setTimeout(() => {\r\n    this.messages.splice(this.messages.indexOf(mess), 1);\r\n    }, 5000)  \r\n    this.logger.info(this.className, \" showMessage \", \"message = \", JSON.stringify(this.messages));\r\n    return Promise.resolve(this.messages);  \r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/alert-setting-services.ts","import { Injectable } from '@angular/core';\nimport { ActiveAlertData, AlertData } from './../commons/active-alert';\nimport { AlertHistoryData } from './../commons/history-data';\nimport { Logger } from 'angular2-logger/core';\nimport { CavConfigService } from '../../../main/services/cav-config.service';\nimport { CavTopPanelNavigationService } from '../../../main/services/cav-top-panel-navigation.service';\nimport { ALERT_NAV_COMPONENT} from '../constants/alert-nav-constant';\nimport {AlertConfigService} from '../../../main/services/alert-config-service';\nimport { Http } from '@angular/http';\nimport { Subject } from \"rxjs/Subject\";\n\n@Injectable()\nexport class CommonServices\n{\n  className = \"CommonServices\";\n  \n    //this will hold top menue items list\n  private _menueItem: any;\n\n  //used to store client connection key\n  private clientConnectionKey: string;\n  \n  //used to store applied graph time\n  private graphTimeLabel: string;\n  \n  //used to store testRun number\n  private testRunNum: number;\n\n  //this will holds login userName\n  private loginUser: string;\n\n  //this will holds product name\n  private productName: string;\n\n  //thus will holds the module name to load\n  private moduleName: string;\n  \n  //this will holds the dialog display is visible or not, this dialog holds progressbar in it\n  displayDialog: boolean;\n\n  //this will holds dialog message when progressbar is running\n  dialogMessage: string;\n\n  //this will holds the progressValue to display progressbar\n  progressValue: number;\n\n  //this will true when response from server is success\n  isHideProgress: boolean;\n\n  //this will holds custom preset toDate\n  customToDate: string;\n\n  //this will holds custom preset fromDate\n  customFromDate: string;\n\n  //this will holds custom preset\n  customAppliedPreset:string;\n\n  //this will holds number to inculde today\n   customincCurData: number;\n   \n   //This will holds alert Id's from active alert\n   selectedAlertIds:string;\n\n   alertAclData: any;\n\n  private alertTypeBehaviour = new Subject<any>();\n  alertType$ = this.alertTypeBehaviour.asObservable();\n  \n  constructor(private logger: Logger,private _http: Http, private _cavConfigService: CavConfigService, private _navService: CavTopPanelNavigationService, private _alertConfig: AlertConfigService)\n  { \n    /*//this.hostName = window.location.origin;\n    this.hostName = \"http://10.10.50.5:8004\";\n    //this.clientConnectionKey = sessionStorage.getItem(\"alert_client_connection_key\");\n    this.clientConnectionKey = \"netstorm:2259:1486132275988\";\n    //this.testRunNum = sessionStorage.getItem(\"alertTestRun\");\n    this.testRunNum = \"2259\";\n    //this.loginUser = sessionStorage.getItem(\"alertUserName\");\n    this.loginUser = \"netdiagnostics\";\n    this.moduleName = \"active\";*/\n    \n  /*  this.loginUser = this._cavConfigService.$userName;\n    this.productName = this._cavConfigService.$productName.toLowerCase();\n    if(this.loginUser == null || this.loginUser == \"\" || this.loginUser == undefined)\n      this.loginUser = sessionStorage.getItem('sesLoginName');\n    if(this.productName == \"netstorm\" || this.productName == \"NetStorm\")\n      this.productName = sessionStorage.getItem('sessServerTitle').toLowerCase();*/\n    this._menueItem =ALERT_NAV_COMPONENT;\n  }\n  \n\n  /*Method is used to change active state*/\n  changeRoutingItemActiveState(path)\n  {\n    this._menueItem.forEach(element =>\n    {\n      if (element.redirectTo == path)\n        element.active = true;\n      else\n        element.active = false;\n    });\n  }\n   public get $menueItem(): any\n  {\n    return this._menueItem;\n  }\n\n  public get $clientConnectionKey(): string\n  { \n    return this.clientConnectionKey;\n  }\n  public set $clientConnectionKey(value: string)\n  { \n    this.clientConnectionKey = value;\n  }\n\n  public get $graphTimeLabel(): string\n  {\n    return this.graphTimeLabel;\n  }\n  public set $graphTimeLabel(value: string)\n  {\n    this.graphTimeLabel = value;\n  }\n\n  public get $testRunNum(): number\n  { \n    return this.testRunNum;\n  }\n  public set $testRunNum(value: number)\n  { \n    this.testRunNum = value;\n  }\n\n  public get $loginUser(): string\n  { \n    return this.loginUser;\n  }\n  public set $loginUser(value: string)\n  { \n    this.loginUser = value;\n  }\n\n  public get $productName(): string\n  { \n    return this.productName;\n  }\n  public set $productName(value: string)\n  { \n    this.productName = value;\n  }\n\n  public get $moduleName(): string\n  { \n    return this.moduleName;\n  }\n  public set $moduleName(value: string)\n  { \n    this.moduleName = value;\n  }\n\n  public get $getTRNum(): number\n  {\n    return this.testRunNum; \n  }\n  \n  public get $customToDate(): string\n  { \n    return this.customToDate;\n  }\n  public set $customToDate(value: string)\n  { \n    this.customToDate = value;\n  }\n\n  public get $customFromDate(): string\n  { \n    return this.customFromDate;\n  }\n  public set $customFromDate(value: string)\n  { \n    this.customFromDate = value;\n  }\n\n  public get $customAppliedPreset(): string\n  { \n    return this.customAppliedPreset;\n  }\n  public set $customAppliedPreset(value: string)\n  { \n    this.customAppliedPreset = value;\n  }\n\n  public get $customincCurData(): number\n  { \n    return this.customincCurData;\n  }\n  public set $customincCurData(value: number)\n  { \n    this.customincCurData = value;\n  }\n  \n\n  public get $selectedAlertIds(): string\n  { \n    return this.selectedAlertIds;\n  }\n  public set $selectedAlertIds(value: string)\n  { \n    this.selectedAlertIds = value;\n  }\n\n  public get $alertAclData(): any\n  { \n    return this.alertAclData;\n  }\n  public set $alertAclData(aclData: any)\n  { \n    this.alertAclData = aclData;\n  }\n\n  /**Method is used to get alert access control information*/\n  getAccessControlData(moduleName: string, featureName: string)\n  { \n    this.logger.info(this.className, \"getAccessControlData\", \"Going to get data from server Url = \", this.getHostUrl(), \" moduleName = \", moduleName, \"feature = \" , featureName);\n    \n    return this._http.get(this.getHostUrl() + \"/DashboardServer/web/AlertDataService/getAccessControl?user=\" + this.loginUser + \"&module=\" + moduleName + \"&feature=\" + featureName)\n      .map(res => res.json());\n  }\n\n  /*Method is used get DC Name*/ \n  getDcName():string \n  {\n    if(sessionStorage.getItem('isMultiDCMode') == undefined || sessionStorage.getItem('isMultiDCMode') == null)\n      return \"\";\n    else\n      return (this._navService.getDCNameForScreen(\"alert\") == undefined) ? this._cavConfigService.getActiveDC() : this._navService.getDCNameForScreen(\"alert\");\n  }\n  \n  setAlertTypeBehaviour(alertType: string, dc: any){\n    let  data = {\n      aTypes: alertType,\n      dcName: dc\n    }\n    this.alertTypeBehaviour.next(data);\n  }\n  \n  /*Method is used get host url*/  \n  getHostUrl(): string\n  { \n    var hostDcName;\n    if(this._navService.getDCNameForScreen(\"alert\") === undefined)\n      hostDcName = this._cavConfigService.getINSAggrPrefix ();\n    else\n      hostDcName =  this._cavConfigService.getINSAggrPrefix () + this._navService.getDCNameForScreen(\"alert\");\n    this.logger.info(this.className, \"getHostUrl\", \"hostDcName =\" + hostDcName + \", this.testRunNum =\" + this.testRunNum + \", this.loginUser =\" + this.loginUser + \", this.productName =\" + this.productName + \", clientConnectionKey = \" + this.clientConnectionKey + \", graphTimeLabel = \" + this.graphTimeLabel);\n    return hostDcName;\n  }\n\n  /*Method is used to show progressbar  */\n  showProgressBar(progressMessage: string)\n  {\n    this.progressValue = 0;\n    this.displayDialog = true;\n    /* initializing progressbar variables */\n    this.dialogMessage = progressMessage;\n    this.isHideProgress = false;\n    let interval = setInterval(() =>\n    {\n      if (this.progressValue < 85)\n      {\n        this.progressValue = this.progressValue + Math.floor(Math.random() * 10) + 1;\n        if (this.progressValue == 100)//in case progressValue is 100 then decrease it\n          this.progressValue = 86;  \n      }\n\n      if (this.isHideProgress == true)\n      {\n        this.progressValue = 100;\n        this.displayDialog = false;\n\n        clearInterval(interval); //to hide ProgressBar\n      }\n    }, 500);\n  }\n\n  /*This method is used to convert responce into ActiveAlertData type and return the resultant object*/  \n  convertToActiveAlertData(response): ActiveAlertData\n  { \n    let activeAlertData = new ActiveAlertData();\n    try\n    {\n      activeAlertData.alertType = response.at;\n      activeAlertData.critical = response.tcr;\n      activeAlertData.major = response.tmj;\n      activeAlertData.minor = response.tmi;\n      activeAlertData.testRun = response.tr;\n      let arrAlertData = [];\n      if (response.data != undefined)\n      {\n        response.data.forEach(element =>\n        {\n          let alertData = new AlertData();\n          alertData.serialNum = element.sNo;\n          alertData.alertID = element.aId;\n          alertData.alertValue = element.av;\n          alertData.ruleId = element.rId;\n          alertData.ruleName = element.rName;\n          alertData.alertCondition = element.aCon;\n          alertData.ruleDesc = element.rDesc;\n          alertData.alertType = element.aType;\n          alertData.severity = element.sev;\n          alertData.alertTime = element.aTime;\n          alertData.timeAgo = element.tAgo;\n          alertData.alertMsg = element.aMsg;\n          alertData.startTime = element.sTime;\n          alertData.endTime = element.eTime;\n          alertData.groupName = element.groName;\n          alertData.groupId = element.groId;\n          alertData.graphNames = element.graName;\n          alertData.graphId = element.graId;\n          alertData.metaData = element.mData;\n          alertData.vectorName = element.vName;\n          alertData.tier = element.tier;\n          alertData.server = element.ser;\n          alertData.instance = element.inst;\n          alertData.baselineIdx = element.blIdx;\n          alertData.baselineName = element.blName;\n          alertData.loadAvgValue = element.laValue;\n          alertData.loadTierName = element.ltName;\n          alertData.loadGroupId = element.lGroId;\n          alertData.loadGraphId = element.lGraId;\n          alertData.criticalThreshold = element.cth;\n          alertData.majorThreshold = element.majth;\n          alertData.minorThreshold = element.minth;\n          alertData.thresholdValue = element.thv;\n          alertData.timeWindow = element.tw;\n          alertData.numSamples = element.ns;\n          alertData.status = element.status;\n          alertData.state = element.state;\n          alertData.primarykey = element.pKey;\n          alertData.previousSeverity = element.pSev;\n          alertData.actionFlag = element.aFlag;\n          alertData.eventType = element.eType;\n          alertData.dc = element.dc;\n\t  alertData.graphType = element.gType;\n\t  alertData.derivedVectors = element.dVectors;\n          alertData.sourceIp = element.sIP;\n          alertData.sourcePort = element.sPort;\n          alertData.sourceProt = element.sProt;\n          arrAlertData.push(alertData);\n        });\n      }\n      activeAlertData.arrAlertData = arrAlertData;\n    }\n    catch (e)\n    { \n      this.logger.error(this.className, \"convertIntoActiveAlertData\", \"Exception - \", e);\n      this.isHideProgress = true;\n    }\n    return activeAlertData;\n  }\n\n  /*This method is used to convert responce into ActiveAlertData type and return the resultant object*/\n  convertToAlertHistoryData(response): AlertHistoryData\n  {\n    let historyData = new AlertHistoryData();\n    try\n    {\n      historyData.newCriCtr = response.nCrc;\n      historyData.newMajCtr = response.nMjc;\n      historyData.newMinCtr = response.nMic;\n      historyData.newNorCtr = response.nNoc;\n      historyData.contiCriCtr = response.cCrc;\n      historyData.contiMajorCtr = response.cMjc;\n      historyData.contiMinorCtr = response.cMic;\n      historyData.endCriCtr = response.eCrc;\n      historyData.endMajCtr = response.eMjc;\n      historyData.endMinCtr = response.eMic;\n      historyData.upMinMajCtr = response.uMiMjc;\n      historyData.upMinCriCtr = response.uMiCrc;\n      historyData.upMajCriCtr = response.uMjCrc;\n      historyData.downCriMajCtr = response.dCrMjc;\n      historyData.downCriMinCtr = response.dCrMic;\n      historyData.downMajMinCtr = response.dMjMic;\n      historyData.forceClearCtr = response.fClc;\n      historyData.clearRuleChCtr = response.cRcCtr;\n      historyData.allAlertCtr = response.aAc;\n      historyData.capacityCtr = response.caAc;\n      historyData.behaviorCtr = response.beAc;\n      historyData.otherCtr = response.aOc;\n      historyData.ruleChCtr = response.aRc;\n      historyData.baselineChCtr = response.aBc;\n      historyData.settingChCtr = response.aSc;\n      historyData.maintenanceChCtr = response.aMc;\n      historyData.tomcatChCtr = response.aTc;\n      historyData.errMsg = response.eMsg;\n\n      let arrAlertData = [];\n      \n      if (response.data != undefined)\n      {\n        response.data.forEach(element =>\n        {\n          let alertData = new AlertData();\n          alertData.serialNum = element.sNo;\n          alertData.alertID = element.aId;\n          alertData.alertValue = element.av;\n          alertData.ruleId = element.rId;\n          alertData.ruleName = element.rName;\n          alertData.alertCondition = element.aCon;\n          alertData.ruleDesc = element.rDesc;\n          if(element.aType == 'All')\n            alertData.alertType = \"Other\";\n          else\n            alertData.alertType = element.aType;\n          alertData.severity = element.sev;\n          alertData.alertTime = element.aTime;\n          alertData.timeAgo = element.tAgo;\n          alertData.alertMsg = element.aMsg;\n          alertData.startTime = element.sTime;\n          alertData.endTime = element.eTime;\n          alertData.groupName = element.groName;\n          alertData.groupId = element.groId;\n          alertData.graphNames = element.graName;\n          alertData.graphId = element.graId;\n          alertData.metaData = element.mData;\n          alertData.vectorName = element.vName;\n          alertData.tier = element.tier;\n          alertData.server = element.ser;\n          alertData.instance = element.inst;\n          alertData.baselineIdx = element.blIdx;\n          alertData.baselineName = element.blName;\n          alertData.loadAvgValue = element.laValue;\n          alertData.loadTierName = element.ltName;\n          alertData.loadGroupId = element.lGroId;\n          alertData.loadGraphId = element.lGraId;\n          alertData.criticalThreshold = element.cth;\n          alertData.majorThreshold = element.majth;\n          alertData.minorThreshold = element.minth;\n          alertData.thresholdValue = element.thv;\n          alertData.timeWindow = element.tw;\n          alertData.numSamples = element.ns;\n          alertData.status = element.status;\n          alertData.state = element.state;\n          alertData.primarykey = element.pKey;\n          alertData.previousSeverity = element.pSev;\n          alertData.actionFlag = element.aFlag;\n          alertData.eventType = element.eType;\n          alertData.dc = element.dc;\n\t  alertData.graphType = element.gType;\n          alertData.derivedVectors = element.dVectors;\n          alertData.sourceIp = element.sIP;\n          alertData.sourcePort = element.sPort;\n          alertData.sourceProt = element.sProt;\n          arrAlertData.push(alertData);\n        });\n      }\n      historyData.arrHistoryData = arrAlertData;\n    }\n    catch (e)\n    {\n      this.logger.error(this.className, \"convertIntoActiveAlertData\", \"Exception - \", e);\n      this.isHideProgress = true;\n    }\n    return historyData;\n  }\n  public get $_cavConfigService(): CavConfigService\n  { \n    return this._cavConfigService;\n  }\n\n   public get $_alertConfig(): AlertConfigService\n  { \n    return this._alertConfig;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/app/modules/alert/services/common-services.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/modules/alert/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/uttam.bhagat/Desktop/alert-project/src/main.ts","var map = {\n\t\"./af\": \"../../../../moment/locale/af.js\",\n\t\"./af.js\": \"../../../../moment/locale/af.js\",\n\t\"./ar\": \"../../../../moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../../../moment/locale/ar.js\",\n\t\"./az\": \"../../../../moment/locale/az.js\",\n\t\"./az.js\": \"../../../../moment/locale/az.js\",\n\t\"./be\": \"../../../../moment/locale/be.js\",\n\t\"./be.js\": \"../../../../moment/locale/be.js\",\n\t\"./bg\": \"../../../../moment/locale/bg.js\",\n\t\"./bg.js\": \"../../../../moment/locale/bg.js\",\n\t\"./bm\": \"../../../../moment/locale/bm.js\",\n\t\"./bm.js\": \"../../../../moment/locale/bm.js\",\n\t\"./bn\": \"../../../../moment/locale/bn.js\",\n\t\"./bn.js\": \"../../../../moment/locale/bn.js\",\n\t\"./bo\": \"../../../../moment/locale/bo.js\",\n\t\"./bo.js\": \"../../../../moment/locale/bo.js\",\n\t\"./br\": \"../../../../moment/locale/br.js\",\n\t\"./br.js\": \"../../../../moment/locale/br.js\",\n\t\"./bs\": \"../../../../moment/locale/bs.js\",\n\t\"./bs.js\": \"../../../../moment/locale/bs.js\",\n\t\"./ca\": \"../../../../moment/locale/ca.js\",\n\t\"./ca.js\": \"../../../../moment/locale/ca.js\",\n\t\"./cs\": \"../../../../moment/locale/cs.js\",\n\t\"./cs.js\": \"../../../../moment/locale/cs.js\",\n\t\"./cv\": \"../../../../moment/locale/cv.js\",\n\t\"./cv.js\": \"../../../../moment/locale/cv.js\",\n\t\"./cy\": \"../../../../moment/locale/cy.js\",\n\t\"./cy.js\": \"../../../../moment/locale/cy.js\",\n\t\"./da\": \"../../../../moment/locale/da.js\",\n\t\"./da.js\": \"../../../../moment/locale/da.js\",\n\t\"./de\": \"../../../../moment/locale/de.js\",\n\t\"./de-at\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../../../moment/locale/de.js\",\n\t\"./dv\": \"../../../../moment/locale/dv.js\",\n\t\"./dv.js\": \"../../../../moment/locale/dv.js\",\n\t\"./el\": \"../../../../moment/locale/el.js\",\n\t\"./el.js\": \"../../../../moment/locale/el.js\",\n\t\"./en-au\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-nz\": \"../../../../moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../../../moment/locale/en-nz.js\",\n\t\"./eo\": \"../../../../moment/locale/eo.js\",\n\t\"./eo.js\": \"../../../../moment/locale/eo.js\",\n\t\"./es\": \"../../../../moment/locale/es.js\",\n\t\"./es-do\": \"../../../../moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../../../moment/locale/es-do.js\",\n\t\"./es-us\": \"../../../../moment/locale/es-us.js\",\n\t\"./es-us.js\": \"../../../../moment/locale/es-us.js\",\n\t\"./es.js\": \"../../../../moment/locale/es.js\",\n\t\"./et\": \"../../../../moment/locale/et.js\",\n\t\"./et.js\": \"../../../../moment/locale/et.js\",\n\t\"./eu\": \"../../../../moment/locale/eu.js\",\n\t\"./eu.js\": \"../../../../moment/locale/eu.js\",\n\t\"./fa\": \"../../../../moment/locale/fa.js\",\n\t\"./fa.js\": \"../../../../moment/locale/fa.js\",\n\t\"./fi\": \"../../../../moment/locale/fi.js\",\n\t\"./fi.js\": \"../../../../moment/locale/fi.js\",\n\t\"./fo\": \"../../../../moment/locale/fo.js\",\n\t\"./fo.js\": \"../../../../moment/locale/fo.js\",\n\t\"./fr\": \"../../../../moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../../../moment/locale/fr.js\",\n\t\"./fy\": \"../../../../moment/locale/fy.js\",\n\t\"./fy.js\": \"../../../../moment/locale/fy.js\",\n\t\"./gd\": \"../../../../moment/locale/gd.js\",\n\t\"./gd.js\": \"../../../../moment/locale/gd.js\",\n\t\"./gl\": \"../../../../moment/locale/gl.js\",\n\t\"./gl.js\": \"../../../../moment/locale/gl.js\",\n\t\"./gom-latn\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./gu\": \"../../../../moment/locale/gu.js\",\n\t\"./gu.js\": \"../../../../moment/locale/gu.js\",\n\t\"./he\": \"../../../../moment/locale/he.js\",\n\t\"./he.js\": \"../../../../moment/locale/he.js\",\n\t\"./hi\": \"../../../../moment/locale/hi.js\",\n\t\"./hi.js\": \"../../../../moment/locale/hi.js\",\n\t\"./hr\": \"../../../../moment/locale/hr.js\",\n\t\"./hr.js\": \"../../../../moment/locale/hr.js\",\n\t\"./hu\": \"../../../../moment/locale/hu.js\",\n\t\"./hu.js\": \"../../../../moment/locale/hu.js\",\n\t\"./hy-am\": \"../../../../moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../../../moment/locale/hy-am.js\",\n\t\"./id\": \"../../../../moment/locale/id.js\",\n\t\"./id.js\": \"../../../../moment/locale/id.js\",\n\t\"./is\": \"../../../../moment/locale/is.js\",\n\t\"./is.js\": \"../../../../moment/locale/is.js\",\n\t\"./it\": \"../../../../moment/locale/it.js\",\n\t\"./it.js\": \"../../../../moment/locale/it.js\",\n\t\"./ja\": \"../../../../moment/locale/ja.js\",\n\t\"./ja.js\": \"../../../../moment/locale/ja.js\",\n\t\"./jv\": \"../../../../moment/locale/jv.js\",\n\t\"./jv.js\": \"../../../../moment/locale/jv.js\",\n\t\"./ka\": \"../../../../moment/locale/ka.js\",\n\t\"./ka.js\": \"../../../../moment/locale/ka.js\",\n\t\"./kk\": \"../../../../moment/locale/kk.js\",\n\t\"./kk.js\": \"../../../../moment/locale/kk.js\",\n\t\"./km\": \"../../../../moment/locale/km.js\",\n\t\"./km.js\": \"../../../../moment/locale/km.js\",\n\t\"./kn\": \"../../../../moment/locale/kn.js\",\n\t\"./kn.js\": \"../../../../moment/locale/kn.js\",\n\t\"./ko\": \"../../../../moment/locale/ko.js\",\n\t\"./ko.js\": \"../../../../moment/locale/ko.js\",\n\t\"./ky\": \"../../../../moment/locale/ky.js\",\n\t\"./ky.js\": \"../../../../moment/locale/ky.js\",\n\t\"./lb\": \"../../../../moment/locale/lb.js\",\n\t\"./lb.js\": \"../../../../moment/locale/lb.js\",\n\t\"./lo\": \"../../../../moment/locale/lo.js\",\n\t\"./lo.js\": \"../../../../moment/locale/lo.js\",\n\t\"./lt\": \"../../../../moment/locale/lt.js\",\n\t\"./lt.js\": \"../../../../moment/locale/lt.js\",\n\t\"./lv\": \"../../../../moment/locale/lv.js\",\n\t\"./lv.js\": \"../../../../moment/locale/lv.js\",\n\t\"./me\": \"../../../../moment/locale/me.js\",\n\t\"./me.js\": \"../../../../moment/locale/me.js\",\n\t\"./mi\": \"../../../../moment/locale/mi.js\",\n\t\"./mi.js\": \"../../../../moment/locale/mi.js\",\n\t\"./mk\": \"../../../../moment/locale/mk.js\",\n\t\"./mk.js\": \"../../../../moment/locale/mk.js\",\n\t\"./ml\": \"../../../../moment/locale/ml.js\",\n\t\"./ml.js\": \"../../../../moment/locale/ml.js\",\n\t\"./mr\": \"../../../../moment/locale/mr.js\",\n\t\"./mr.js\": \"../../../../moment/locale/mr.js\",\n\t\"./ms\": \"../../../../moment/locale/ms.js\",\n\t\"./ms-my\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../../../moment/locale/ms.js\",\n\t\"./mt\": \"../../../../moment/locale/mt.js\",\n\t\"./mt.js\": \"../../../../moment/locale/mt.js\",\n\t\"./my\": \"../../../../moment/locale/my.js\",\n\t\"./my.js\": \"../../../../moment/locale/my.js\",\n\t\"./nb\": \"../../../../moment/locale/nb.js\",\n\t\"./nb.js\": \"../../../../moment/locale/nb.js\",\n\t\"./ne\": \"../../../../moment/locale/ne.js\",\n\t\"./ne.js\": \"../../../../moment/locale/ne.js\",\n\t\"./nl\": \"../../../../moment/locale/nl.js\",\n\t\"./nl-be\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../../../moment/locale/nl.js\",\n\t\"./nn\": \"../../../../moment/locale/nn.js\",\n\t\"./nn.js\": \"../../../../moment/locale/nn.js\",\n\t\"./pa-in\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pl\": \"../../../../moment/locale/pl.js\",\n\t\"./pl.js\": \"../../../../moment/locale/pl.js\",\n\t\"./pt\": \"../../../../moment/locale/pt.js\",\n\t\"./pt-br\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../../../moment/locale/pt.js\",\n\t\"./ro\": \"../../../../moment/locale/ro.js\",\n\t\"./ro.js\": \"../../../../moment/locale/ro.js\",\n\t\"./ru\": \"../../../../moment/locale/ru.js\",\n\t\"./ru.js\": \"../../../../moment/locale/ru.js\",\n\t\"./sd\": \"../../../../moment/locale/sd.js\",\n\t\"./sd.js\": \"../../../../moment/locale/sd.js\",\n\t\"./se\": \"../../../../moment/locale/se.js\",\n\t\"./se.js\": \"../../../../moment/locale/se.js\",\n\t\"./si\": \"../../../../moment/locale/si.js\",\n\t\"./si.js\": \"../../../../moment/locale/si.js\",\n\t\"./sk\": \"../../../../moment/locale/sk.js\",\n\t\"./sk.js\": \"../../../../moment/locale/sk.js\",\n\t\"./sl\": \"../../../../moment/locale/sl.js\",\n\t\"./sl.js\": \"../../../../moment/locale/sl.js\",\n\t\"./sq\": \"../../../../moment/locale/sq.js\",\n\t\"./sq.js\": \"../../../../moment/locale/sq.js\",\n\t\"./sr\": \"../../../../moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../../../moment/locale/sr.js\",\n\t\"./ss\": \"../../../../moment/locale/ss.js\",\n\t\"./ss.js\": \"../../../../moment/locale/ss.js\",\n\t\"./sv\": \"../../../../moment/locale/sv.js\",\n\t\"./sv.js\": \"../../../../moment/locale/sv.js\",\n\t\"./sw\": \"../../../../moment/locale/sw.js\",\n\t\"./sw.js\": \"../../../../moment/locale/sw.js\",\n\t\"./ta\": \"../../../../moment/locale/ta.js\",\n\t\"./ta.js\": \"../../../../moment/locale/ta.js\",\n\t\"./te\": \"../../../../moment/locale/te.js\",\n\t\"./te.js\": \"../../../../moment/locale/te.js\",\n\t\"./tet\": \"../../../../moment/locale/tet.js\",\n\t\"./tet.js\": \"../../../../moment/locale/tet.js\",\n\t\"./th\": \"../../../../moment/locale/th.js\",\n\t\"./th.js\": \"../../../../moment/locale/th.js\",\n\t\"./tl-ph\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../../../moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../../../moment/locale/tlh.js\",\n\t\"./tr\": \"../../../../moment/locale/tr.js\",\n\t\"./tr.js\": \"../../../../moment/locale/tr.js\",\n\t\"./tzl\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzm\": \"../../../../moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../../../moment/locale/tzm.js\",\n\t\"./uk\": \"../../../../moment/locale/uk.js\",\n\t\"./uk.js\": \"../../../../moment/locale/uk.js\",\n\t\"./ur\": \"../../../../moment/locale/ur.js\",\n\t\"./ur.js\": \"../../../../moment/locale/ur.js\",\n\t\"./uz\": \"../../../../moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../../../moment/locale/uz.js\",\n\t\"./vi\": \"../../../../moment/locale/vi.js\",\n\t\"./vi.js\": \"../../../../moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../../../moment/locale/yo.js\",\n\t\"./yo.js\": \"../../../../moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"../../../../moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../../../moment/locale/zh-tw.js\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../../../moment/locale recursive ^\\\\.\\\\/.*$\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/uttam.bhagat/Desktop/alert-project/node_modules/moment/locale ^\\.\\/.*$\n// module id = ../../../../moment/locale recursive ^\\.\\/.*$\n// module chunks = main"],"sourceRoot":"webpack:///"}